// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::ap_ST_fsm_state1 = "1";
const sc_lv<32> pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<16> pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::ap_const_lv16_0 = "0000000000000000";
const bool pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::ap_const_boolean_1 = true;

pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_0_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read );
    sensitive << ( res_0_V_preg );

    SC_METHOD(thread_res_0_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_10_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read2 );
    sensitive << ( res_10_V_preg );

    SC_METHOD(thread_res_10_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_11_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read12 );
    sensitive << ( res_11_V_preg );

    SC_METHOD(thread_res_11_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_12_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read22 );
    sensitive << ( res_12_V_preg );

    SC_METHOD(thread_res_12_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_13_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read32 );
    sensitive << ( res_13_V_preg );

    SC_METHOD(thread_res_13_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_14_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read42 );
    sensitive << ( res_14_V_preg );

    SC_METHOD(thread_res_14_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_15_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read3 );
    sensitive << ( res_15_V_preg );

    SC_METHOD(thread_res_15_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_16_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read13 );
    sensitive << ( res_16_V_preg );

    SC_METHOD(thread_res_16_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_17_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read23 );
    sensitive << ( res_17_V_preg );

    SC_METHOD(thread_res_17_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_18_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read33 );
    sensitive << ( res_18_V_preg );

    SC_METHOD(thread_res_18_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_19_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read43 );
    sensitive << ( res_19_V_preg );

    SC_METHOD(thread_res_19_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_1_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read10 );
    sensitive << ( res_1_V_preg );

    SC_METHOD(thread_res_1_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_20_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read4 );
    sensitive << ( res_20_V_preg );

    SC_METHOD(thread_res_20_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_21_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read14 );
    sensitive << ( res_21_V_preg );

    SC_METHOD(thread_res_21_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_22_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read24 );
    sensitive << ( res_22_V_preg );

    SC_METHOD(thread_res_22_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_23_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read34 );
    sensitive << ( res_23_V_preg );

    SC_METHOD(thread_res_23_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_24_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read44 );
    sensitive << ( res_24_V_preg );

    SC_METHOD(thread_res_24_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_25_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read5 );
    sensitive << ( res_25_V_preg );

    SC_METHOD(thread_res_25_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_26_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read15 );
    sensitive << ( res_26_V_preg );

    SC_METHOD(thread_res_26_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_27_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read25 );
    sensitive << ( res_27_V_preg );

    SC_METHOD(thread_res_27_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_28_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read35 );
    sensitive << ( res_28_V_preg );

    SC_METHOD(thread_res_28_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_29_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read45 );
    sensitive << ( res_29_V_preg );

    SC_METHOD(thread_res_29_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_2_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read20 );
    sensitive << ( res_2_V_preg );

    SC_METHOD(thread_res_2_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_30_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read6 );
    sensitive << ( res_30_V_preg );

    SC_METHOD(thread_res_30_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_31_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read16 );
    sensitive << ( res_31_V_preg );

    SC_METHOD(thread_res_31_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_32_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read26 );
    sensitive << ( res_32_V_preg );

    SC_METHOD(thread_res_32_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_33_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read36 );
    sensitive << ( res_33_V_preg );

    SC_METHOD(thread_res_33_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_34_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read46 );
    sensitive << ( res_34_V_preg );

    SC_METHOD(thread_res_34_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_35_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read7 );
    sensitive << ( res_35_V_preg );

    SC_METHOD(thread_res_35_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_36_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read17 );
    sensitive << ( res_36_V_preg );

    SC_METHOD(thread_res_36_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_37_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read27 );
    sensitive << ( res_37_V_preg );

    SC_METHOD(thread_res_37_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_38_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read37 );
    sensitive << ( res_38_V_preg );

    SC_METHOD(thread_res_38_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_39_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read47 );
    sensitive << ( res_39_V_preg );

    SC_METHOD(thread_res_39_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_3_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read30 );
    sensitive << ( res_3_V_preg );

    SC_METHOD(thread_res_3_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_40_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read8 );
    sensitive << ( res_40_V_preg );

    SC_METHOD(thread_res_40_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_41_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read18 );
    sensitive << ( res_41_V_preg );

    SC_METHOD(thread_res_41_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_42_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read28 );
    sensitive << ( res_42_V_preg );

    SC_METHOD(thread_res_42_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_43_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read38 );
    sensitive << ( res_43_V_preg );

    SC_METHOD(thread_res_43_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_44_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read48 );
    sensitive << ( res_44_V_preg );

    SC_METHOD(thread_res_44_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_45_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read9 );
    sensitive << ( res_45_V_preg );

    SC_METHOD(thread_res_45_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_46_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read19 );
    sensitive << ( res_46_V_preg );

    SC_METHOD(thread_res_46_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_47_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read29 );
    sensitive << ( res_47_V_preg );

    SC_METHOD(thread_res_47_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_48_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read39 );
    sensitive << ( res_48_V_preg );

    SC_METHOD(thread_res_48_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_49_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read49 );
    sensitive << ( res_49_V_preg );

    SC_METHOD(thread_res_49_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_4_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read40 );
    sensitive << ( res_4_V_preg );

    SC_METHOD(thread_res_4_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_5_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read1 );
    sensitive << ( res_5_V_preg );

    SC_METHOD(thread_res_5_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_6_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read11 );
    sensitive << ( res_6_V_preg );

    SC_METHOD(thread_res_6_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_7_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read21 );
    sensitive << ( res_7_V_preg );

    SC_METHOD(thread_res_7_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_8_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read31 );
    sensitive << ( res_8_V_preg );

    SC_METHOD(thread_res_8_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_res_9_V);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_read41 );
    sensitive << ( res_9_V_preg );

    SC_METHOD(thread_res_9_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    res_0_V_preg = "0000000000000000";
    res_5_V_preg = "0000000000000000";
    res_10_V_preg = "0000000000000000";
    res_15_V_preg = "0000000000000000";
    res_20_V_preg = "0000000000000000";
    res_25_V_preg = "0000000000000000";
    res_30_V_preg = "0000000000000000";
    res_35_V_preg = "0000000000000000";
    res_40_V_preg = "0000000000000000";
    res_45_V_preg = "0000000000000000";
    res_1_V_preg = "0000000000000000";
    res_6_V_preg = "0000000000000000";
    res_11_V_preg = "0000000000000000";
    res_16_V_preg = "0000000000000000";
    res_21_V_preg = "0000000000000000";
    res_26_V_preg = "0000000000000000";
    res_31_V_preg = "0000000000000000";
    res_36_V_preg = "0000000000000000";
    res_41_V_preg = "0000000000000000";
    res_46_V_preg = "0000000000000000";
    res_2_V_preg = "0000000000000000";
    res_7_V_preg = "0000000000000000";
    res_12_V_preg = "0000000000000000";
    res_17_V_preg = "0000000000000000";
    res_22_V_preg = "0000000000000000";
    res_27_V_preg = "0000000000000000";
    res_32_V_preg = "0000000000000000";
    res_37_V_preg = "0000000000000000";
    res_42_V_preg = "0000000000000000";
    res_47_V_preg = "0000000000000000";
    res_3_V_preg = "0000000000000000";
    res_8_V_preg = "0000000000000000";
    res_13_V_preg = "0000000000000000";
    res_18_V_preg = "0000000000000000";
    res_23_V_preg = "0000000000000000";
    res_28_V_preg = "0000000000000000";
    res_33_V_preg = "0000000000000000";
    res_38_V_preg = "0000000000000000";
    res_43_V_preg = "0000000000000000";
    res_48_V_preg = "0000000000000000";
    res_4_V_preg = "0000000000000000";
    res_9_V_preg = "0000000000000000";
    res_14_V_preg = "0000000000000000";
    res_19_V_preg = "0000000000000000";
    res_24_V_preg = "0000000000000000";
    res_29_V_preg = "0000000000000000";
    res_34_V_preg = "0000000000000000";
    res_39_V_preg = "0000000000000000";
    res_44_V_preg = "0000000000000000";
    res_49_V_preg = "0000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, res_0_V, "(port)res_0_V");
    sc_trace(mVcdFile, res_0_V_ap_vld, "(port)res_0_V_ap_vld");
    sc_trace(mVcdFile, res_1_V, "(port)res_1_V");
    sc_trace(mVcdFile, res_1_V_ap_vld, "(port)res_1_V_ap_vld");
    sc_trace(mVcdFile, res_2_V, "(port)res_2_V");
    sc_trace(mVcdFile, res_2_V_ap_vld, "(port)res_2_V_ap_vld");
    sc_trace(mVcdFile, res_3_V, "(port)res_3_V");
    sc_trace(mVcdFile, res_3_V_ap_vld, "(port)res_3_V_ap_vld");
    sc_trace(mVcdFile, res_4_V, "(port)res_4_V");
    sc_trace(mVcdFile, res_4_V_ap_vld, "(port)res_4_V_ap_vld");
    sc_trace(mVcdFile, res_5_V, "(port)res_5_V");
    sc_trace(mVcdFile, res_5_V_ap_vld, "(port)res_5_V_ap_vld");
    sc_trace(mVcdFile, res_6_V, "(port)res_6_V");
    sc_trace(mVcdFile, res_6_V_ap_vld, "(port)res_6_V_ap_vld");
    sc_trace(mVcdFile, res_7_V, "(port)res_7_V");
    sc_trace(mVcdFile, res_7_V_ap_vld, "(port)res_7_V_ap_vld");
    sc_trace(mVcdFile, res_8_V, "(port)res_8_V");
    sc_trace(mVcdFile, res_8_V_ap_vld, "(port)res_8_V_ap_vld");
    sc_trace(mVcdFile, res_9_V, "(port)res_9_V");
    sc_trace(mVcdFile, res_9_V_ap_vld, "(port)res_9_V_ap_vld");
    sc_trace(mVcdFile, res_10_V, "(port)res_10_V");
    sc_trace(mVcdFile, res_10_V_ap_vld, "(port)res_10_V_ap_vld");
    sc_trace(mVcdFile, res_11_V, "(port)res_11_V");
    sc_trace(mVcdFile, res_11_V_ap_vld, "(port)res_11_V_ap_vld");
    sc_trace(mVcdFile, res_12_V, "(port)res_12_V");
    sc_trace(mVcdFile, res_12_V_ap_vld, "(port)res_12_V_ap_vld");
    sc_trace(mVcdFile, res_13_V, "(port)res_13_V");
    sc_trace(mVcdFile, res_13_V_ap_vld, "(port)res_13_V_ap_vld");
    sc_trace(mVcdFile, res_14_V, "(port)res_14_V");
    sc_trace(mVcdFile, res_14_V_ap_vld, "(port)res_14_V_ap_vld");
    sc_trace(mVcdFile, res_15_V, "(port)res_15_V");
    sc_trace(mVcdFile, res_15_V_ap_vld, "(port)res_15_V_ap_vld");
    sc_trace(mVcdFile, res_16_V, "(port)res_16_V");
    sc_trace(mVcdFile, res_16_V_ap_vld, "(port)res_16_V_ap_vld");
    sc_trace(mVcdFile, res_17_V, "(port)res_17_V");
    sc_trace(mVcdFile, res_17_V_ap_vld, "(port)res_17_V_ap_vld");
    sc_trace(mVcdFile, res_18_V, "(port)res_18_V");
    sc_trace(mVcdFile, res_18_V_ap_vld, "(port)res_18_V_ap_vld");
    sc_trace(mVcdFile, res_19_V, "(port)res_19_V");
    sc_trace(mVcdFile, res_19_V_ap_vld, "(port)res_19_V_ap_vld");
    sc_trace(mVcdFile, res_20_V, "(port)res_20_V");
    sc_trace(mVcdFile, res_20_V_ap_vld, "(port)res_20_V_ap_vld");
    sc_trace(mVcdFile, res_21_V, "(port)res_21_V");
    sc_trace(mVcdFile, res_21_V_ap_vld, "(port)res_21_V_ap_vld");
    sc_trace(mVcdFile, res_22_V, "(port)res_22_V");
    sc_trace(mVcdFile, res_22_V_ap_vld, "(port)res_22_V_ap_vld");
    sc_trace(mVcdFile, res_23_V, "(port)res_23_V");
    sc_trace(mVcdFile, res_23_V_ap_vld, "(port)res_23_V_ap_vld");
    sc_trace(mVcdFile, res_24_V, "(port)res_24_V");
    sc_trace(mVcdFile, res_24_V_ap_vld, "(port)res_24_V_ap_vld");
    sc_trace(mVcdFile, res_25_V, "(port)res_25_V");
    sc_trace(mVcdFile, res_25_V_ap_vld, "(port)res_25_V_ap_vld");
    sc_trace(mVcdFile, res_26_V, "(port)res_26_V");
    sc_trace(mVcdFile, res_26_V_ap_vld, "(port)res_26_V_ap_vld");
    sc_trace(mVcdFile, res_27_V, "(port)res_27_V");
    sc_trace(mVcdFile, res_27_V_ap_vld, "(port)res_27_V_ap_vld");
    sc_trace(mVcdFile, res_28_V, "(port)res_28_V");
    sc_trace(mVcdFile, res_28_V_ap_vld, "(port)res_28_V_ap_vld");
    sc_trace(mVcdFile, res_29_V, "(port)res_29_V");
    sc_trace(mVcdFile, res_29_V_ap_vld, "(port)res_29_V_ap_vld");
    sc_trace(mVcdFile, res_30_V, "(port)res_30_V");
    sc_trace(mVcdFile, res_30_V_ap_vld, "(port)res_30_V_ap_vld");
    sc_trace(mVcdFile, res_31_V, "(port)res_31_V");
    sc_trace(mVcdFile, res_31_V_ap_vld, "(port)res_31_V_ap_vld");
    sc_trace(mVcdFile, res_32_V, "(port)res_32_V");
    sc_trace(mVcdFile, res_32_V_ap_vld, "(port)res_32_V_ap_vld");
    sc_trace(mVcdFile, res_33_V, "(port)res_33_V");
    sc_trace(mVcdFile, res_33_V_ap_vld, "(port)res_33_V_ap_vld");
    sc_trace(mVcdFile, res_34_V, "(port)res_34_V");
    sc_trace(mVcdFile, res_34_V_ap_vld, "(port)res_34_V_ap_vld");
    sc_trace(mVcdFile, res_35_V, "(port)res_35_V");
    sc_trace(mVcdFile, res_35_V_ap_vld, "(port)res_35_V_ap_vld");
    sc_trace(mVcdFile, res_36_V, "(port)res_36_V");
    sc_trace(mVcdFile, res_36_V_ap_vld, "(port)res_36_V_ap_vld");
    sc_trace(mVcdFile, res_37_V, "(port)res_37_V");
    sc_trace(mVcdFile, res_37_V_ap_vld, "(port)res_37_V_ap_vld");
    sc_trace(mVcdFile, res_38_V, "(port)res_38_V");
    sc_trace(mVcdFile, res_38_V_ap_vld, "(port)res_38_V_ap_vld");
    sc_trace(mVcdFile, res_39_V, "(port)res_39_V");
    sc_trace(mVcdFile, res_39_V_ap_vld, "(port)res_39_V_ap_vld");
    sc_trace(mVcdFile, res_40_V, "(port)res_40_V");
    sc_trace(mVcdFile, res_40_V_ap_vld, "(port)res_40_V_ap_vld");
    sc_trace(mVcdFile, res_41_V, "(port)res_41_V");
    sc_trace(mVcdFile, res_41_V_ap_vld, "(port)res_41_V_ap_vld");
    sc_trace(mVcdFile, res_42_V, "(port)res_42_V");
    sc_trace(mVcdFile, res_42_V_ap_vld, "(port)res_42_V_ap_vld");
    sc_trace(mVcdFile, res_43_V, "(port)res_43_V");
    sc_trace(mVcdFile, res_43_V_ap_vld, "(port)res_43_V_ap_vld");
    sc_trace(mVcdFile, res_44_V, "(port)res_44_V");
    sc_trace(mVcdFile, res_44_V_ap_vld, "(port)res_44_V_ap_vld");
    sc_trace(mVcdFile, res_45_V, "(port)res_45_V");
    sc_trace(mVcdFile, res_45_V_ap_vld, "(port)res_45_V_ap_vld");
    sc_trace(mVcdFile, res_46_V, "(port)res_46_V");
    sc_trace(mVcdFile, res_46_V_ap_vld, "(port)res_46_V_ap_vld");
    sc_trace(mVcdFile, res_47_V, "(port)res_47_V");
    sc_trace(mVcdFile, res_47_V_ap_vld, "(port)res_47_V_ap_vld");
    sc_trace(mVcdFile, res_48_V, "(port)res_48_V");
    sc_trace(mVcdFile, res_48_V_ap_vld, "(port)res_48_V_ap_vld");
    sc_trace(mVcdFile, res_49_V, "(port)res_49_V");
    sc_trace(mVcdFile, res_49_V_ap_vld, "(port)res_49_V_ap_vld");
    sc_trace(mVcdFile, p_read, "(port)p_read");
    sc_trace(mVcdFile, p_read1, "(port)p_read1");
    sc_trace(mVcdFile, p_read2, "(port)p_read2");
    sc_trace(mVcdFile, p_read3, "(port)p_read3");
    sc_trace(mVcdFile, p_read4, "(port)p_read4");
    sc_trace(mVcdFile, p_read5, "(port)p_read5");
    sc_trace(mVcdFile, p_read6, "(port)p_read6");
    sc_trace(mVcdFile, p_read7, "(port)p_read7");
    sc_trace(mVcdFile, p_read8, "(port)p_read8");
    sc_trace(mVcdFile, p_read9, "(port)p_read9");
    sc_trace(mVcdFile, p_read10, "(port)p_read10");
    sc_trace(mVcdFile, p_read11, "(port)p_read11");
    sc_trace(mVcdFile, p_read12, "(port)p_read12");
    sc_trace(mVcdFile, p_read13, "(port)p_read13");
    sc_trace(mVcdFile, p_read14, "(port)p_read14");
    sc_trace(mVcdFile, p_read15, "(port)p_read15");
    sc_trace(mVcdFile, p_read16, "(port)p_read16");
    sc_trace(mVcdFile, p_read17, "(port)p_read17");
    sc_trace(mVcdFile, p_read18, "(port)p_read18");
    sc_trace(mVcdFile, p_read19, "(port)p_read19");
    sc_trace(mVcdFile, p_read20, "(port)p_read20");
    sc_trace(mVcdFile, p_read21, "(port)p_read21");
    sc_trace(mVcdFile, p_read22, "(port)p_read22");
    sc_trace(mVcdFile, p_read23, "(port)p_read23");
    sc_trace(mVcdFile, p_read24, "(port)p_read24");
    sc_trace(mVcdFile, p_read25, "(port)p_read25");
    sc_trace(mVcdFile, p_read26, "(port)p_read26");
    sc_trace(mVcdFile, p_read27, "(port)p_read27");
    sc_trace(mVcdFile, p_read28, "(port)p_read28");
    sc_trace(mVcdFile, p_read29, "(port)p_read29");
    sc_trace(mVcdFile, p_read30, "(port)p_read30");
    sc_trace(mVcdFile, p_read31, "(port)p_read31");
    sc_trace(mVcdFile, p_read32, "(port)p_read32");
    sc_trace(mVcdFile, p_read33, "(port)p_read33");
    sc_trace(mVcdFile, p_read34, "(port)p_read34");
    sc_trace(mVcdFile, p_read35, "(port)p_read35");
    sc_trace(mVcdFile, p_read36, "(port)p_read36");
    sc_trace(mVcdFile, p_read37, "(port)p_read37");
    sc_trace(mVcdFile, p_read38, "(port)p_read38");
    sc_trace(mVcdFile, p_read39, "(port)p_read39");
    sc_trace(mVcdFile, p_read40, "(port)p_read40");
    sc_trace(mVcdFile, p_read41, "(port)p_read41");
    sc_trace(mVcdFile, p_read42, "(port)p_read42");
    sc_trace(mVcdFile, p_read43, "(port)p_read43");
    sc_trace(mVcdFile, p_read44, "(port)p_read44");
    sc_trace(mVcdFile, p_read45, "(port)p_read45");
    sc_trace(mVcdFile, p_read46, "(port)p_read46");
    sc_trace(mVcdFile, p_read47, "(port)p_read47");
    sc_trace(mVcdFile, p_read48, "(port)p_read48");
    sc_trace(mVcdFile, p_read49, "(port)p_read49");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, res_0_V_preg, "res_0_V_preg");
    sc_trace(mVcdFile, res_5_V_preg, "res_5_V_preg");
    sc_trace(mVcdFile, res_10_V_preg, "res_10_V_preg");
    sc_trace(mVcdFile, res_15_V_preg, "res_15_V_preg");
    sc_trace(mVcdFile, res_20_V_preg, "res_20_V_preg");
    sc_trace(mVcdFile, res_25_V_preg, "res_25_V_preg");
    sc_trace(mVcdFile, res_30_V_preg, "res_30_V_preg");
    sc_trace(mVcdFile, res_35_V_preg, "res_35_V_preg");
    sc_trace(mVcdFile, res_40_V_preg, "res_40_V_preg");
    sc_trace(mVcdFile, res_45_V_preg, "res_45_V_preg");
    sc_trace(mVcdFile, res_1_V_preg, "res_1_V_preg");
    sc_trace(mVcdFile, res_6_V_preg, "res_6_V_preg");
    sc_trace(mVcdFile, res_11_V_preg, "res_11_V_preg");
    sc_trace(mVcdFile, res_16_V_preg, "res_16_V_preg");
    sc_trace(mVcdFile, res_21_V_preg, "res_21_V_preg");
    sc_trace(mVcdFile, res_26_V_preg, "res_26_V_preg");
    sc_trace(mVcdFile, res_31_V_preg, "res_31_V_preg");
    sc_trace(mVcdFile, res_36_V_preg, "res_36_V_preg");
    sc_trace(mVcdFile, res_41_V_preg, "res_41_V_preg");
    sc_trace(mVcdFile, res_46_V_preg, "res_46_V_preg");
    sc_trace(mVcdFile, res_2_V_preg, "res_2_V_preg");
    sc_trace(mVcdFile, res_7_V_preg, "res_7_V_preg");
    sc_trace(mVcdFile, res_12_V_preg, "res_12_V_preg");
    sc_trace(mVcdFile, res_17_V_preg, "res_17_V_preg");
    sc_trace(mVcdFile, res_22_V_preg, "res_22_V_preg");
    sc_trace(mVcdFile, res_27_V_preg, "res_27_V_preg");
    sc_trace(mVcdFile, res_32_V_preg, "res_32_V_preg");
    sc_trace(mVcdFile, res_37_V_preg, "res_37_V_preg");
    sc_trace(mVcdFile, res_42_V_preg, "res_42_V_preg");
    sc_trace(mVcdFile, res_47_V_preg, "res_47_V_preg");
    sc_trace(mVcdFile, res_3_V_preg, "res_3_V_preg");
    sc_trace(mVcdFile, res_8_V_preg, "res_8_V_preg");
    sc_trace(mVcdFile, res_13_V_preg, "res_13_V_preg");
    sc_trace(mVcdFile, res_18_V_preg, "res_18_V_preg");
    sc_trace(mVcdFile, res_23_V_preg, "res_23_V_preg");
    sc_trace(mVcdFile, res_28_V_preg, "res_28_V_preg");
    sc_trace(mVcdFile, res_33_V_preg, "res_33_V_preg");
    sc_trace(mVcdFile, res_38_V_preg, "res_38_V_preg");
    sc_trace(mVcdFile, res_43_V_preg, "res_43_V_preg");
    sc_trace(mVcdFile, res_48_V_preg, "res_48_V_preg");
    sc_trace(mVcdFile, res_4_V_preg, "res_4_V_preg");
    sc_trace(mVcdFile, res_9_V_preg, "res_9_V_preg");
    sc_trace(mVcdFile, res_14_V_preg, "res_14_V_preg");
    sc_trace(mVcdFile, res_19_V_preg, "res_19_V_preg");
    sc_trace(mVcdFile, res_24_V_preg, "res_24_V_preg");
    sc_trace(mVcdFile, res_29_V_preg, "res_29_V_preg");
    sc_trace(mVcdFile, res_34_V_preg, "res_34_V_preg");
    sc_trace(mVcdFile, res_39_V_preg, "res_39_V_preg");
    sc_trace(mVcdFile, res_44_V_preg, "res_44_V_preg");
    sc_trace(mVcdFile, res_49_V_preg, "res_49_V_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::~pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_0_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_0_V_preg = p_read.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_10_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_10_V_preg = p_read2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_11_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_11_V_preg = p_read12.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_12_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_12_V_preg = p_read22.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_13_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_13_V_preg = p_read32.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_14_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_14_V_preg = p_read42.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_15_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_15_V_preg = p_read3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_16_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_16_V_preg = p_read13.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_17_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_17_V_preg = p_read23.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_18_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_18_V_preg = p_read33.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_19_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_19_V_preg = p_read43.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_1_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_1_V_preg = p_read10.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_20_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_20_V_preg = p_read4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_21_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_21_V_preg = p_read14.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_22_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_22_V_preg = p_read24.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_23_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_23_V_preg = p_read34.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_24_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_24_V_preg = p_read44.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_25_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_25_V_preg = p_read5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_26_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_26_V_preg = p_read15.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_27_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_27_V_preg = p_read25.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_28_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_28_V_preg = p_read35.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_29_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_29_V_preg = p_read45.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_2_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_2_V_preg = p_read20.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_30_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_30_V_preg = p_read6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_31_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_31_V_preg = p_read16.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_32_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_32_V_preg = p_read26.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_33_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_33_V_preg = p_read36.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_34_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_34_V_preg = p_read46.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_35_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_35_V_preg = p_read7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_36_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_36_V_preg = p_read17.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_37_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_37_V_preg = p_read27.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_38_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_38_V_preg = p_read37.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_39_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_39_V_preg = p_read47.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_3_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_3_V_preg = p_read30.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_40_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_40_V_preg = p_read8.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_41_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_41_V_preg = p_read18.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_42_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_42_V_preg = p_read28.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_43_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_43_V_preg = p_read38.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_44_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_44_V_preg = p_read48.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_45_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_45_V_preg = p_read9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_46_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_46_V_preg = p_read19.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_47_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_47_V_preg = p_read29.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_48_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_48_V_preg = p_read39.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_49_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_49_V_preg = p_read49.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_4_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_4_V_preg = p_read40.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_5_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_5_V_preg = p_read1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_6_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_6_V_preg = p_read11.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_7_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_7_V_preg = p_read21.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_8_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_8_V_preg = p_read31.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        res_9_V_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            res_9_V_preg = p_read41.read();
        }
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_0_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_0_V = p_read.read();
    } else {
        res_0_V = res_0_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_0_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_0_V_ap_vld = ap_const_logic_1;
    } else {
        res_0_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_10_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_10_V = p_read2.read();
    } else {
        res_10_V = res_10_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_10_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_10_V_ap_vld = ap_const_logic_1;
    } else {
        res_10_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_11_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_11_V = p_read12.read();
    } else {
        res_11_V = res_11_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_11_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_11_V_ap_vld = ap_const_logic_1;
    } else {
        res_11_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_12_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_12_V = p_read22.read();
    } else {
        res_12_V = res_12_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_12_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_12_V_ap_vld = ap_const_logic_1;
    } else {
        res_12_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_13_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_13_V = p_read32.read();
    } else {
        res_13_V = res_13_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_13_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_13_V_ap_vld = ap_const_logic_1;
    } else {
        res_13_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_14_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_14_V = p_read42.read();
    } else {
        res_14_V = res_14_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_14_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_14_V_ap_vld = ap_const_logic_1;
    } else {
        res_14_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_15_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_15_V = p_read3.read();
    } else {
        res_15_V = res_15_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_15_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_15_V_ap_vld = ap_const_logic_1;
    } else {
        res_15_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_16_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_16_V = p_read13.read();
    } else {
        res_16_V = res_16_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_16_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_16_V_ap_vld = ap_const_logic_1;
    } else {
        res_16_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_17_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_17_V = p_read23.read();
    } else {
        res_17_V = res_17_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_17_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_17_V_ap_vld = ap_const_logic_1;
    } else {
        res_17_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_18_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_18_V = p_read33.read();
    } else {
        res_18_V = res_18_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_18_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_18_V_ap_vld = ap_const_logic_1;
    } else {
        res_18_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_19_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_19_V = p_read43.read();
    } else {
        res_19_V = res_19_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_19_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_19_V_ap_vld = ap_const_logic_1;
    } else {
        res_19_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_1_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_1_V = p_read10.read();
    } else {
        res_1_V = res_1_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_1_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_1_V_ap_vld = ap_const_logic_1;
    } else {
        res_1_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_20_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_20_V = p_read4.read();
    } else {
        res_20_V = res_20_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_20_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_20_V_ap_vld = ap_const_logic_1;
    } else {
        res_20_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_21_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_21_V = p_read14.read();
    } else {
        res_21_V = res_21_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_21_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_21_V_ap_vld = ap_const_logic_1;
    } else {
        res_21_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_22_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_22_V = p_read24.read();
    } else {
        res_22_V = res_22_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_22_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_22_V_ap_vld = ap_const_logic_1;
    } else {
        res_22_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_23_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_23_V = p_read34.read();
    } else {
        res_23_V = res_23_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_23_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_23_V_ap_vld = ap_const_logic_1;
    } else {
        res_23_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_24_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_24_V = p_read44.read();
    } else {
        res_24_V = res_24_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_24_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_24_V_ap_vld = ap_const_logic_1;
    } else {
        res_24_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_25_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_25_V = p_read5.read();
    } else {
        res_25_V = res_25_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_25_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_25_V_ap_vld = ap_const_logic_1;
    } else {
        res_25_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_26_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_26_V = p_read15.read();
    } else {
        res_26_V = res_26_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_26_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_26_V_ap_vld = ap_const_logic_1;
    } else {
        res_26_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_27_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_27_V = p_read25.read();
    } else {
        res_27_V = res_27_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_27_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_27_V_ap_vld = ap_const_logic_1;
    } else {
        res_27_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_28_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_28_V = p_read35.read();
    } else {
        res_28_V = res_28_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_28_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_28_V_ap_vld = ap_const_logic_1;
    } else {
        res_28_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_29_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_29_V = p_read45.read();
    } else {
        res_29_V = res_29_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_29_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_29_V_ap_vld = ap_const_logic_1;
    } else {
        res_29_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_2_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_2_V = p_read20.read();
    } else {
        res_2_V = res_2_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_2_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_2_V_ap_vld = ap_const_logic_1;
    } else {
        res_2_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_30_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_30_V = p_read6.read();
    } else {
        res_30_V = res_30_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_30_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_30_V_ap_vld = ap_const_logic_1;
    } else {
        res_30_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_31_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_31_V = p_read16.read();
    } else {
        res_31_V = res_31_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_31_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_31_V_ap_vld = ap_const_logic_1;
    } else {
        res_31_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_32_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_32_V = p_read26.read();
    } else {
        res_32_V = res_32_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_32_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_32_V_ap_vld = ap_const_logic_1;
    } else {
        res_32_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_33_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_33_V = p_read36.read();
    } else {
        res_33_V = res_33_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_33_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_33_V_ap_vld = ap_const_logic_1;
    } else {
        res_33_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_34_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_34_V = p_read46.read();
    } else {
        res_34_V = res_34_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_34_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_34_V_ap_vld = ap_const_logic_1;
    } else {
        res_34_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_35_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_35_V = p_read7.read();
    } else {
        res_35_V = res_35_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_35_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_35_V_ap_vld = ap_const_logic_1;
    } else {
        res_35_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_36_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_36_V = p_read17.read();
    } else {
        res_36_V = res_36_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_36_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_36_V_ap_vld = ap_const_logic_1;
    } else {
        res_36_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_37_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_37_V = p_read27.read();
    } else {
        res_37_V = res_37_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_37_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_37_V_ap_vld = ap_const_logic_1;
    } else {
        res_37_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_38_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_38_V = p_read37.read();
    } else {
        res_38_V = res_38_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_38_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_38_V_ap_vld = ap_const_logic_1;
    } else {
        res_38_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_39_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_39_V = p_read47.read();
    } else {
        res_39_V = res_39_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_39_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_39_V_ap_vld = ap_const_logic_1;
    } else {
        res_39_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_3_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_3_V = p_read30.read();
    } else {
        res_3_V = res_3_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_3_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_3_V_ap_vld = ap_const_logic_1;
    } else {
        res_3_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_40_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_40_V = p_read8.read();
    } else {
        res_40_V = res_40_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_40_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_40_V_ap_vld = ap_const_logic_1;
    } else {
        res_40_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_41_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_41_V = p_read18.read();
    } else {
        res_41_V = res_41_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_41_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_41_V_ap_vld = ap_const_logic_1;
    } else {
        res_41_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_42_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_42_V = p_read28.read();
    } else {
        res_42_V = res_42_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_42_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_42_V_ap_vld = ap_const_logic_1;
    } else {
        res_42_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_43_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_43_V = p_read38.read();
    } else {
        res_43_V = res_43_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_43_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_43_V_ap_vld = ap_const_logic_1;
    } else {
        res_43_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_44_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_44_V = p_read48.read();
    } else {
        res_44_V = res_44_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_44_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_44_V_ap_vld = ap_const_logic_1;
    } else {
        res_44_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_45_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_45_V = p_read9.read();
    } else {
        res_45_V = res_45_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_45_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_45_V_ap_vld = ap_const_logic_1;
    } else {
        res_45_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_46_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_46_V = p_read19.read();
    } else {
        res_46_V = res_46_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_46_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_46_V_ap_vld = ap_const_logic_1;
    } else {
        res_46_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_47_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_47_V = p_read29.read();
    } else {
        res_47_V = res_47_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_47_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_47_V_ap_vld = ap_const_logic_1;
    } else {
        res_47_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_48_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_48_V = p_read39.read();
    } else {
        res_48_V = res_48_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_48_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_48_V_ap_vld = ap_const_logic_1;
    } else {
        res_48_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_49_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_49_V = p_read49.read();
    } else {
        res_49_V = res_49_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_49_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_49_V_ap_vld = ap_const_logic_1;
    } else {
        res_49_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_4_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_4_V = p_read40.read();
    } else {
        res_4_V = res_4_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_4_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_4_V_ap_vld = ap_const_logic_1;
    } else {
        res_4_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_5_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_5_V = p_read1.read();
    } else {
        res_5_V = res_5_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_5_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_5_V_ap_vld = ap_const_logic_1;
    } else {
        res_5_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_6_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_6_V = p_read11.read();
    } else {
        res_6_V = res_6_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_6_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_6_V_ap_vld = ap_const_logic_1;
    } else {
        res_6_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_7_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_7_V = p_read21.read();
    } else {
        res_7_V = res_7_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_7_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_7_V_ap_vld = ap_const_logic_1;
    } else {
        res_7_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_8_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_8_V = p_read31.read();
    } else {
        res_8_V = res_8_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_8_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_8_V_ap_vld = ap_const_logic_1;
    } else {
        res_8_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_9_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_9_V = p_read41.read();
    } else {
        res_9_V = res_9_V_preg.read();
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_res_9_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_9_V_ap_vld = ap_const_logic_1;
    } else {
        res_9_V_ap_vld = ap_const_logic_0;
    }
}

void pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state1;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

