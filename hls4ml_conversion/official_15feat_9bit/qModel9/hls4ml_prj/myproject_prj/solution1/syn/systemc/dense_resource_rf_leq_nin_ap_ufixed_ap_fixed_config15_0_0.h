// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_config15_0_0_HH_
#define _dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_config15_0_0_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_mux_83_9_1_1.h"
#include "dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_config15_0_0mb6.h"

namespace ap_rtl {

struct dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_config15_0_0 : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<9> > p_read;
    sc_in< sc_lv<9> > p_read1;
    sc_in< sc_lv<9> > p_read2;
    sc_in< sc_lv<9> > p_read3;
    sc_in< sc_lv<9> > p_read4;
    sc_in< sc_lv<9> > p_read5;
    sc_in< sc_lv<9> > p_read6;
    sc_in< sc_lv<9> > p_read7;
    sc_in< sc_lv<9> > p_read8;
    sc_in< sc_lv<9> > p_read9;
    sc_out< sc_lv<15> > ap_return;


    // Module declarations
    dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_config15_0_0(sc_module_name name);
    SC_HAS_PROCESS(dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_config15_0_0);

    ~dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_config15_0_0();

    sc_trace_file* mVcdFile;

    dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_config15_0_0mb6* w15_V_U;
    myproject_mux_83_9_1_1<1,1,9,9,9,9,9,9,9,9,3,9>* myproject_mux_83_9_1_1_U4237;
    myproject_mux_83_9_1_1<1,1,9,9,9,9,9,9,9,9,3,9>* myproject_mux_83_9_1_1_U4238;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > icmp_ln64_fu_461_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<3> > w15_V_address0;
    sc_signal< sc_logic > w15_V_ce0;
    sc_signal< sc_lv<18> > w15_V_q0;
    sc_signal< sc_lv<1> > do_init_reg_145;
    sc_signal< sc_lv<3> > w_index5_reg_161;
    sc_signal< sc_lv<9> > p_read10_rewind_reg_176;
    sc_signal< sc_lv<9> > p_read111_rewind_reg_190;
    sc_signal< sc_lv<9> > p_read212_rewind_reg_204;
    sc_signal< sc_lv<9> > p_read313_rewind_reg_218;
    sc_signal< sc_lv<9> > p_read414_rewind_reg_232;
    sc_signal< sc_lv<9> > p_read515_rewind_reg_246;
    sc_signal< sc_lv<9> > p_read616_rewind_reg_260;
    sc_signal< sc_lv<9> > p_read717_rewind_reg_274;
    sc_signal< sc_lv<9> > p_read818_rewind_reg_288;
    sc_signal< sc_lv<9> > p_read919_rewind_reg_302;
    sc_signal< sc_lv<15> > res_V_write_assign3_reg_316;
    sc_signal< sc_lv<1> > ap_phi_mux_do_init_phi_fu_149_p6;
    sc_signal< sc_lv<3> > w_index_fu_455_p2;
    sc_signal< sc_lv<3> > w_index_reg_656;
    sc_signal< sc_lv<1> > icmp_ln64_reg_661;
    sc_signal< sc_lv<15> > acc_0_V_fu_591_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<3> > ap_phi_mux_w_index5_phi_fu_165_p6;
    sc_signal< sc_lv<9> > ap_phi_mux_p_read10_phi_phi_fu_334_p4;
    sc_signal< sc_lv<9> > ap_phi_mux_p_read111_phi_phi_fu_346_p4;
    sc_signal< sc_lv<9> > ap_phi_mux_p_read212_phi_phi_fu_358_p4;
    sc_signal< sc_lv<9> > ap_phi_mux_p_read313_phi_phi_fu_370_p4;
    sc_signal< sc_lv<9> > ap_phi_mux_p_read414_phi_phi_fu_382_p4;
    sc_signal< sc_lv<9> > ap_phi_mux_p_read515_phi_phi_fu_394_p4;
    sc_signal< sc_lv<9> > ap_phi_mux_p_read616_phi_phi_fu_406_p4;
    sc_signal< sc_lv<9> > ap_phi_mux_p_read717_phi_phi_fu_418_p4;
    sc_signal< sc_lv<9> > ap_phi_mux_p_read818_phi_phi_fu_430_p4;
    sc_signal< sc_lv<9> > ap_phi_mux_p_read919_phi_phi_fu_442_p4;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter0_p_read10_phi_reg_330;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter1_p_read10_phi_reg_330;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter0_p_read111_phi_reg_342;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter1_p_read111_phi_reg_342;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter0_p_read212_phi_reg_354;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter1_p_read212_phi_reg_354;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter0_p_read313_phi_reg_366;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter1_p_read313_phi_reg_366;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter0_p_read414_phi_reg_378;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter1_p_read414_phi_reg_378;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter0_p_read515_phi_reg_390;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter1_p_read515_phi_reg_390;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter0_p_read616_phi_reg_402;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter1_p_read616_phi_reg_402;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter0_p_read717_phi_reg_414;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter1_p_read717_phi_reg_414;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter0_p_read818_phi_reg_426;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter1_p_read818_phi_reg_426;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter0_p_read919_phi_reg_438;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter1_p_read919_phi_reg_438;
    sc_signal< sc_lv<64> > zext_ln77_fu_450_p1;
    sc_signal< sc_lv<9> > phi_ln_fu_467_p10;
    sc_signal< sc_lv<9> > trunc_ln77_fu_489_p1;
    sc_signal< sc_lv<9> > mul_ln1118_fu_501_p0;
    sc_signal< sc_lv<9> > mul_ln1118_fu_501_p1;
    sc_signal< sc_lv<18> > mul_ln1118_fu_501_p2;
    sc_signal< sc_lv<11> > trunc_ln_fu_507_p4;
    sc_signal< sc_lv<9> > phi_ln77_s_fu_521_p10;
    sc_signal< sc_lv<9> > tmp_1_fu_543_p4;
    sc_signal< sc_lv<9> > mul_ln1118_1_fu_561_p0;
    sc_signal< sc_lv<9> > mul_ln1118_1_fu_561_p1;
    sc_signal< sc_lv<18> > mul_ln1118_1_fu_561_p2;
    sc_signal< sc_lv<11> > trunc_ln708_s_fu_567_p4;
    sc_signal< sc_lv<12> > sext_ln703_fu_577_p1;
    sc_signal< sc_lv<12> > sext_ln77_fu_517_p1;
    sc_signal< sc_lv<12> > add_ln703_fu_581_p2;
    sc_signal< sc_lv<15> > sext_ln703_1_fu_587_p1;
    sc_signal< sc_lv<15> > ap_return_preg;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to0;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<18> > mul_ln1118_1_fu_561_p00;
    sc_signal< sc_lv<18> > mul_ln1118_fu_501_p00;
    sc_signal< bool > ap_condition_157;
    sc_signal< bool > ap_condition_42;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<15> ap_const_lv15_2F0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<15> ap_const_lv15_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_acc_0_V_fu_591_p2();
    void thread_add_ln703_fu_581_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_condition_157();
    void thread_ap_condition_42();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to0();
    void thread_ap_phi_mux_do_init_phi_fu_149_p6();
    void thread_ap_phi_mux_p_read10_phi_phi_fu_334_p4();
    void thread_ap_phi_mux_p_read111_phi_phi_fu_346_p4();
    void thread_ap_phi_mux_p_read212_phi_phi_fu_358_p4();
    void thread_ap_phi_mux_p_read313_phi_phi_fu_370_p4();
    void thread_ap_phi_mux_p_read414_phi_phi_fu_382_p4();
    void thread_ap_phi_mux_p_read515_phi_phi_fu_394_p4();
    void thread_ap_phi_mux_p_read616_phi_phi_fu_406_p4();
    void thread_ap_phi_mux_p_read717_phi_phi_fu_418_p4();
    void thread_ap_phi_mux_p_read818_phi_phi_fu_430_p4();
    void thread_ap_phi_mux_p_read919_phi_phi_fu_442_p4();
    void thread_ap_phi_mux_w_index5_phi_fu_165_p6();
    void thread_ap_phi_reg_pp0_iter0_p_read10_phi_reg_330();
    void thread_ap_phi_reg_pp0_iter0_p_read111_phi_reg_342();
    void thread_ap_phi_reg_pp0_iter0_p_read212_phi_reg_354();
    void thread_ap_phi_reg_pp0_iter0_p_read313_phi_reg_366();
    void thread_ap_phi_reg_pp0_iter0_p_read414_phi_reg_378();
    void thread_ap_phi_reg_pp0_iter0_p_read515_phi_reg_390();
    void thread_ap_phi_reg_pp0_iter0_p_read616_phi_reg_402();
    void thread_ap_phi_reg_pp0_iter0_p_read717_phi_reg_414();
    void thread_ap_phi_reg_pp0_iter0_p_read818_phi_reg_426();
    void thread_ap_phi_reg_pp0_iter0_p_read919_phi_reg_438();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_return();
    void thread_icmp_ln64_fu_461_p2();
    void thread_mul_ln1118_1_fu_561_p0();
    void thread_mul_ln1118_1_fu_561_p00();
    void thread_mul_ln1118_1_fu_561_p1();
    void thread_mul_ln1118_1_fu_561_p2();
    void thread_mul_ln1118_fu_501_p0();
    void thread_mul_ln1118_fu_501_p00();
    void thread_mul_ln1118_fu_501_p1();
    void thread_mul_ln1118_fu_501_p2();
    void thread_sext_ln703_1_fu_587_p1();
    void thread_sext_ln703_fu_577_p1();
    void thread_sext_ln77_fu_517_p1();
    void thread_tmp_1_fu_543_p4();
    void thread_trunc_ln708_s_fu_567_p4();
    void thread_trunc_ln77_fu_489_p1();
    void thread_trunc_ln_fu_507_p4();
    void thread_w15_V_address0();
    void thread_w15_V_ce0();
    void thread_w_index_fu_455_p2();
    void thread_zext_ln77_fu_450_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
