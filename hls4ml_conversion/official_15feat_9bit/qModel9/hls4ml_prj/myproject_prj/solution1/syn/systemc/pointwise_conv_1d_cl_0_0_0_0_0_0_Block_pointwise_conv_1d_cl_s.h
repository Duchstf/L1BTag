// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s_HH_
#define _pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s : public sc_module {
    // Port declarations 157
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<16> > res_0_V;
    sc_out< sc_logic > res_0_V_ap_vld;
    sc_out< sc_lv<16> > res_1_V;
    sc_out< sc_logic > res_1_V_ap_vld;
    sc_out< sc_lv<16> > res_2_V;
    sc_out< sc_logic > res_2_V_ap_vld;
    sc_out< sc_lv<16> > res_3_V;
    sc_out< sc_logic > res_3_V_ap_vld;
    sc_out< sc_lv<16> > res_4_V;
    sc_out< sc_logic > res_4_V_ap_vld;
    sc_out< sc_lv<16> > res_5_V;
    sc_out< sc_logic > res_5_V_ap_vld;
    sc_out< sc_lv<16> > res_6_V;
    sc_out< sc_logic > res_6_V_ap_vld;
    sc_out< sc_lv<16> > res_7_V;
    sc_out< sc_logic > res_7_V_ap_vld;
    sc_out< sc_lv<16> > res_8_V;
    sc_out< sc_logic > res_8_V_ap_vld;
    sc_out< sc_lv<16> > res_9_V;
    sc_out< sc_logic > res_9_V_ap_vld;
    sc_out< sc_lv<16> > res_10_V;
    sc_out< sc_logic > res_10_V_ap_vld;
    sc_out< sc_lv<16> > res_11_V;
    sc_out< sc_logic > res_11_V_ap_vld;
    sc_out< sc_lv<16> > res_12_V;
    sc_out< sc_logic > res_12_V_ap_vld;
    sc_out< sc_lv<16> > res_13_V;
    sc_out< sc_logic > res_13_V_ap_vld;
    sc_out< sc_lv<16> > res_14_V;
    sc_out< sc_logic > res_14_V_ap_vld;
    sc_out< sc_lv<16> > res_15_V;
    sc_out< sc_logic > res_15_V_ap_vld;
    sc_out< sc_lv<16> > res_16_V;
    sc_out< sc_logic > res_16_V_ap_vld;
    sc_out< sc_lv<16> > res_17_V;
    sc_out< sc_logic > res_17_V_ap_vld;
    sc_out< sc_lv<16> > res_18_V;
    sc_out< sc_logic > res_18_V_ap_vld;
    sc_out< sc_lv<16> > res_19_V;
    sc_out< sc_logic > res_19_V_ap_vld;
    sc_out< sc_lv<16> > res_20_V;
    sc_out< sc_logic > res_20_V_ap_vld;
    sc_out< sc_lv<16> > res_21_V;
    sc_out< sc_logic > res_21_V_ap_vld;
    sc_out< sc_lv<16> > res_22_V;
    sc_out< sc_logic > res_22_V_ap_vld;
    sc_out< sc_lv<16> > res_23_V;
    sc_out< sc_logic > res_23_V_ap_vld;
    sc_out< sc_lv<16> > res_24_V;
    sc_out< sc_logic > res_24_V_ap_vld;
    sc_out< sc_lv<16> > res_25_V;
    sc_out< sc_logic > res_25_V_ap_vld;
    sc_out< sc_lv<16> > res_26_V;
    sc_out< sc_logic > res_26_V_ap_vld;
    sc_out< sc_lv<16> > res_27_V;
    sc_out< sc_logic > res_27_V_ap_vld;
    sc_out< sc_lv<16> > res_28_V;
    sc_out< sc_logic > res_28_V_ap_vld;
    sc_out< sc_lv<16> > res_29_V;
    sc_out< sc_logic > res_29_V_ap_vld;
    sc_out< sc_lv<16> > res_30_V;
    sc_out< sc_logic > res_30_V_ap_vld;
    sc_out< sc_lv<16> > res_31_V;
    sc_out< sc_logic > res_31_V_ap_vld;
    sc_out< sc_lv<16> > res_32_V;
    sc_out< sc_logic > res_32_V_ap_vld;
    sc_out< sc_lv<16> > res_33_V;
    sc_out< sc_logic > res_33_V_ap_vld;
    sc_out< sc_lv<16> > res_34_V;
    sc_out< sc_logic > res_34_V_ap_vld;
    sc_out< sc_lv<16> > res_35_V;
    sc_out< sc_logic > res_35_V_ap_vld;
    sc_out< sc_lv<16> > res_36_V;
    sc_out< sc_logic > res_36_V_ap_vld;
    sc_out< sc_lv<16> > res_37_V;
    sc_out< sc_logic > res_37_V_ap_vld;
    sc_out< sc_lv<16> > res_38_V;
    sc_out< sc_logic > res_38_V_ap_vld;
    sc_out< sc_lv<16> > res_39_V;
    sc_out< sc_logic > res_39_V_ap_vld;
    sc_out< sc_lv<16> > res_40_V;
    sc_out< sc_logic > res_40_V_ap_vld;
    sc_out< sc_lv<16> > res_41_V;
    sc_out< sc_logic > res_41_V_ap_vld;
    sc_out< sc_lv<16> > res_42_V;
    sc_out< sc_logic > res_42_V_ap_vld;
    sc_out< sc_lv<16> > res_43_V;
    sc_out< sc_logic > res_43_V_ap_vld;
    sc_out< sc_lv<16> > res_44_V;
    sc_out< sc_logic > res_44_V_ap_vld;
    sc_out< sc_lv<16> > res_45_V;
    sc_out< sc_logic > res_45_V_ap_vld;
    sc_out< sc_lv<16> > res_46_V;
    sc_out< sc_logic > res_46_V_ap_vld;
    sc_out< sc_lv<16> > res_47_V;
    sc_out< sc_logic > res_47_V_ap_vld;
    sc_out< sc_lv<16> > res_48_V;
    sc_out< sc_logic > res_48_V_ap_vld;
    sc_out< sc_lv<16> > res_49_V;
    sc_out< sc_logic > res_49_V_ap_vld;
    sc_in< sc_lv<16> > p_read;
    sc_in< sc_lv<16> > p_read1;
    sc_in< sc_lv<16> > p_read2;
    sc_in< sc_lv<16> > p_read3;
    sc_in< sc_lv<16> > p_read4;
    sc_in< sc_lv<16> > p_read5;
    sc_in< sc_lv<16> > p_read6;
    sc_in< sc_lv<16> > p_read7;
    sc_in< sc_lv<16> > p_read8;
    sc_in< sc_lv<16> > p_read9;
    sc_in< sc_lv<16> > p_read10;
    sc_in< sc_lv<16> > p_read11;
    sc_in< sc_lv<16> > p_read12;
    sc_in< sc_lv<16> > p_read13;
    sc_in< sc_lv<16> > p_read14;
    sc_in< sc_lv<16> > p_read15;
    sc_in< sc_lv<16> > p_read16;
    sc_in< sc_lv<16> > p_read17;
    sc_in< sc_lv<16> > p_read18;
    sc_in< sc_lv<16> > p_read19;
    sc_in< sc_lv<16> > p_read20;
    sc_in< sc_lv<16> > p_read21;
    sc_in< sc_lv<16> > p_read22;
    sc_in< sc_lv<16> > p_read23;
    sc_in< sc_lv<16> > p_read24;
    sc_in< sc_lv<16> > p_read25;
    sc_in< sc_lv<16> > p_read26;
    sc_in< sc_lv<16> > p_read27;
    sc_in< sc_lv<16> > p_read28;
    sc_in< sc_lv<16> > p_read29;
    sc_in< sc_lv<16> > p_read30;
    sc_in< sc_lv<16> > p_read31;
    sc_in< sc_lv<16> > p_read32;
    sc_in< sc_lv<16> > p_read33;
    sc_in< sc_lv<16> > p_read34;
    sc_in< sc_lv<16> > p_read35;
    sc_in< sc_lv<16> > p_read36;
    sc_in< sc_lv<16> > p_read37;
    sc_in< sc_lv<16> > p_read38;
    sc_in< sc_lv<16> > p_read39;
    sc_in< sc_lv<16> > p_read40;
    sc_in< sc_lv<16> > p_read41;
    sc_in< sc_lv<16> > p_read42;
    sc_in< sc_lv<16> > p_read43;
    sc_in< sc_lv<16> > p_read44;
    sc_in< sc_lv<16> > p_read45;
    sc_in< sc_lv<16> > p_read46;
    sc_in< sc_lv<16> > p_read47;
    sc_in< sc_lv<16> > p_read48;
    sc_in< sc_lv<16> > p_read49;


    // Module declarations
    pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s(sc_module_name name);
    SC_HAS_PROCESS(pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s);

    ~pointwise_conv_1d_cl_0_0_0_0_0_0_Block_pointwise_conv_1d_cl_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<16> > res_0_V_preg;
    sc_signal< sc_lv<16> > res_5_V_preg;
    sc_signal< sc_lv<16> > res_10_V_preg;
    sc_signal< sc_lv<16> > res_15_V_preg;
    sc_signal< sc_lv<16> > res_20_V_preg;
    sc_signal< sc_lv<16> > res_25_V_preg;
    sc_signal< sc_lv<16> > res_30_V_preg;
    sc_signal< sc_lv<16> > res_35_V_preg;
    sc_signal< sc_lv<16> > res_40_V_preg;
    sc_signal< sc_lv<16> > res_45_V_preg;
    sc_signal< sc_lv<16> > res_1_V_preg;
    sc_signal< sc_lv<16> > res_6_V_preg;
    sc_signal< sc_lv<16> > res_11_V_preg;
    sc_signal< sc_lv<16> > res_16_V_preg;
    sc_signal< sc_lv<16> > res_21_V_preg;
    sc_signal< sc_lv<16> > res_26_V_preg;
    sc_signal< sc_lv<16> > res_31_V_preg;
    sc_signal< sc_lv<16> > res_36_V_preg;
    sc_signal< sc_lv<16> > res_41_V_preg;
    sc_signal< sc_lv<16> > res_46_V_preg;
    sc_signal< sc_lv<16> > res_2_V_preg;
    sc_signal< sc_lv<16> > res_7_V_preg;
    sc_signal< sc_lv<16> > res_12_V_preg;
    sc_signal< sc_lv<16> > res_17_V_preg;
    sc_signal< sc_lv<16> > res_22_V_preg;
    sc_signal< sc_lv<16> > res_27_V_preg;
    sc_signal< sc_lv<16> > res_32_V_preg;
    sc_signal< sc_lv<16> > res_37_V_preg;
    sc_signal< sc_lv<16> > res_42_V_preg;
    sc_signal< sc_lv<16> > res_47_V_preg;
    sc_signal< sc_lv<16> > res_3_V_preg;
    sc_signal< sc_lv<16> > res_8_V_preg;
    sc_signal< sc_lv<16> > res_13_V_preg;
    sc_signal< sc_lv<16> > res_18_V_preg;
    sc_signal< sc_lv<16> > res_23_V_preg;
    sc_signal< sc_lv<16> > res_28_V_preg;
    sc_signal< sc_lv<16> > res_33_V_preg;
    sc_signal< sc_lv<16> > res_38_V_preg;
    sc_signal< sc_lv<16> > res_43_V_preg;
    sc_signal< sc_lv<16> > res_48_V_preg;
    sc_signal< sc_lv<16> > res_4_V_preg;
    sc_signal< sc_lv<16> > res_9_V_preg;
    sc_signal< sc_lv<16> > res_14_V_preg;
    sc_signal< sc_lv<16> > res_19_V_preg;
    sc_signal< sc_lv<16> > res_24_V_preg;
    sc_signal< sc_lv<16> > res_29_V_preg;
    sc_signal< sc_lv<16> > res_34_V_preg;
    sc_signal< sc_lv<16> > res_39_V_preg;
    sc_signal< sc_lv<16> > res_44_V_preg;
    sc_signal< sc_lv<16> > res_49_V_preg;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_res_0_V();
    void thread_res_0_V_ap_vld();
    void thread_res_10_V();
    void thread_res_10_V_ap_vld();
    void thread_res_11_V();
    void thread_res_11_V_ap_vld();
    void thread_res_12_V();
    void thread_res_12_V_ap_vld();
    void thread_res_13_V();
    void thread_res_13_V_ap_vld();
    void thread_res_14_V();
    void thread_res_14_V_ap_vld();
    void thread_res_15_V();
    void thread_res_15_V_ap_vld();
    void thread_res_16_V();
    void thread_res_16_V_ap_vld();
    void thread_res_17_V();
    void thread_res_17_V_ap_vld();
    void thread_res_18_V();
    void thread_res_18_V_ap_vld();
    void thread_res_19_V();
    void thread_res_19_V_ap_vld();
    void thread_res_1_V();
    void thread_res_1_V_ap_vld();
    void thread_res_20_V();
    void thread_res_20_V_ap_vld();
    void thread_res_21_V();
    void thread_res_21_V_ap_vld();
    void thread_res_22_V();
    void thread_res_22_V_ap_vld();
    void thread_res_23_V();
    void thread_res_23_V_ap_vld();
    void thread_res_24_V();
    void thread_res_24_V_ap_vld();
    void thread_res_25_V();
    void thread_res_25_V_ap_vld();
    void thread_res_26_V();
    void thread_res_26_V_ap_vld();
    void thread_res_27_V();
    void thread_res_27_V_ap_vld();
    void thread_res_28_V();
    void thread_res_28_V_ap_vld();
    void thread_res_29_V();
    void thread_res_29_V_ap_vld();
    void thread_res_2_V();
    void thread_res_2_V_ap_vld();
    void thread_res_30_V();
    void thread_res_30_V_ap_vld();
    void thread_res_31_V();
    void thread_res_31_V_ap_vld();
    void thread_res_32_V();
    void thread_res_32_V_ap_vld();
    void thread_res_33_V();
    void thread_res_33_V_ap_vld();
    void thread_res_34_V();
    void thread_res_34_V_ap_vld();
    void thread_res_35_V();
    void thread_res_35_V_ap_vld();
    void thread_res_36_V();
    void thread_res_36_V_ap_vld();
    void thread_res_37_V();
    void thread_res_37_V_ap_vld();
    void thread_res_38_V();
    void thread_res_38_V_ap_vld();
    void thread_res_39_V();
    void thread_res_39_V_ap_vld();
    void thread_res_3_V();
    void thread_res_3_V_ap_vld();
    void thread_res_40_V();
    void thread_res_40_V_ap_vld();
    void thread_res_41_V();
    void thread_res_41_V_ap_vld();
    void thread_res_42_V();
    void thread_res_42_V_ap_vld();
    void thread_res_43_V();
    void thread_res_43_V_ap_vld();
    void thread_res_44_V();
    void thread_res_44_V_ap_vld();
    void thread_res_45_V();
    void thread_res_45_V_ap_vld();
    void thread_res_46_V();
    void thread_res_46_V_ap_vld();
    void thread_res_47_V();
    void thread_res_47_V_ap_vld();
    void thread_res_48_V();
    void thread_res_48_V_ap_vld();
    void thread_res_49_V();
    void thread_res_49_V_ap_vld();
    void thread_res_4_V();
    void thread_res_4_V_ap_vld();
    void thread_res_5_V();
    void thread_res_5_V_ap_vld();
    void thread_res_6_V();
    void thread_res_6_V_ap_vld();
    void thread_res_7_V();
    void thread_res_7_V_ap_vld();
    void thread_res_8_V();
    void thread_res_8_V_ap_vld();
    void thread_res_9_V();
    void thread_res_9_V_ap_vld();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
