// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::ap_ST_fsm_state1 = "1";
const sc_lv<32> linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<16> linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::ap_const_lv16_0 = "0000000000000000";
const bool linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::ap_const_boolean_1 = true;

linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_0_V );
    sensitive << ( ap_return_0_preg );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_1_V );
    sensitive << ( ap_return_1_preg );

    SC_METHOD(thread_ap_return_10);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_10_V );
    sensitive << ( ap_return_10_preg );

    SC_METHOD(thread_ap_return_11);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_11_V );
    sensitive << ( ap_return_11_preg );

    SC_METHOD(thread_ap_return_12);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_12_V );
    sensitive << ( ap_return_12_preg );

    SC_METHOD(thread_ap_return_13);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_13_V );
    sensitive << ( ap_return_13_preg );

    SC_METHOD(thread_ap_return_14);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_14_V );
    sensitive << ( ap_return_14_preg );

    SC_METHOD(thread_ap_return_15);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_15_V );
    sensitive << ( ap_return_15_preg );

    SC_METHOD(thread_ap_return_16);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_16_V );
    sensitive << ( ap_return_16_preg );

    SC_METHOD(thread_ap_return_17);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_17_V );
    sensitive << ( ap_return_17_preg );

    SC_METHOD(thread_ap_return_18);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_18_V );
    sensitive << ( ap_return_18_preg );

    SC_METHOD(thread_ap_return_19);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_19_V );
    sensitive << ( ap_return_19_preg );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_2_V );
    sensitive << ( ap_return_2_preg );

    SC_METHOD(thread_ap_return_20);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_20_V );
    sensitive << ( ap_return_20_preg );

    SC_METHOD(thread_ap_return_21);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_21_V );
    sensitive << ( ap_return_21_preg );

    SC_METHOD(thread_ap_return_22);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_22_V );
    sensitive << ( ap_return_22_preg );

    SC_METHOD(thread_ap_return_23);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_23_V );
    sensitive << ( ap_return_23_preg );

    SC_METHOD(thread_ap_return_24);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_24_V );
    sensitive << ( ap_return_24_preg );

    SC_METHOD(thread_ap_return_25);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_25_V );
    sensitive << ( ap_return_25_preg );

    SC_METHOD(thread_ap_return_26);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_26_V );
    sensitive << ( ap_return_26_preg );

    SC_METHOD(thread_ap_return_27);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_27_V );
    sensitive << ( ap_return_27_preg );

    SC_METHOD(thread_ap_return_28);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_28_V );
    sensitive << ( ap_return_28_preg );

    SC_METHOD(thread_ap_return_29);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_29_V );
    sensitive << ( ap_return_29_preg );

    SC_METHOD(thread_ap_return_3);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_3_V );
    sensitive << ( ap_return_3_preg );

    SC_METHOD(thread_ap_return_30);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_30_V );
    sensitive << ( ap_return_30_preg );

    SC_METHOD(thread_ap_return_31);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_31_V );
    sensitive << ( ap_return_31_preg );

    SC_METHOD(thread_ap_return_32);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_32_V );
    sensitive << ( ap_return_32_preg );

    SC_METHOD(thread_ap_return_33);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_33_V );
    sensitive << ( ap_return_33_preg );

    SC_METHOD(thread_ap_return_34);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_34_V );
    sensitive << ( ap_return_34_preg );

    SC_METHOD(thread_ap_return_35);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_35_V );
    sensitive << ( ap_return_35_preg );

    SC_METHOD(thread_ap_return_36);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_36_V );
    sensitive << ( ap_return_36_preg );

    SC_METHOD(thread_ap_return_37);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_37_V );
    sensitive << ( ap_return_37_preg );

    SC_METHOD(thread_ap_return_38);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_38_V );
    sensitive << ( ap_return_38_preg );

    SC_METHOD(thread_ap_return_39);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_39_V );
    sensitive << ( ap_return_39_preg );

    SC_METHOD(thread_ap_return_4);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_4_V );
    sensitive << ( ap_return_4_preg );

    SC_METHOD(thread_ap_return_40);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_40_V );
    sensitive << ( ap_return_40_preg );

    SC_METHOD(thread_ap_return_41);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_41_V );
    sensitive << ( ap_return_41_preg );

    SC_METHOD(thread_ap_return_42);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_42_V );
    sensitive << ( ap_return_42_preg );

    SC_METHOD(thread_ap_return_43);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_43_V );
    sensitive << ( ap_return_43_preg );

    SC_METHOD(thread_ap_return_44);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_44_V );
    sensitive << ( ap_return_44_preg );

    SC_METHOD(thread_ap_return_45);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_45_V );
    sensitive << ( ap_return_45_preg );

    SC_METHOD(thread_ap_return_46);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_46_V );
    sensitive << ( ap_return_46_preg );

    SC_METHOD(thread_ap_return_47);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_47_V );
    sensitive << ( ap_return_47_preg );

    SC_METHOD(thread_ap_return_48);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_48_V );
    sensitive << ( ap_return_48_preg );

    SC_METHOD(thread_ap_return_49);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_49_V );
    sensitive << ( ap_return_49_preg );

    SC_METHOD(thread_ap_return_5);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_5_V );
    sensitive << ( ap_return_5_preg );

    SC_METHOD(thread_ap_return_6);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_6_V );
    sensitive << ( ap_return_6_preg );

    SC_METHOD(thread_ap_return_7);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_7_V );
    sensitive << ( ap_return_7_preg );

    SC_METHOD(thread_ap_return_8);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_8_V );
    sensitive << ( ap_return_8_preg );

    SC_METHOD(thread_ap_return_9);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_9_V );
    sensitive << ( ap_return_9_preg );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    ap_return_0_preg = "0000000000000000";
    ap_return_1_preg = "0000000000000000";
    ap_return_2_preg = "0000000000000000";
    ap_return_3_preg = "0000000000000000";
    ap_return_4_preg = "0000000000000000";
    ap_return_5_preg = "0000000000000000";
    ap_return_6_preg = "0000000000000000";
    ap_return_7_preg = "0000000000000000";
    ap_return_8_preg = "0000000000000000";
    ap_return_9_preg = "0000000000000000";
    ap_return_10_preg = "0000000000000000";
    ap_return_11_preg = "0000000000000000";
    ap_return_12_preg = "0000000000000000";
    ap_return_13_preg = "0000000000000000";
    ap_return_14_preg = "0000000000000000";
    ap_return_15_preg = "0000000000000000";
    ap_return_16_preg = "0000000000000000";
    ap_return_17_preg = "0000000000000000";
    ap_return_18_preg = "0000000000000000";
    ap_return_19_preg = "0000000000000000";
    ap_return_20_preg = "0000000000000000";
    ap_return_21_preg = "0000000000000000";
    ap_return_22_preg = "0000000000000000";
    ap_return_23_preg = "0000000000000000";
    ap_return_24_preg = "0000000000000000";
    ap_return_25_preg = "0000000000000000";
    ap_return_26_preg = "0000000000000000";
    ap_return_27_preg = "0000000000000000";
    ap_return_28_preg = "0000000000000000";
    ap_return_29_preg = "0000000000000000";
    ap_return_30_preg = "0000000000000000";
    ap_return_31_preg = "0000000000000000";
    ap_return_32_preg = "0000000000000000";
    ap_return_33_preg = "0000000000000000";
    ap_return_34_preg = "0000000000000000";
    ap_return_35_preg = "0000000000000000";
    ap_return_36_preg = "0000000000000000";
    ap_return_37_preg = "0000000000000000";
    ap_return_38_preg = "0000000000000000";
    ap_return_39_preg = "0000000000000000";
    ap_return_40_preg = "0000000000000000";
    ap_return_41_preg = "0000000000000000";
    ap_return_42_preg = "0000000000000000";
    ap_return_43_preg = "0000000000000000";
    ap_return_44_preg = "0000000000000000";
    ap_return_45_preg = "0000000000000000";
    ap_return_46_preg = "0000000000000000";
    ap_return_47_preg = "0000000000000000";
    ap_return_48_preg = "0000000000000000";
    ap_return_49_preg = "0000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_0_V, "(port)data_0_V");
    sc_trace(mVcdFile, data_1_V, "(port)data_1_V");
    sc_trace(mVcdFile, data_2_V, "(port)data_2_V");
    sc_trace(mVcdFile, data_3_V, "(port)data_3_V");
    sc_trace(mVcdFile, data_4_V, "(port)data_4_V");
    sc_trace(mVcdFile, data_5_V, "(port)data_5_V");
    sc_trace(mVcdFile, data_6_V, "(port)data_6_V");
    sc_trace(mVcdFile, data_7_V, "(port)data_7_V");
    sc_trace(mVcdFile, data_8_V, "(port)data_8_V");
    sc_trace(mVcdFile, data_9_V, "(port)data_9_V");
    sc_trace(mVcdFile, data_10_V, "(port)data_10_V");
    sc_trace(mVcdFile, data_11_V, "(port)data_11_V");
    sc_trace(mVcdFile, data_12_V, "(port)data_12_V");
    sc_trace(mVcdFile, data_13_V, "(port)data_13_V");
    sc_trace(mVcdFile, data_14_V, "(port)data_14_V");
    sc_trace(mVcdFile, data_15_V, "(port)data_15_V");
    sc_trace(mVcdFile, data_16_V, "(port)data_16_V");
    sc_trace(mVcdFile, data_17_V, "(port)data_17_V");
    sc_trace(mVcdFile, data_18_V, "(port)data_18_V");
    sc_trace(mVcdFile, data_19_V, "(port)data_19_V");
    sc_trace(mVcdFile, data_20_V, "(port)data_20_V");
    sc_trace(mVcdFile, data_21_V, "(port)data_21_V");
    sc_trace(mVcdFile, data_22_V, "(port)data_22_V");
    sc_trace(mVcdFile, data_23_V, "(port)data_23_V");
    sc_trace(mVcdFile, data_24_V, "(port)data_24_V");
    sc_trace(mVcdFile, data_25_V, "(port)data_25_V");
    sc_trace(mVcdFile, data_26_V, "(port)data_26_V");
    sc_trace(mVcdFile, data_27_V, "(port)data_27_V");
    sc_trace(mVcdFile, data_28_V, "(port)data_28_V");
    sc_trace(mVcdFile, data_29_V, "(port)data_29_V");
    sc_trace(mVcdFile, data_30_V, "(port)data_30_V");
    sc_trace(mVcdFile, data_31_V, "(port)data_31_V");
    sc_trace(mVcdFile, data_32_V, "(port)data_32_V");
    sc_trace(mVcdFile, data_33_V, "(port)data_33_V");
    sc_trace(mVcdFile, data_34_V, "(port)data_34_V");
    sc_trace(mVcdFile, data_35_V, "(port)data_35_V");
    sc_trace(mVcdFile, data_36_V, "(port)data_36_V");
    sc_trace(mVcdFile, data_37_V, "(port)data_37_V");
    sc_trace(mVcdFile, data_38_V, "(port)data_38_V");
    sc_trace(mVcdFile, data_39_V, "(port)data_39_V");
    sc_trace(mVcdFile, data_40_V, "(port)data_40_V");
    sc_trace(mVcdFile, data_41_V, "(port)data_41_V");
    sc_trace(mVcdFile, data_42_V, "(port)data_42_V");
    sc_trace(mVcdFile, data_43_V, "(port)data_43_V");
    sc_trace(mVcdFile, data_44_V, "(port)data_44_V");
    sc_trace(mVcdFile, data_45_V, "(port)data_45_V");
    sc_trace(mVcdFile, data_46_V, "(port)data_46_V");
    sc_trace(mVcdFile, data_47_V, "(port)data_47_V");
    sc_trace(mVcdFile, data_48_V, "(port)data_48_V");
    sc_trace(mVcdFile, data_49_V, "(port)data_49_V");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, ap_return_3, "(port)ap_return_3");
    sc_trace(mVcdFile, ap_return_4, "(port)ap_return_4");
    sc_trace(mVcdFile, ap_return_5, "(port)ap_return_5");
    sc_trace(mVcdFile, ap_return_6, "(port)ap_return_6");
    sc_trace(mVcdFile, ap_return_7, "(port)ap_return_7");
    sc_trace(mVcdFile, ap_return_8, "(port)ap_return_8");
    sc_trace(mVcdFile, ap_return_9, "(port)ap_return_9");
    sc_trace(mVcdFile, ap_return_10, "(port)ap_return_10");
    sc_trace(mVcdFile, ap_return_11, "(port)ap_return_11");
    sc_trace(mVcdFile, ap_return_12, "(port)ap_return_12");
    sc_trace(mVcdFile, ap_return_13, "(port)ap_return_13");
    sc_trace(mVcdFile, ap_return_14, "(port)ap_return_14");
    sc_trace(mVcdFile, ap_return_15, "(port)ap_return_15");
    sc_trace(mVcdFile, ap_return_16, "(port)ap_return_16");
    sc_trace(mVcdFile, ap_return_17, "(port)ap_return_17");
    sc_trace(mVcdFile, ap_return_18, "(port)ap_return_18");
    sc_trace(mVcdFile, ap_return_19, "(port)ap_return_19");
    sc_trace(mVcdFile, ap_return_20, "(port)ap_return_20");
    sc_trace(mVcdFile, ap_return_21, "(port)ap_return_21");
    sc_trace(mVcdFile, ap_return_22, "(port)ap_return_22");
    sc_trace(mVcdFile, ap_return_23, "(port)ap_return_23");
    sc_trace(mVcdFile, ap_return_24, "(port)ap_return_24");
    sc_trace(mVcdFile, ap_return_25, "(port)ap_return_25");
    sc_trace(mVcdFile, ap_return_26, "(port)ap_return_26");
    sc_trace(mVcdFile, ap_return_27, "(port)ap_return_27");
    sc_trace(mVcdFile, ap_return_28, "(port)ap_return_28");
    sc_trace(mVcdFile, ap_return_29, "(port)ap_return_29");
    sc_trace(mVcdFile, ap_return_30, "(port)ap_return_30");
    sc_trace(mVcdFile, ap_return_31, "(port)ap_return_31");
    sc_trace(mVcdFile, ap_return_32, "(port)ap_return_32");
    sc_trace(mVcdFile, ap_return_33, "(port)ap_return_33");
    sc_trace(mVcdFile, ap_return_34, "(port)ap_return_34");
    sc_trace(mVcdFile, ap_return_35, "(port)ap_return_35");
    sc_trace(mVcdFile, ap_return_36, "(port)ap_return_36");
    sc_trace(mVcdFile, ap_return_37, "(port)ap_return_37");
    sc_trace(mVcdFile, ap_return_38, "(port)ap_return_38");
    sc_trace(mVcdFile, ap_return_39, "(port)ap_return_39");
    sc_trace(mVcdFile, ap_return_40, "(port)ap_return_40");
    sc_trace(mVcdFile, ap_return_41, "(port)ap_return_41");
    sc_trace(mVcdFile, ap_return_42, "(port)ap_return_42");
    sc_trace(mVcdFile, ap_return_43, "(port)ap_return_43");
    sc_trace(mVcdFile, ap_return_44, "(port)ap_return_44");
    sc_trace(mVcdFile, ap_return_45, "(port)ap_return_45");
    sc_trace(mVcdFile, ap_return_46, "(port)ap_return_46");
    sc_trace(mVcdFile, ap_return_47, "(port)ap_return_47");
    sc_trace(mVcdFile, ap_return_48, "(port)ap_return_48");
    sc_trace(mVcdFile, ap_return_49, "(port)ap_return_49");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_return_0_preg, "ap_return_0_preg");
    sc_trace(mVcdFile, ap_return_1_preg, "ap_return_1_preg");
    sc_trace(mVcdFile, ap_return_2_preg, "ap_return_2_preg");
    sc_trace(mVcdFile, ap_return_3_preg, "ap_return_3_preg");
    sc_trace(mVcdFile, ap_return_4_preg, "ap_return_4_preg");
    sc_trace(mVcdFile, ap_return_5_preg, "ap_return_5_preg");
    sc_trace(mVcdFile, ap_return_6_preg, "ap_return_6_preg");
    sc_trace(mVcdFile, ap_return_7_preg, "ap_return_7_preg");
    sc_trace(mVcdFile, ap_return_8_preg, "ap_return_8_preg");
    sc_trace(mVcdFile, ap_return_9_preg, "ap_return_9_preg");
    sc_trace(mVcdFile, ap_return_10_preg, "ap_return_10_preg");
    sc_trace(mVcdFile, ap_return_11_preg, "ap_return_11_preg");
    sc_trace(mVcdFile, ap_return_12_preg, "ap_return_12_preg");
    sc_trace(mVcdFile, ap_return_13_preg, "ap_return_13_preg");
    sc_trace(mVcdFile, ap_return_14_preg, "ap_return_14_preg");
    sc_trace(mVcdFile, ap_return_15_preg, "ap_return_15_preg");
    sc_trace(mVcdFile, ap_return_16_preg, "ap_return_16_preg");
    sc_trace(mVcdFile, ap_return_17_preg, "ap_return_17_preg");
    sc_trace(mVcdFile, ap_return_18_preg, "ap_return_18_preg");
    sc_trace(mVcdFile, ap_return_19_preg, "ap_return_19_preg");
    sc_trace(mVcdFile, ap_return_20_preg, "ap_return_20_preg");
    sc_trace(mVcdFile, ap_return_21_preg, "ap_return_21_preg");
    sc_trace(mVcdFile, ap_return_22_preg, "ap_return_22_preg");
    sc_trace(mVcdFile, ap_return_23_preg, "ap_return_23_preg");
    sc_trace(mVcdFile, ap_return_24_preg, "ap_return_24_preg");
    sc_trace(mVcdFile, ap_return_25_preg, "ap_return_25_preg");
    sc_trace(mVcdFile, ap_return_26_preg, "ap_return_26_preg");
    sc_trace(mVcdFile, ap_return_27_preg, "ap_return_27_preg");
    sc_trace(mVcdFile, ap_return_28_preg, "ap_return_28_preg");
    sc_trace(mVcdFile, ap_return_29_preg, "ap_return_29_preg");
    sc_trace(mVcdFile, ap_return_30_preg, "ap_return_30_preg");
    sc_trace(mVcdFile, ap_return_31_preg, "ap_return_31_preg");
    sc_trace(mVcdFile, ap_return_32_preg, "ap_return_32_preg");
    sc_trace(mVcdFile, ap_return_33_preg, "ap_return_33_preg");
    sc_trace(mVcdFile, ap_return_34_preg, "ap_return_34_preg");
    sc_trace(mVcdFile, ap_return_35_preg, "ap_return_35_preg");
    sc_trace(mVcdFile, ap_return_36_preg, "ap_return_36_preg");
    sc_trace(mVcdFile, ap_return_37_preg, "ap_return_37_preg");
    sc_trace(mVcdFile, ap_return_38_preg, "ap_return_38_preg");
    sc_trace(mVcdFile, ap_return_39_preg, "ap_return_39_preg");
    sc_trace(mVcdFile, ap_return_40_preg, "ap_return_40_preg");
    sc_trace(mVcdFile, ap_return_41_preg, "ap_return_41_preg");
    sc_trace(mVcdFile, ap_return_42_preg, "ap_return_42_preg");
    sc_trace(mVcdFile, ap_return_43_preg, "ap_return_43_preg");
    sc_trace(mVcdFile, ap_return_44_preg, "ap_return_44_preg");
    sc_trace(mVcdFile, ap_return_45_preg, "ap_return_45_preg");
    sc_trace(mVcdFile, ap_return_46_preg, "ap_return_46_preg");
    sc_trace(mVcdFile, ap_return_47_preg, "ap_return_47_preg");
    sc_trace(mVcdFile, ap_return_48_preg, "ap_return_48_preg");
    sc_trace(mVcdFile, ap_return_49_preg, "ap_return_49_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::~linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_0_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_0_preg = data_0_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_10_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_10_preg = data_10_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_11_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_11_preg = data_11_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_12_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_12_preg = data_12_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_13_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_13_preg = data_13_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_14_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_14_preg = data_14_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_15_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_15_preg = data_15_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_16_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_16_preg = data_16_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_17_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_17_preg = data_17_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_18_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_18_preg = data_18_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_19_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_19_preg = data_19_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_1_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_1_preg = data_1_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_20_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_20_preg = data_20_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_21_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_21_preg = data_21_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_22_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_22_preg = data_22_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_23_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_23_preg = data_23_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_24_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_24_preg = data_24_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_25_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_25_preg = data_25_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_26_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_26_preg = data_26_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_27_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_27_preg = data_27_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_28_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_28_preg = data_28_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_29_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_29_preg = data_29_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_2_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_2_preg = data_2_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_30_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_30_preg = data_30_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_31_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_31_preg = data_31_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_32_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_32_preg = data_32_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_33_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_33_preg = data_33_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_34_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_34_preg = data_34_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_35_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_35_preg = data_35_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_36_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_36_preg = data_36_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_37_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_37_preg = data_37_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_38_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_38_preg = data_38_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_39_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_39_preg = data_39_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_3_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_3_preg = data_3_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_40_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_40_preg = data_40_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_41_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_41_preg = data_41_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_42_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_42_preg = data_42_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_43_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_43_preg = data_43_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_44_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_44_preg = data_44_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_45_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_45_preg = data_45_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_46_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_46_preg = data_46_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_47_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_47_preg = data_47_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_48_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_48_preg = data_48_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_49_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_49_preg = data_49_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_4_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_4_preg = data_4_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_5_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_5_preg = data_5_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_6_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_6_preg = data_6_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_7_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_7_preg = data_7_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_8_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_8_preg = data_8_V.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_9_preg = ap_const_lv16_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_return_9_preg = data_9_V.read();
        }
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_0 = data_0_V.read();
    } else {
        ap_return_0 = ap_return_0_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_1 = data_1_V.read();
    } else {
        ap_return_1 = ap_return_1_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_10() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_10 = data_10_V.read();
    } else {
        ap_return_10 = ap_return_10_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_11() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_11 = data_11_V.read();
    } else {
        ap_return_11 = ap_return_11_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_12() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_12 = data_12_V.read();
    } else {
        ap_return_12 = ap_return_12_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_13() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_13 = data_13_V.read();
    } else {
        ap_return_13 = ap_return_13_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_14() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_14 = data_14_V.read();
    } else {
        ap_return_14 = ap_return_14_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_15() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_15 = data_15_V.read();
    } else {
        ap_return_15 = ap_return_15_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_16() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_16 = data_16_V.read();
    } else {
        ap_return_16 = ap_return_16_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_17() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_17 = data_17_V.read();
    } else {
        ap_return_17 = ap_return_17_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_18() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_18 = data_18_V.read();
    } else {
        ap_return_18 = ap_return_18_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_19() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_19 = data_19_V.read();
    } else {
        ap_return_19 = ap_return_19_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_2 = data_2_V.read();
    } else {
        ap_return_2 = ap_return_2_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_20() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_20 = data_20_V.read();
    } else {
        ap_return_20 = ap_return_20_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_21() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_21 = data_21_V.read();
    } else {
        ap_return_21 = ap_return_21_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_22() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_22 = data_22_V.read();
    } else {
        ap_return_22 = ap_return_22_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_23() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_23 = data_23_V.read();
    } else {
        ap_return_23 = ap_return_23_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_24() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_24 = data_24_V.read();
    } else {
        ap_return_24 = ap_return_24_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_25() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_25 = data_25_V.read();
    } else {
        ap_return_25 = ap_return_25_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_26() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_26 = data_26_V.read();
    } else {
        ap_return_26 = ap_return_26_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_27() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_27 = data_27_V.read();
    } else {
        ap_return_27 = ap_return_27_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_28() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_28 = data_28_V.read();
    } else {
        ap_return_28 = ap_return_28_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_29() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_29 = data_29_V.read();
    } else {
        ap_return_29 = ap_return_29_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_3() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_3 = data_3_V.read();
    } else {
        ap_return_3 = ap_return_3_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_30() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_30 = data_30_V.read();
    } else {
        ap_return_30 = ap_return_30_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_31() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_31 = data_31_V.read();
    } else {
        ap_return_31 = ap_return_31_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_32() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_32 = data_32_V.read();
    } else {
        ap_return_32 = ap_return_32_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_33() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_33 = data_33_V.read();
    } else {
        ap_return_33 = ap_return_33_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_34() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_34 = data_34_V.read();
    } else {
        ap_return_34 = ap_return_34_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_35() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_35 = data_35_V.read();
    } else {
        ap_return_35 = ap_return_35_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_36() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_36 = data_36_V.read();
    } else {
        ap_return_36 = ap_return_36_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_37() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_37 = data_37_V.read();
    } else {
        ap_return_37 = ap_return_37_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_38() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_38 = data_38_V.read();
    } else {
        ap_return_38 = ap_return_38_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_39() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_39 = data_39_V.read();
    } else {
        ap_return_39 = ap_return_39_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_4 = data_4_V.read();
    } else {
        ap_return_4 = ap_return_4_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_40() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_40 = data_40_V.read();
    } else {
        ap_return_40 = ap_return_40_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_41() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_41 = data_41_V.read();
    } else {
        ap_return_41 = ap_return_41_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_42() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_42 = data_42_V.read();
    } else {
        ap_return_42 = ap_return_42_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_43() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_43 = data_43_V.read();
    } else {
        ap_return_43 = ap_return_43_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_44() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_44 = data_44_V.read();
    } else {
        ap_return_44 = ap_return_44_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_45() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_45 = data_45_V.read();
    } else {
        ap_return_45 = ap_return_45_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_46() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_46 = data_46_V.read();
    } else {
        ap_return_46 = ap_return_46_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_47() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_47 = data_47_V.read();
    } else {
        ap_return_47 = ap_return_47_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_48() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_48 = data_48_V.read();
    } else {
        ap_return_48 = ap_return_48_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_49() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_49 = data_49_V.read();
    } else {
        ap_return_49 = ap_return_49_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_5() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_5 = data_5_V.read();
    } else {
        ap_return_5 = ap_return_5_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_6 = data_6_V.read();
    } else {
        ap_return_6 = ap_return_6_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_7() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_7 = data_7_V.read();
    } else {
        ap_return_7 = ap_return_7_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_8() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_8 = data_8_V.read();
    } else {
        ap_return_8 = ap_return_8_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_return_9() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        ap_return_9 = data_9_V.read();
    } else {
        ap_return_9 = ap_return_9_preg.read();
    }
}

void linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state1;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

