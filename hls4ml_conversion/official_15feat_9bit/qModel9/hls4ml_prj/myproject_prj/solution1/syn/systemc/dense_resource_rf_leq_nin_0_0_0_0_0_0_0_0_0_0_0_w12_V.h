// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_0_0_w12_V_H__
#define __dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_0_0_w12_V_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_0_0_w12_V_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 360;
  static const unsigned AddressRange = 5;
  static const unsigned AddressWidth = 3;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_0_0_w12_V_ram) {
        ram[0] = "0b000111100000101010000000111000011100000101100010001011010010010011010001011111111011001011010100100011111101000010111000000001010110000100000000001101010010100110101101001000100100111101010000011001100011001110011001011010100000110111000011001011111111101010111000010111010111101101100010000100010000110001000011100011111010000010100110100101111110001000101101";
        ram[1] = "0b010110100000010010000010000010001011111000111111100110001111010010010010100001111100000011100000000001001001111000010000100011001001110000001100001010011001101101110101111000100000101100110000000100110011001010100011101011101111000010101010001001100110100110000001101011000111111111101010010111111110111010111100100010000100111111011111011000001100111000111001";
        ram[2] = "0b111001000000101010000010000000110100000010001000110100111111010011110101111010101100000100100000010011010111010101010000010011001011001110100101101100110111111010000000100011011010111001101111110111111001111000101010111101010110101100000110100010100011000101101110101101000100000000110001111000110110010001100110000011110001000100100000110010000111011010001110";
        ram[3] = "0b001001111111010001001001111010010101111000100101010001000001011000111100111100111100001010111001000010010001000101010000010000110100000110001111010000011101101010010101111000011001000001110000011000000100101000100101111010001111100011101110110000101100000110101001110000110110001110010011000111100110110100111111011011100100111000100111000000111110101001001111";
        ram[4] = "0b110101100011111101111110100111011011101101001011110111011110110110010001000011000011100100110010011101001110001001111101110001110110011101011111111000001011111111011011111011001001101000001011111110000000111100110011000100101011101100100000000001001101001010111110110010111101010000000010111111000011111100011111101000100000111011100001000111110011110111011110";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_0_0_w12_V) {


static const unsigned DataWidth = 360;
static const unsigned AddressRange = 5;
static const unsigned AddressWidth = 3;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_0_0_w12_V_ram* meminst;


SC_CTOR(dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_0_0_w12_V) {
meminst = new dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_0_0_w12_V_ram("dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_0_0_w12_V_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~dense_resource_rf_leq_nin_0_0_0_0_0_0_0_0_0_0_0_w12_V() {
    delete meminst;
}


};//endmodule
#endif
