// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s_HH_
#define _linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s : public sc_module {
    // Port declarations 107
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > data_0_V;
    sc_in< sc_lv<16> > data_1_V;
    sc_in< sc_lv<16> > data_2_V;
    sc_in< sc_lv<16> > data_3_V;
    sc_in< sc_lv<16> > data_4_V;
    sc_in< sc_lv<16> > data_5_V;
    sc_in< sc_lv<16> > data_6_V;
    sc_in< sc_lv<16> > data_7_V;
    sc_in< sc_lv<16> > data_8_V;
    sc_in< sc_lv<16> > data_9_V;
    sc_in< sc_lv<16> > data_10_V;
    sc_in< sc_lv<16> > data_11_V;
    sc_in< sc_lv<16> > data_12_V;
    sc_in< sc_lv<16> > data_13_V;
    sc_in< sc_lv<16> > data_14_V;
    sc_in< sc_lv<16> > data_15_V;
    sc_in< sc_lv<16> > data_16_V;
    sc_in< sc_lv<16> > data_17_V;
    sc_in< sc_lv<16> > data_18_V;
    sc_in< sc_lv<16> > data_19_V;
    sc_in< sc_lv<16> > data_20_V;
    sc_in< sc_lv<16> > data_21_V;
    sc_in< sc_lv<16> > data_22_V;
    sc_in< sc_lv<16> > data_23_V;
    sc_in< sc_lv<16> > data_24_V;
    sc_in< sc_lv<16> > data_25_V;
    sc_in< sc_lv<16> > data_26_V;
    sc_in< sc_lv<16> > data_27_V;
    sc_in< sc_lv<16> > data_28_V;
    sc_in< sc_lv<16> > data_29_V;
    sc_in< sc_lv<16> > data_30_V;
    sc_in< sc_lv<16> > data_31_V;
    sc_in< sc_lv<16> > data_32_V;
    sc_in< sc_lv<16> > data_33_V;
    sc_in< sc_lv<16> > data_34_V;
    sc_in< sc_lv<16> > data_35_V;
    sc_in< sc_lv<16> > data_36_V;
    sc_in< sc_lv<16> > data_37_V;
    sc_in< sc_lv<16> > data_38_V;
    sc_in< sc_lv<16> > data_39_V;
    sc_in< sc_lv<16> > data_40_V;
    sc_in< sc_lv<16> > data_41_V;
    sc_in< sc_lv<16> > data_42_V;
    sc_in< sc_lv<16> > data_43_V;
    sc_in< sc_lv<16> > data_44_V;
    sc_in< sc_lv<16> > data_45_V;
    sc_in< sc_lv<16> > data_46_V;
    sc_in< sc_lv<16> > data_47_V;
    sc_in< sc_lv<16> > data_48_V;
    sc_in< sc_lv<16> > data_49_V;
    sc_out< sc_lv<16> > ap_return_0;
    sc_out< sc_lv<16> > ap_return_1;
    sc_out< sc_lv<16> > ap_return_2;
    sc_out< sc_lv<16> > ap_return_3;
    sc_out< sc_lv<16> > ap_return_4;
    sc_out< sc_lv<16> > ap_return_5;
    sc_out< sc_lv<16> > ap_return_6;
    sc_out< sc_lv<16> > ap_return_7;
    sc_out< sc_lv<16> > ap_return_8;
    sc_out< sc_lv<16> > ap_return_9;
    sc_out< sc_lv<16> > ap_return_10;
    sc_out< sc_lv<16> > ap_return_11;
    sc_out< sc_lv<16> > ap_return_12;
    sc_out< sc_lv<16> > ap_return_13;
    sc_out< sc_lv<16> > ap_return_14;
    sc_out< sc_lv<16> > ap_return_15;
    sc_out< sc_lv<16> > ap_return_16;
    sc_out< sc_lv<16> > ap_return_17;
    sc_out< sc_lv<16> > ap_return_18;
    sc_out< sc_lv<16> > ap_return_19;
    sc_out< sc_lv<16> > ap_return_20;
    sc_out< sc_lv<16> > ap_return_21;
    sc_out< sc_lv<16> > ap_return_22;
    sc_out< sc_lv<16> > ap_return_23;
    sc_out< sc_lv<16> > ap_return_24;
    sc_out< sc_lv<16> > ap_return_25;
    sc_out< sc_lv<16> > ap_return_26;
    sc_out< sc_lv<16> > ap_return_27;
    sc_out< sc_lv<16> > ap_return_28;
    sc_out< sc_lv<16> > ap_return_29;
    sc_out< sc_lv<16> > ap_return_30;
    sc_out< sc_lv<16> > ap_return_31;
    sc_out< sc_lv<16> > ap_return_32;
    sc_out< sc_lv<16> > ap_return_33;
    sc_out< sc_lv<16> > ap_return_34;
    sc_out< sc_lv<16> > ap_return_35;
    sc_out< sc_lv<16> > ap_return_36;
    sc_out< sc_lv<16> > ap_return_37;
    sc_out< sc_lv<16> > ap_return_38;
    sc_out< sc_lv<16> > ap_return_39;
    sc_out< sc_lv<16> > ap_return_40;
    sc_out< sc_lv<16> > ap_return_41;
    sc_out< sc_lv<16> > ap_return_42;
    sc_out< sc_lv<16> > ap_return_43;
    sc_out< sc_lv<16> > ap_return_44;
    sc_out< sc_lv<16> > ap_return_45;
    sc_out< sc_lv<16> > ap_return_46;
    sc_out< sc_lv<16> > ap_return_47;
    sc_out< sc_lv<16> > ap_return_48;
    sc_out< sc_lv<16> > ap_return_49;


    // Module declarations
    linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s(sc_module_name name);
    SC_HAS_PROCESS(linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s);

    ~linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config6_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<16> > ap_return_0_preg;
    sc_signal< sc_lv<16> > ap_return_1_preg;
    sc_signal< sc_lv<16> > ap_return_2_preg;
    sc_signal< sc_lv<16> > ap_return_3_preg;
    sc_signal< sc_lv<16> > ap_return_4_preg;
    sc_signal< sc_lv<16> > ap_return_5_preg;
    sc_signal< sc_lv<16> > ap_return_6_preg;
    sc_signal< sc_lv<16> > ap_return_7_preg;
    sc_signal< sc_lv<16> > ap_return_8_preg;
    sc_signal< sc_lv<16> > ap_return_9_preg;
    sc_signal< sc_lv<16> > ap_return_10_preg;
    sc_signal< sc_lv<16> > ap_return_11_preg;
    sc_signal< sc_lv<16> > ap_return_12_preg;
    sc_signal< sc_lv<16> > ap_return_13_preg;
    sc_signal< sc_lv<16> > ap_return_14_preg;
    sc_signal< sc_lv<16> > ap_return_15_preg;
    sc_signal< sc_lv<16> > ap_return_16_preg;
    sc_signal< sc_lv<16> > ap_return_17_preg;
    sc_signal< sc_lv<16> > ap_return_18_preg;
    sc_signal< sc_lv<16> > ap_return_19_preg;
    sc_signal< sc_lv<16> > ap_return_20_preg;
    sc_signal< sc_lv<16> > ap_return_21_preg;
    sc_signal< sc_lv<16> > ap_return_22_preg;
    sc_signal< sc_lv<16> > ap_return_23_preg;
    sc_signal< sc_lv<16> > ap_return_24_preg;
    sc_signal< sc_lv<16> > ap_return_25_preg;
    sc_signal< sc_lv<16> > ap_return_26_preg;
    sc_signal< sc_lv<16> > ap_return_27_preg;
    sc_signal< sc_lv<16> > ap_return_28_preg;
    sc_signal< sc_lv<16> > ap_return_29_preg;
    sc_signal< sc_lv<16> > ap_return_30_preg;
    sc_signal< sc_lv<16> > ap_return_31_preg;
    sc_signal< sc_lv<16> > ap_return_32_preg;
    sc_signal< sc_lv<16> > ap_return_33_preg;
    sc_signal< sc_lv<16> > ap_return_34_preg;
    sc_signal< sc_lv<16> > ap_return_35_preg;
    sc_signal< sc_lv<16> > ap_return_36_preg;
    sc_signal< sc_lv<16> > ap_return_37_preg;
    sc_signal< sc_lv<16> > ap_return_38_preg;
    sc_signal< sc_lv<16> > ap_return_39_preg;
    sc_signal< sc_lv<16> > ap_return_40_preg;
    sc_signal< sc_lv<16> > ap_return_41_preg;
    sc_signal< sc_lv<16> > ap_return_42_preg;
    sc_signal< sc_lv<16> > ap_return_43_preg;
    sc_signal< sc_lv<16> > ap_return_44_preg;
    sc_signal< sc_lv<16> > ap_return_45_preg;
    sc_signal< sc_lv<16> > ap_return_46_preg;
    sc_signal< sc_lv<16> > ap_return_47_preg;
    sc_signal< sc_lv<16> > ap_return_48_preg;
    sc_signal< sc_lv<16> > ap_return_49_preg;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_10();
    void thread_ap_return_11();
    void thread_ap_return_12();
    void thread_ap_return_13();
    void thread_ap_return_14();
    void thread_ap_return_15();
    void thread_ap_return_16();
    void thread_ap_return_17();
    void thread_ap_return_18();
    void thread_ap_return_19();
    void thread_ap_return_2();
    void thread_ap_return_20();
    void thread_ap_return_21();
    void thread_ap_return_22();
    void thread_ap_return_23();
    void thread_ap_return_24();
    void thread_ap_return_25();
    void thread_ap_return_26();
    void thread_ap_return_27();
    void thread_ap_return_28();
    void thread_ap_return_29();
    void thread_ap_return_3();
    void thread_ap_return_30();
    void thread_ap_return_31();
    void thread_ap_return_32();
    void thread_ap_return_33();
    void thread_ap_return_34();
    void thread_ap_return_35();
    void thread_ap_return_36();
    void thread_ap_return_37();
    void thread_ap_return_38();
    void thread_ap_return_39();
    void thread_ap_return_4();
    void thread_ap_return_40();
    void thread_ap_return_41();
    void thread_ap_return_42();
    void thread_ap_return_43();
    void thread_ap_return_44();
    void thread_ap_return_45();
    void thread_ap_return_46();
    void thread_ap_return_47();
    void thread_ap_return_48();
    void thread_ap_return_49();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_ap_return_8();
    void thread_ap_return_9();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
