-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_config15_0_0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read9 : IN STD_LOGIC_VECTOR (8 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
end;


architecture behav of dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_config15_0_0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv15_2F0 : STD_LOGIC_VECTOR (14 downto 0) := "000001011110000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln64_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal w15_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal w15_V_ce0 : STD_LOGIC;
    signal w15_V_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal do_init_reg_145 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_index5_reg_161 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_read10_rewind_reg_176 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read111_rewind_reg_190 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read212_rewind_reg_204 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read313_rewind_reg_218 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read414_rewind_reg_232 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read515_rewind_reg_246 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read616_rewind_reg_260 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read717_rewind_reg_274 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read818_rewind_reg_288 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read919_rewind_reg_302 : STD_LOGIC_VECTOR (8 downto 0);
    signal res_V_write_assign3_reg_316 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_phi_mux_do_init_phi_fu_149_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_index_fu_455_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal w_index_reg_656 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln64_reg_661 : STD_LOGIC_VECTOR (0 downto 0);
    signal acc_0_V_fu_591_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_w_index5_phi_fu_165_p6 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_p_read10_phi_phi_fu_334_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_p_read111_phi_phi_fu_346_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_p_read212_phi_phi_fu_358_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_p_read313_phi_phi_fu_370_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_p_read414_phi_phi_fu_382_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_p_read515_phi_phi_fu_394_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_p_read616_phi_phi_fu_406_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_p_read717_phi_phi_fu_418_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_p_read818_phi_phi_fu_430_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_p_read919_phi_phi_fu_442_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_p_read10_phi_reg_330 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter1_p_read10_phi_reg_330 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_p_read111_phi_reg_342 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter1_p_read111_phi_reg_342 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_p_read212_phi_reg_354 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter1_p_read212_phi_reg_354 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_p_read313_phi_reg_366 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter1_p_read313_phi_reg_366 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_p_read414_phi_reg_378 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter1_p_read414_phi_reg_378 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_p_read515_phi_reg_390 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter1_p_read515_phi_reg_390 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_p_read616_phi_reg_402 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter1_p_read616_phi_reg_402 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_p_read717_phi_reg_414 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter1_p_read717_phi_reg_414 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_p_read818_phi_reg_426 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter1_p_read818_phi_reg_426 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_p_read919_phi_reg_438 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter1_p_read919_phi_reg_438 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln77_fu_450_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_ln_fu_467_p10 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln77_fu_489_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1118_fu_501_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1118_fu_501_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1118_fu_501_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln_fu_507_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal phi_ln77_s_fu_521_p10 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_fu_543_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1118_1_fu_561_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1118_1_fu_561_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1118_1_fu_561_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln708_s_fu_567_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln703_fu_577_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln77_fu_517_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_fu_581_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln703_1_fu_587_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal mul_ln1118_1_fu_561_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_fu_501_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_condition_157 : BOOLEAN;
    signal ap_condition_42 : BOOLEAN;

    component myproject_mux_83_9_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        din3 : IN STD_LOGIC_VECTOR (8 downto 0);
        din4 : IN STD_LOGIC_VECTOR (8 downto 0);
        din5 : IN STD_LOGIC_VECTOR (8 downto 0);
        din6 : IN STD_LOGIC_VECTOR (8 downto 0);
        din7 : IN STD_LOGIC_VECTOR (8 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_config15_0_0mb6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    w15_V_U : component dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_config15_0_0mb6
    generic map (
        DataWidth => 18,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w15_V_address0,
        ce0 => w15_V_ce0,
        q0 => w15_V_q0);

    myproject_mux_83_9_1_1_U4237 : component myproject_mux_83_9_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 9,
        din3_WIDTH => 9,
        din4_WIDTH => 9,
        din5_WIDTH => 9,
        din6_WIDTH => 9,
        din7_WIDTH => 9,
        din8_WIDTH => 3,
        dout_WIDTH => 9)
    port map (
        din0 => ap_phi_mux_p_read10_phi_phi_fu_334_p4,
        din1 => ap_phi_mux_p_read111_phi_phi_fu_346_p4,
        din2 => ap_phi_mux_p_read212_phi_phi_fu_358_p4,
        din3 => ap_phi_mux_p_read313_phi_phi_fu_370_p4,
        din4 => ap_phi_mux_p_read414_phi_phi_fu_382_p4,
        din5 => ap_phi_mux_p_read414_phi_phi_fu_382_p4,
        din6 => ap_phi_mux_p_read414_phi_phi_fu_382_p4,
        din7 => ap_phi_mux_p_read414_phi_phi_fu_382_p4,
        din8 => w_index5_reg_161,
        dout => phi_ln_fu_467_p10);

    myproject_mux_83_9_1_1_U4238 : component myproject_mux_83_9_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 9,
        din3_WIDTH => 9,
        din4_WIDTH => 9,
        din5_WIDTH => 9,
        din6_WIDTH => 9,
        din7_WIDTH => 9,
        din8_WIDTH => 3,
        dout_WIDTH => 9)
    port map (
        din0 => ap_phi_mux_p_read515_phi_phi_fu_394_p4,
        din1 => ap_phi_mux_p_read616_phi_phi_fu_406_p4,
        din2 => ap_phi_mux_p_read717_phi_phi_fu_418_p4,
        din3 => ap_phi_mux_p_read818_phi_phi_fu_430_p4,
        din4 => ap_phi_mux_p_read919_phi_phi_fu_442_p4,
        din5 => ap_phi_mux_p_read919_phi_phi_fu_442_p4,
        din6 => ap_phi_mux_p_read919_phi_phi_fu_442_p4,
        din7 => ap_phi_mux_p_read919_phi_phi_fu_442_p4,
        din8 => w_index5_reg_161,
        dout => phi_ln77_s_fu_521_p10);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln64_reg_661 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv15_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln64_reg_661 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    ap_return_preg <= acc_0_V_fu_591_p2;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_p_read10_phi_reg_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_42)) then
                if ((ap_phi_mux_do_init_phi_fu_149_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_p_read10_phi_reg_330 <= p_read;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_read10_phi_reg_330 <= ap_phi_reg_pp0_iter0_p_read10_phi_reg_330;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_read111_phi_reg_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_42)) then
                if ((ap_phi_mux_do_init_phi_fu_149_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_p_read111_phi_reg_342 <= p_read1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_read111_phi_reg_342 <= ap_phi_reg_pp0_iter0_p_read111_phi_reg_342;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_read212_phi_reg_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_42)) then
                if ((ap_phi_mux_do_init_phi_fu_149_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_p_read212_phi_reg_354 <= p_read2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_read212_phi_reg_354 <= ap_phi_reg_pp0_iter0_p_read212_phi_reg_354;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_read313_phi_reg_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_42)) then
                if ((ap_phi_mux_do_init_phi_fu_149_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_p_read313_phi_reg_366 <= p_read3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_read313_phi_reg_366 <= ap_phi_reg_pp0_iter0_p_read313_phi_reg_366;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_read414_phi_reg_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_42)) then
                if ((ap_phi_mux_do_init_phi_fu_149_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_p_read414_phi_reg_378 <= p_read4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_read414_phi_reg_378 <= ap_phi_reg_pp0_iter0_p_read414_phi_reg_378;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_read515_phi_reg_390_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_42)) then
                if ((ap_phi_mux_do_init_phi_fu_149_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_p_read515_phi_reg_390 <= p_read5;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_read515_phi_reg_390 <= ap_phi_reg_pp0_iter0_p_read515_phi_reg_390;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_read616_phi_reg_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_42)) then
                if ((ap_phi_mux_do_init_phi_fu_149_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_p_read616_phi_reg_402 <= p_read6;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_read616_phi_reg_402 <= ap_phi_reg_pp0_iter0_p_read616_phi_reg_402;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_read717_phi_reg_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_42)) then
                if ((ap_phi_mux_do_init_phi_fu_149_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_p_read717_phi_reg_414 <= p_read7;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_read717_phi_reg_414 <= ap_phi_reg_pp0_iter0_p_read717_phi_reg_414;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_read818_phi_reg_426_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_42)) then
                if ((ap_phi_mux_do_init_phi_fu_149_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_p_read818_phi_reg_426 <= p_read8;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_read818_phi_reg_426 <= ap_phi_reg_pp0_iter0_p_read818_phi_reg_426;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_read919_phi_reg_438_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_42)) then
                if ((ap_phi_mux_do_init_phi_fu_149_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_p_read919_phi_reg_438 <= p_read9;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_read919_phi_reg_438 <= ap_phi_reg_pp0_iter0_p_read919_phi_reg_438;
                end if;
            end if; 
        end if;
    end process;

    do_init_reg_145_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln64_reg_661 = ap_const_lv1_0))) then 
                do_init_reg_145 <= ap_const_lv1_0;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln64_reg_661 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                do_init_reg_145 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    res_V_write_assign3_reg_316_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln64_reg_661 = ap_const_lv1_0))) then 
                res_V_write_assign3_reg_316 <= acc_0_V_fu_591_p2;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln64_reg_661 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                res_V_write_assign3_reg_316 <= ap_const_lv15_2F0;
            end if; 
        end if;
    end process;

    w_index5_reg_161_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln64_reg_661 = ap_const_lv1_0))) then 
                w_index5_reg_161 <= w_index_reg_656;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln64_reg_661 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                w_index5_reg_161 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln64_reg_661 <= icmp_ln64_fu_461_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln64_reg_661 = ap_const_lv1_0))) then
                p_read10_rewind_reg_176 <= ap_phi_mux_p_read10_phi_phi_fu_334_p4;
                p_read111_rewind_reg_190 <= ap_phi_mux_p_read111_phi_phi_fu_346_p4;
                p_read212_rewind_reg_204 <= ap_phi_mux_p_read212_phi_phi_fu_358_p4;
                p_read313_rewind_reg_218 <= ap_phi_mux_p_read313_phi_phi_fu_370_p4;
                p_read414_rewind_reg_232 <= ap_phi_mux_p_read414_phi_phi_fu_382_p4;
                p_read515_rewind_reg_246 <= ap_phi_mux_p_read515_phi_phi_fu_394_p4;
                p_read616_rewind_reg_260 <= ap_phi_mux_p_read616_phi_phi_fu_406_p4;
                p_read717_rewind_reg_274 <= ap_phi_mux_p_read717_phi_phi_fu_418_p4;
                p_read818_rewind_reg_288 <= ap_phi_mux_p_read818_phi_phi_fu_430_p4;
                p_read919_rewind_reg_302 <= ap_phi_mux_p_read919_phi_phi_fu_442_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                w_index_reg_656 <= w_index_fu_455_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_reset_idle_pp0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    acc_0_V_fu_591_p2 <= std_logic_vector(unsigned(res_V_write_assign3_reg_316) + unsigned(sext_ln703_1_fu_587_p1));
    add_ln703_fu_581_p2 <= std_logic_vector(signed(sext_ln703_fu_577_p1) + signed(sext_ln77_fu_517_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_done_reg)
    begin
                ap_block_pp0_stage0_11001 <= (ap_done_reg = ap_const_logic_1);
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_done_reg)
    begin
                ap_block_pp0_stage0_subdone <= (ap_done_reg = ap_const_logic_1);
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_157_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_157 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_42_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_42 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln64_reg_661, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln64_reg_661 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_do_init_phi_fu_149_p6_assign_proc : process(do_init_reg_145, icmp_ln64_reg_661, ap_condition_157)
    begin
        if ((ap_const_boolean_1 = ap_condition_157)) then
            if ((icmp_ln64_reg_661 = ap_const_lv1_1)) then 
                ap_phi_mux_do_init_phi_fu_149_p6 <= ap_const_lv1_1;
            elsif ((icmp_ln64_reg_661 = ap_const_lv1_0)) then 
                ap_phi_mux_do_init_phi_fu_149_p6 <= ap_const_lv1_0;
            else 
                ap_phi_mux_do_init_phi_fu_149_p6 <= do_init_reg_145;
            end if;
        else 
            ap_phi_mux_do_init_phi_fu_149_p6 <= do_init_reg_145;
        end if; 
    end process;


    ap_phi_mux_p_read10_phi_phi_fu_334_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, do_init_reg_145, p_read10_rewind_reg_176, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_phi_reg_pp0_iter1_p_read10_phi_reg_330)
    begin
        if (((do_init_reg_145 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_p_read10_phi_phi_fu_334_p4 <= p_read10_rewind_reg_176;
        else 
            ap_phi_mux_p_read10_phi_phi_fu_334_p4 <= ap_phi_reg_pp0_iter1_p_read10_phi_reg_330;
        end if; 
    end process;


    ap_phi_mux_p_read111_phi_phi_fu_346_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, do_init_reg_145, p_read111_rewind_reg_190, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_phi_reg_pp0_iter1_p_read111_phi_reg_342)
    begin
        if (((do_init_reg_145 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_p_read111_phi_phi_fu_346_p4 <= p_read111_rewind_reg_190;
        else 
            ap_phi_mux_p_read111_phi_phi_fu_346_p4 <= ap_phi_reg_pp0_iter1_p_read111_phi_reg_342;
        end if; 
    end process;


    ap_phi_mux_p_read212_phi_phi_fu_358_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, do_init_reg_145, p_read212_rewind_reg_204, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_phi_reg_pp0_iter1_p_read212_phi_reg_354)
    begin
        if (((do_init_reg_145 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_p_read212_phi_phi_fu_358_p4 <= p_read212_rewind_reg_204;
        else 
            ap_phi_mux_p_read212_phi_phi_fu_358_p4 <= ap_phi_reg_pp0_iter1_p_read212_phi_reg_354;
        end if; 
    end process;


    ap_phi_mux_p_read313_phi_phi_fu_370_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, do_init_reg_145, p_read313_rewind_reg_218, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_phi_reg_pp0_iter1_p_read313_phi_reg_366)
    begin
        if (((do_init_reg_145 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_p_read313_phi_phi_fu_370_p4 <= p_read313_rewind_reg_218;
        else 
            ap_phi_mux_p_read313_phi_phi_fu_370_p4 <= ap_phi_reg_pp0_iter1_p_read313_phi_reg_366;
        end if; 
    end process;


    ap_phi_mux_p_read414_phi_phi_fu_382_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, do_init_reg_145, p_read414_rewind_reg_232, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_phi_reg_pp0_iter1_p_read414_phi_reg_378)
    begin
        if (((do_init_reg_145 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_p_read414_phi_phi_fu_382_p4 <= p_read414_rewind_reg_232;
        else 
            ap_phi_mux_p_read414_phi_phi_fu_382_p4 <= ap_phi_reg_pp0_iter1_p_read414_phi_reg_378;
        end if; 
    end process;


    ap_phi_mux_p_read515_phi_phi_fu_394_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, do_init_reg_145, p_read515_rewind_reg_246, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_phi_reg_pp0_iter1_p_read515_phi_reg_390)
    begin
        if (((do_init_reg_145 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_p_read515_phi_phi_fu_394_p4 <= p_read515_rewind_reg_246;
        else 
            ap_phi_mux_p_read515_phi_phi_fu_394_p4 <= ap_phi_reg_pp0_iter1_p_read515_phi_reg_390;
        end if; 
    end process;


    ap_phi_mux_p_read616_phi_phi_fu_406_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, do_init_reg_145, p_read616_rewind_reg_260, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_phi_reg_pp0_iter1_p_read616_phi_reg_402)
    begin
        if (((do_init_reg_145 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_p_read616_phi_phi_fu_406_p4 <= p_read616_rewind_reg_260;
        else 
            ap_phi_mux_p_read616_phi_phi_fu_406_p4 <= ap_phi_reg_pp0_iter1_p_read616_phi_reg_402;
        end if; 
    end process;


    ap_phi_mux_p_read717_phi_phi_fu_418_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, do_init_reg_145, p_read717_rewind_reg_274, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_phi_reg_pp0_iter1_p_read717_phi_reg_414)
    begin
        if (((do_init_reg_145 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_p_read717_phi_phi_fu_418_p4 <= p_read717_rewind_reg_274;
        else 
            ap_phi_mux_p_read717_phi_phi_fu_418_p4 <= ap_phi_reg_pp0_iter1_p_read717_phi_reg_414;
        end if; 
    end process;


    ap_phi_mux_p_read818_phi_phi_fu_430_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, do_init_reg_145, p_read818_rewind_reg_288, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_phi_reg_pp0_iter1_p_read818_phi_reg_426)
    begin
        if (((do_init_reg_145 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_p_read818_phi_phi_fu_430_p4 <= p_read818_rewind_reg_288;
        else 
            ap_phi_mux_p_read818_phi_phi_fu_430_p4 <= ap_phi_reg_pp0_iter1_p_read818_phi_reg_426;
        end if; 
    end process;


    ap_phi_mux_p_read919_phi_phi_fu_442_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, do_init_reg_145, p_read919_rewind_reg_302, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_phi_reg_pp0_iter1_p_read919_phi_reg_438)
    begin
        if (((do_init_reg_145 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_p_read919_phi_phi_fu_442_p4 <= p_read919_rewind_reg_302;
        else 
            ap_phi_mux_p_read919_phi_phi_fu_442_p4 <= ap_phi_reg_pp0_iter1_p_read919_phi_reg_438;
        end if; 
    end process;


    ap_phi_mux_w_index5_phi_fu_165_p6_assign_proc : process(w_index5_reg_161, w_index_reg_656, icmp_ln64_reg_661, ap_condition_157)
    begin
        if ((ap_const_boolean_1 = ap_condition_157)) then
            if ((icmp_ln64_reg_661 = ap_const_lv1_1)) then 
                ap_phi_mux_w_index5_phi_fu_165_p6 <= ap_const_lv3_0;
            elsif ((icmp_ln64_reg_661 = ap_const_lv1_0)) then 
                ap_phi_mux_w_index5_phi_fu_165_p6 <= w_index_reg_656;
            else 
                ap_phi_mux_w_index5_phi_fu_165_p6 <= w_index5_reg_161;
            end if;
        else 
            ap_phi_mux_w_index5_phi_fu_165_p6 <= w_index5_reg_161;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_p_read10_phi_reg_330 <= "XXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_read111_phi_reg_342 <= "XXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_read212_phi_reg_354 <= "XXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_read313_phi_reg_366 <= "XXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_read414_phi_reg_378 <= "XXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_read515_phi_reg_390 <= "XXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_read616_phi_reg_402 <= "XXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_read717_phi_reg_414 <= "XXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_read818_phi_reg_426 <= "XXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_read919_phi_reg_438 <= "XXXXXXXXX";

    ap_ready_assign_proc : process(icmp_ln64_fu_461_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln64_fu_461_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln64_reg_661, acc_0_V_fu_591_p2, ap_enable_reg_pp0_iter1, ap_return_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln64_reg_661 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_return <= acc_0_V_fu_591_p2;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    icmp_ln64_fu_461_p2 <= "1" when (ap_phi_mux_w_index5_phi_fu_165_p6 = ap_const_lv3_4) else "0";
    mul_ln1118_1_fu_561_p0 <= mul_ln1118_1_fu_561_p00(9 - 1 downto 0);
    mul_ln1118_1_fu_561_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_ln77_s_fu_521_p10),18));
    mul_ln1118_1_fu_561_p1 <= tmp_1_fu_543_p4;
    mul_ln1118_1_fu_561_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &mul_ln1118_1_fu_561_p0) * signed(mul_ln1118_1_fu_561_p1))), 18));
    mul_ln1118_fu_501_p0 <= mul_ln1118_fu_501_p00(9 - 1 downto 0);
    mul_ln1118_fu_501_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_ln_fu_467_p10),18));
    mul_ln1118_fu_501_p1 <= trunc_ln77_fu_489_p1;
    mul_ln1118_fu_501_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &mul_ln1118_fu_501_p0) * signed(mul_ln1118_fu_501_p1))), 18));
        sext_ln703_1_fu_587_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_fu_581_p2),15));

        sext_ln703_fu_577_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_s_fu_567_p4),12));

        sext_ln77_fu_517_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_507_p4),12));

    tmp_1_fu_543_p4 <= w15_V_q0(17 downto 9);
    trunc_ln708_s_fu_567_p4 <= mul_ln1118_1_fu_561_p2(17 downto 7);
    trunc_ln77_fu_489_p1 <= w15_V_q0(9 - 1 downto 0);
    trunc_ln_fu_507_p4 <= mul_ln1118_fu_501_p2(17 downto 7);
    w15_V_address0 <= zext_ln77_fu_450_p1(3 - 1 downto 0);

    w15_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w15_V_ce0 <= ap_const_logic_1;
        else 
            w15_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    w_index_fu_455_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(ap_phi_mux_w_index5_phi_fu_165_p6));
    zext_ln77_fu_450_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_w_index5_phi_fu_165_p6),64));
end behav;
