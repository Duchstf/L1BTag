// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_config15_0_0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        ap_return
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [8:0] p_read;
input  [8:0] p_read1;
input  [8:0] p_read2;
input  [8:0] p_read3;
input  [8:0] p_read4;
input  [8:0] p_read5;
input  [8:0] p_read6;
input  [8:0] p_read7;
input  [8:0] p_read8;
input  [8:0] p_read9;
output  [14:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[14:0] ap_return;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln64_fu_461_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [2:0] w15_V_address0;
reg    w15_V_ce0;
wire   [17:0] w15_V_q0;
reg   [0:0] do_init_reg_145;
reg   [2:0] w_index5_reg_161;
reg   [8:0] p_read10_rewind_reg_176;
reg   [8:0] p_read111_rewind_reg_190;
reg   [8:0] p_read212_rewind_reg_204;
reg   [8:0] p_read313_rewind_reg_218;
reg   [8:0] p_read414_rewind_reg_232;
reg   [8:0] p_read515_rewind_reg_246;
reg   [8:0] p_read616_rewind_reg_260;
reg   [8:0] p_read717_rewind_reg_274;
reg   [8:0] p_read818_rewind_reg_288;
reg   [8:0] p_read919_rewind_reg_302;
reg   [14:0] res_V_write_assign3_reg_316;
reg   [0:0] ap_phi_mux_do_init_phi_fu_149_p6;
wire   [2:0] w_index_fu_455_p2;
reg   [2:0] w_index_reg_656;
reg   [0:0] icmp_ln64_reg_661;
wire   [14:0] acc_0_V_fu_591_p2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_w_index5_phi_fu_165_p6;
reg   [8:0] ap_phi_mux_p_read10_phi_phi_fu_334_p4;
reg   [8:0] ap_phi_mux_p_read111_phi_phi_fu_346_p4;
reg   [8:0] ap_phi_mux_p_read212_phi_phi_fu_358_p4;
reg   [8:0] ap_phi_mux_p_read313_phi_phi_fu_370_p4;
reg   [8:0] ap_phi_mux_p_read414_phi_phi_fu_382_p4;
reg   [8:0] ap_phi_mux_p_read515_phi_phi_fu_394_p4;
reg   [8:0] ap_phi_mux_p_read616_phi_phi_fu_406_p4;
reg   [8:0] ap_phi_mux_p_read717_phi_phi_fu_418_p4;
reg   [8:0] ap_phi_mux_p_read818_phi_phi_fu_430_p4;
reg   [8:0] ap_phi_mux_p_read919_phi_phi_fu_442_p4;
wire   [8:0] ap_phi_reg_pp0_iter0_p_read10_phi_reg_330;
reg   [8:0] ap_phi_reg_pp0_iter1_p_read10_phi_reg_330;
wire   [8:0] ap_phi_reg_pp0_iter0_p_read111_phi_reg_342;
reg   [8:0] ap_phi_reg_pp0_iter1_p_read111_phi_reg_342;
wire   [8:0] ap_phi_reg_pp0_iter0_p_read212_phi_reg_354;
reg   [8:0] ap_phi_reg_pp0_iter1_p_read212_phi_reg_354;
wire   [8:0] ap_phi_reg_pp0_iter0_p_read313_phi_reg_366;
reg   [8:0] ap_phi_reg_pp0_iter1_p_read313_phi_reg_366;
wire   [8:0] ap_phi_reg_pp0_iter0_p_read414_phi_reg_378;
reg   [8:0] ap_phi_reg_pp0_iter1_p_read414_phi_reg_378;
wire   [8:0] ap_phi_reg_pp0_iter0_p_read515_phi_reg_390;
reg   [8:0] ap_phi_reg_pp0_iter1_p_read515_phi_reg_390;
wire   [8:0] ap_phi_reg_pp0_iter0_p_read616_phi_reg_402;
reg   [8:0] ap_phi_reg_pp0_iter1_p_read616_phi_reg_402;
wire   [8:0] ap_phi_reg_pp0_iter0_p_read717_phi_reg_414;
reg   [8:0] ap_phi_reg_pp0_iter1_p_read717_phi_reg_414;
wire   [8:0] ap_phi_reg_pp0_iter0_p_read818_phi_reg_426;
reg   [8:0] ap_phi_reg_pp0_iter1_p_read818_phi_reg_426;
wire   [8:0] ap_phi_reg_pp0_iter0_p_read919_phi_reg_438;
reg   [8:0] ap_phi_reg_pp0_iter1_p_read919_phi_reg_438;
wire   [63:0] zext_ln77_fu_450_p1;
wire   [8:0] phi_ln_fu_467_p10;
wire   [8:0] trunc_ln77_fu_489_p1;
wire   [8:0] mul_ln1118_fu_501_p0;
wire  signed [8:0] mul_ln1118_fu_501_p1;
wire   [17:0] mul_ln1118_fu_501_p2;
wire   [10:0] trunc_ln_fu_507_p4;
wire   [8:0] phi_ln77_s_fu_521_p10;
wire   [8:0] tmp_1_fu_543_p4;
wire   [8:0] mul_ln1118_1_fu_561_p0;
wire  signed [8:0] mul_ln1118_1_fu_561_p1;
wire   [17:0] mul_ln1118_1_fu_561_p2;
wire   [10:0] trunc_ln708_s_fu_567_p4;
wire  signed [11:0] sext_ln703_fu_577_p1;
wire  signed [11:0] sext_ln77_fu_517_p1;
wire   [11:0] add_ln703_fu_581_p2;
wire  signed [14:0] sext_ln703_1_fu_587_p1;
reg   [14:0] ap_return_preg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [17:0] mul_ln1118_1_fu_561_p00;
wire   [17:0] mul_ln1118_fu_501_p00;
reg    ap_condition_157;
reg    ap_condition_42;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_return_preg = 15'd0;
end

dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_config15_0_0mb6 #(
    .DataWidth( 18 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
w15_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w15_V_address0),
    .ce0(w15_V_ce0),
    .q0(w15_V_q0)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U4237(
    .din0(ap_phi_mux_p_read10_phi_phi_fu_334_p4),
    .din1(ap_phi_mux_p_read111_phi_phi_fu_346_p4),
    .din2(ap_phi_mux_p_read212_phi_phi_fu_358_p4),
    .din3(ap_phi_mux_p_read313_phi_phi_fu_370_p4),
    .din4(ap_phi_mux_p_read414_phi_phi_fu_382_p4),
    .din5(ap_phi_mux_p_read414_phi_phi_fu_382_p4),
    .din6(ap_phi_mux_p_read414_phi_phi_fu_382_p4),
    .din7(ap_phi_mux_p_read414_phi_phi_fu_382_p4),
    .din8(w_index5_reg_161),
    .dout(phi_ln_fu_467_p10)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U4238(
    .din0(ap_phi_mux_p_read515_phi_phi_fu_394_p4),
    .din1(ap_phi_mux_p_read616_phi_phi_fu_406_p4),
    .din2(ap_phi_mux_p_read717_phi_phi_fu_418_p4),
    .din3(ap_phi_mux_p_read818_phi_phi_fu_430_p4),
    .din4(ap_phi_mux_p_read919_phi_phi_fu_442_p4),
    .din5(ap_phi_mux_p_read919_phi_phi_fu_442_p4),
    .din6(ap_phi_mux_p_read919_phi_phi_fu_442_p4),
    .din7(ap_phi_mux_p_read919_phi_phi_fu_442_p4),
    .din8(w_index5_reg_161),
    .dout(phi_ln77_s_fu_521_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_661 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 15'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_661 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            ap_return_preg <= acc_0_V_fu_591_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_149_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_p_read10_phi_reg_330 <= p_read;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_read10_phi_reg_330 <= ap_phi_reg_pp0_iter0_p_read10_phi_reg_330;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_149_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_p_read111_phi_reg_342 <= p_read1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_read111_phi_reg_342 <= ap_phi_reg_pp0_iter0_p_read111_phi_reg_342;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_149_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_p_read212_phi_reg_354 <= p_read2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_read212_phi_reg_354 <= ap_phi_reg_pp0_iter0_p_read212_phi_reg_354;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_149_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_p_read313_phi_reg_366 <= p_read3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_read313_phi_reg_366 <= ap_phi_reg_pp0_iter0_p_read313_phi_reg_366;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_149_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_p_read414_phi_reg_378 <= p_read4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_read414_phi_reg_378 <= ap_phi_reg_pp0_iter0_p_read414_phi_reg_378;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_149_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_p_read515_phi_reg_390 <= p_read5;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_read515_phi_reg_390 <= ap_phi_reg_pp0_iter0_p_read515_phi_reg_390;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_149_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_p_read616_phi_reg_402 <= p_read6;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_read616_phi_reg_402 <= ap_phi_reg_pp0_iter0_p_read616_phi_reg_402;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_149_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_p_read717_phi_reg_414 <= p_read7;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_read717_phi_reg_414 <= ap_phi_reg_pp0_iter0_p_read717_phi_reg_414;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_149_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_p_read818_phi_reg_426 <= p_read8;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_read818_phi_reg_426 <= ap_phi_reg_pp0_iter0_p_read818_phi_reg_426;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_149_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_p_read919_phi_reg_438 <= p_read9;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_read919_phi_reg_438 <= ap_phi_reg_pp0_iter0_p_read919_phi_reg_438;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln64_reg_661 == 1'd0))) begin
        do_init_reg_145 <= 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_661 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        do_init_reg_145 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln64_reg_661 == 1'd0))) begin
        res_V_write_assign3_reg_316 <= acc_0_V_fu_591_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_661 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_V_write_assign3_reg_316 <= 15'd752;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln64_reg_661 == 1'd0))) begin
        w_index5_reg_161 <= w_index_reg_656;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_661 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        w_index5_reg_161 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln64_reg_661 <= icmp_ln64_fu_461_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln64_reg_661 == 1'd0))) begin
        p_read10_rewind_reg_176 <= ap_phi_mux_p_read10_phi_phi_fu_334_p4;
        p_read111_rewind_reg_190 <= ap_phi_mux_p_read111_phi_phi_fu_346_p4;
        p_read212_rewind_reg_204 <= ap_phi_mux_p_read212_phi_phi_fu_358_p4;
        p_read313_rewind_reg_218 <= ap_phi_mux_p_read313_phi_phi_fu_370_p4;
        p_read414_rewind_reg_232 <= ap_phi_mux_p_read414_phi_phi_fu_382_p4;
        p_read515_rewind_reg_246 <= ap_phi_mux_p_read515_phi_phi_fu_394_p4;
        p_read616_rewind_reg_260 <= ap_phi_mux_p_read616_phi_phi_fu_406_p4;
        p_read717_rewind_reg_274 <= ap_phi_mux_p_read717_phi_phi_fu_418_p4;
        p_read818_rewind_reg_288 <= ap_phi_mux_p_read818_phi_phi_fu_430_p4;
        p_read919_rewind_reg_302 <= ap_phi_mux_p_read919_phi_phi_fu_442_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_index_reg_656 <= w_index_fu_455_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_661 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_157)) begin
        if ((icmp_ln64_reg_661 == 1'd1)) begin
            ap_phi_mux_do_init_phi_fu_149_p6 = 1'd1;
        end else if ((icmp_ln64_reg_661 == 1'd0)) begin
            ap_phi_mux_do_init_phi_fu_149_p6 = 1'd0;
        end else begin
            ap_phi_mux_do_init_phi_fu_149_p6 = do_init_reg_145;
        end
    end else begin
        ap_phi_mux_do_init_phi_fu_149_p6 = do_init_reg_145;
    end
end

always @ (*) begin
    if (((do_init_reg_145 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_read10_phi_phi_fu_334_p4 = p_read10_rewind_reg_176;
    end else begin
        ap_phi_mux_p_read10_phi_phi_fu_334_p4 = ap_phi_reg_pp0_iter1_p_read10_phi_reg_330;
    end
end

always @ (*) begin
    if (((do_init_reg_145 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_read111_phi_phi_fu_346_p4 = p_read111_rewind_reg_190;
    end else begin
        ap_phi_mux_p_read111_phi_phi_fu_346_p4 = ap_phi_reg_pp0_iter1_p_read111_phi_reg_342;
    end
end

always @ (*) begin
    if (((do_init_reg_145 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_read212_phi_phi_fu_358_p4 = p_read212_rewind_reg_204;
    end else begin
        ap_phi_mux_p_read212_phi_phi_fu_358_p4 = ap_phi_reg_pp0_iter1_p_read212_phi_reg_354;
    end
end

always @ (*) begin
    if (((do_init_reg_145 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_read313_phi_phi_fu_370_p4 = p_read313_rewind_reg_218;
    end else begin
        ap_phi_mux_p_read313_phi_phi_fu_370_p4 = ap_phi_reg_pp0_iter1_p_read313_phi_reg_366;
    end
end

always @ (*) begin
    if (((do_init_reg_145 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_read414_phi_phi_fu_382_p4 = p_read414_rewind_reg_232;
    end else begin
        ap_phi_mux_p_read414_phi_phi_fu_382_p4 = ap_phi_reg_pp0_iter1_p_read414_phi_reg_378;
    end
end

always @ (*) begin
    if (((do_init_reg_145 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_read515_phi_phi_fu_394_p4 = p_read515_rewind_reg_246;
    end else begin
        ap_phi_mux_p_read515_phi_phi_fu_394_p4 = ap_phi_reg_pp0_iter1_p_read515_phi_reg_390;
    end
end

always @ (*) begin
    if (((do_init_reg_145 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_read616_phi_phi_fu_406_p4 = p_read616_rewind_reg_260;
    end else begin
        ap_phi_mux_p_read616_phi_phi_fu_406_p4 = ap_phi_reg_pp0_iter1_p_read616_phi_reg_402;
    end
end

always @ (*) begin
    if (((do_init_reg_145 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_read717_phi_phi_fu_418_p4 = p_read717_rewind_reg_274;
    end else begin
        ap_phi_mux_p_read717_phi_phi_fu_418_p4 = ap_phi_reg_pp0_iter1_p_read717_phi_reg_414;
    end
end

always @ (*) begin
    if (((do_init_reg_145 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_read818_phi_phi_fu_430_p4 = p_read818_rewind_reg_288;
    end else begin
        ap_phi_mux_p_read818_phi_phi_fu_430_p4 = ap_phi_reg_pp0_iter1_p_read818_phi_reg_426;
    end
end

always @ (*) begin
    if (((do_init_reg_145 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_read919_phi_phi_fu_442_p4 = p_read919_rewind_reg_302;
    end else begin
        ap_phi_mux_p_read919_phi_phi_fu_442_p4 = ap_phi_reg_pp0_iter1_p_read919_phi_reg_438;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_157)) begin
        if ((icmp_ln64_reg_661 == 1'd1)) begin
            ap_phi_mux_w_index5_phi_fu_165_p6 = 3'd0;
        end else if ((icmp_ln64_reg_661 == 1'd0)) begin
            ap_phi_mux_w_index5_phi_fu_165_p6 = w_index_reg_656;
        end else begin
            ap_phi_mux_w_index5_phi_fu_165_p6 = w_index5_reg_161;
        end
    end else begin
        ap_phi_mux_w_index5_phi_fu_165_p6 = w_index5_reg_161;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_fu_461_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_661 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_return = acc_0_V_fu_591_p2;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w15_V_ce0 = 1'b1;
    end else begin
        w15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_0_V_fu_591_p2 = ($signed(res_V_write_assign3_reg_316) + $signed(sext_ln703_1_fu_587_p1));

assign add_ln703_fu_581_p2 = ($signed(sext_ln703_fu_577_p1) + $signed(sext_ln77_fu_517_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_157 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_42 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_p_read10_phi_reg_330 = 'bx;

assign ap_phi_reg_pp0_iter0_p_read111_phi_reg_342 = 'bx;

assign ap_phi_reg_pp0_iter0_p_read212_phi_reg_354 = 'bx;

assign ap_phi_reg_pp0_iter0_p_read313_phi_reg_366 = 'bx;

assign ap_phi_reg_pp0_iter0_p_read414_phi_reg_378 = 'bx;

assign ap_phi_reg_pp0_iter0_p_read515_phi_reg_390 = 'bx;

assign ap_phi_reg_pp0_iter0_p_read616_phi_reg_402 = 'bx;

assign ap_phi_reg_pp0_iter0_p_read717_phi_reg_414 = 'bx;

assign ap_phi_reg_pp0_iter0_p_read818_phi_reg_426 = 'bx;

assign ap_phi_reg_pp0_iter0_p_read919_phi_reg_438 = 'bx;

assign icmp_ln64_fu_461_p2 = ((ap_phi_mux_w_index5_phi_fu_165_p6 == 3'd4) ? 1'b1 : 1'b0);

assign mul_ln1118_1_fu_561_p0 = mul_ln1118_1_fu_561_p00;

assign mul_ln1118_1_fu_561_p00 = phi_ln77_s_fu_521_p10;

assign mul_ln1118_1_fu_561_p1 = tmp_1_fu_543_p4;

assign mul_ln1118_1_fu_561_p2 = ($signed({{1'b0}, {mul_ln1118_1_fu_561_p0}}) * $signed(mul_ln1118_1_fu_561_p1));

assign mul_ln1118_fu_501_p0 = mul_ln1118_fu_501_p00;

assign mul_ln1118_fu_501_p00 = phi_ln_fu_467_p10;

assign mul_ln1118_fu_501_p1 = trunc_ln77_fu_489_p1;

assign mul_ln1118_fu_501_p2 = ($signed({{1'b0}, {mul_ln1118_fu_501_p0}}) * $signed(mul_ln1118_fu_501_p1));

assign sext_ln703_1_fu_587_p1 = $signed(add_ln703_fu_581_p2);

assign sext_ln703_fu_577_p1 = $signed(trunc_ln708_s_fu_567_p4);

assign sext_ln77_fu_517_p1 = $signed(trunc_ln_fu_507_p4);

assign tmp_1_fu_543_p4 = {{w15_V_q0[17:9]}};

assign trunc_ln708_s_fu_567_p4 = {{mul_ln1118_1_fu_561_p2[17:7]}};

assign trunc_ln77_fu_489_p1 = w15_V_q0[8:0];

assign trunc_ln_fu_507_p4 = {{mul_ln1118_fu_501_p2[17:7]}};

assign w15_V_address0 = zext_ln77_fu_450_p1;

assign w_index_fu_455_p2 = (3'd1 + ap_phi_mux_w_index5_phi_fu_165_p6);

assign zext_ln77_fu_450_p1 = ap_phi_mux_w_index5_phi_fu_165_p6;

endmodule //dense_resource_rf_leq_nin_ap_ufixed_ap_fixed_config15_0_0
