// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_resource_rf_leq_nin_0_1_0_1_0_8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_0_V,
        data_1_V,
        data_2_V,
        data_3_V,
        data_4_V,
        data_5_V,
        data_6_V,
        data_7_V,
        data_8_V,
        data_9_V,
        data_10_V,
        data_11_V,
        data_12_V,
        data_13_V,
        data_14_V,
        data_15_V,
        data_16_V,
        data_17_V,
        data_18_V,
        data_19_V,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [8:0] data_0_V;
input  [8:0] data_1_V;
input  [8:0] data_2_V;
input  [8:0] data_3_V;
input  [8:0] data_4_V;
input  [8:0] data_5_V;
input  [8:0] data_6_V;
input  [8:0] data_7_V;
input  [8:0] data_8_V;
input  [8:0] data_9_V;
input  [8:0] data_10_V;
input  [8:0] data_11_V;
input  [8:0] data_12_V;
input  [8:0] data_13_V;
input  [8:0] data_14_V;
input  [8:0] data_15_V;
input  [8:0] data_16_V;
input  [8:0] data_17_V;
input  [8:0] data_18_V;
input  [8:0] data_19_V;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] ap_return_0;
reg[15:0] ap_return_1;
reg[15:0] ap_return_2;
reg[15:0] ap_return_3;
reg[15:0] ap_return_4;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln64_fu_855_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [2:0] w18_V213_address0;
reg    w18_V213_ce0;
wire   [179:0] w18_V213_q0;
reg   [2:0] w_index13_reg_305;
reg   [15:0] res_0_V_write_assign11_reg_334;
reg   [15:0] res_1_V_write_assign9_reg_348;
reg   [15:0] res_2_V_write_assign7_reg_362;
reg   [15:0] res_3_V_write_assign5_reg_376;
reg   [15:0] res_4_V_write_assign3_reg_390;
wire   [8:0] phi_ln_fu_404_p10;
reg   [8:0] phi_ln_reg_1809;
wire   [8:0] phi_ln77_19_fu_431_p10;
reg   [8:0] phi_ln77_19_reg_1819;
wire   [8:0] phi_ln77_20_fu_453_p10;
reg   [8:0] phi_ln77_20_reg_1824;
wire   [8:0] phi_ln77_21_fu_475_p10;
reg   [8:0] phi_ln77_21_reg_1829;
wire   [8:0] phi_ln77_22_fu_497_p10;
reg   [8:0] phi_ln77_22_reg_1834;
wire   [8:0] phi_ln77_23_fu_519_p10;
reg   [8:0] phi_ln77_23_reg_1839;
wire   [8:0] phi_ln77_24_fu_541_p10;
reg   [8:0] phi_ln77_24_reg_1844;
wire   [8:0] phi_ln77_25_fu_563_p10;
reg   [8:0] phi_ln77_25_reg_1849;
wire   [8:0] phi_ln77_26_fu_585_p10;
reg   [8:0] phi_ln77_26_reg_1854;
wire   [8:0] phi_ln77_27_fu_607_p10;
reg   [8:0] phi_ln77_27_reg_1859;
wire   [8:0] phi_ln77_28_fu_629_p10;
reg   [8:0] phi_ln77_28_reg_1864;
wire   [8:0] phi_ln77_29_fu_651_p10;
reg   [8:0] phi_ln77_29_reg_1869;
wire   [8:0] phi_ln77_30_fu_673_p10;
reg   [8:0] phi_ln77_30_reg_1874;
wire   [8:0] phi_ln77_31_fu_695_p10;
reg   [8:0] phi_ln77_31_reg_1879;
wire   [8:0] phi_ln77_32_fu_717_p10;
reg   [8:0] phi_ln77_32_reg_1884;
wire   [8:0] phi_ln77_33_fu_739_p10;
reg   [8:0] phi_ln77_33_reg_1889;
wire   [8:0] phi_ln77_34_fu_761_p10;
reg   [8:0] phi_ln77_34_reg_1894;
wire   [8:0] phi_ln77_35_fu_783_p10;
reg   [8:0] phi_ln77_35_reg_1899;
wire   [8:0] phi_ln77_36_fu_805_p10;
reg   [8:0] phi_ln77_36_reg_1904;
wire   [8:0] phi_ln77_s_fu_827_p10;
reg   [8:0] phi_ln77_s_reg_1909;
wire   [2:0] w_index_fu_849_p2;
reg   [2:0] w_index_reg_1914;
reg   [0:0] icmp_ln64_reg_1919;
wire   [15:0] acc_0_V_fu_1033_p2;
reg    ap_enable_reg_pp0_iter1;
wire   [15:0] acc_1_V_fu_1217_p2;
wire   [15:0] acc_2_V_fu_1401_p2;
wire   [15:0] acc_3_V_fu_1585_p2;
wire   [15:0] acc_4_V_fu_1769_p2;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg   [2:0] ap_phi_mux_w_index13_phi_fu_309_p6;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln77_fu_426_p1;
wire   [8:0] trunc_ln77_fu_861_p1;
wire   [8:0] mul_ln1118_fu_872_p0;
wire  signed [8:0] mul_ln1118_fu_872_p1;
wire   [17:0] mul_ln1118_fu_872_p2;
wire   [10:0] trunc_ln_fu_878_p4;
wire   [8:0] tmp_19_fu_892_p4;
wire   [8:0] mul_ln1118_21_fu_909_p0;
wire  signed [8:0] mul_ln1118_21_fu_909_p1;
wire   [17:0] mul_ln1118_21_fu_909_p2;
wire   [10:0] trunc_ln708_s_fu_915_p4;
wire   [8:0] tmp_20_fu_929_p4;
wire   [8:0] mul_ln1118_22_fu_946_p0;
wire  signed [8:0] mul_ln1118_22_fu_946_p1;
wire   [17:0] mul_ln1118_22_fu_946_p2;
wire   [10:0] trunc_ln708_291_fu_952_p4;
wire   [8:0] tmp_21_fu_966_p4;
wire   [8:0] mul_ln1118_23_fu_983_p0;
wire  signed [8:0] mul_ln1118_23_fu_983_p1;
wire   [17:0] mul_ln1118_23_fu_983_p2;
wire   [10:0] trunc_ln708_292_fu_989_p4;
wire  signed [11:0] sext_ln77_15_fu_925_p1;
wire  signed [11:0] sext_ln77_fu_888_p1;
wire   [11:0] add_ln703_fu_1003_p2;
wire  signed [11:0] sext_ln703_fu_999_p1;
wire  signed [11:0] sext_ln77_16_fu_962_p1;
wire   [11:0] add_ln703_21_fu_1013_p2;
wire  signed [12:0] sext_ln703_21_fu_1009_p1;
wire  signed [12:0] sext_ln703_22_fu_1019_p1;
wire   [12:0] add_ln703_22_fu_1023_p2;
wire  signed [15:0] sext_ln703_23_fu_1029_p1;
wire   [8:0] tmp_22_fu_1039_p4;
wire   [8:0] mul_ln1118_24_fu_1056_p0;
wire  signed [8:0] mul_ln1118_24_fu_1056_p1;
wire   [17:0] mul_ln1118_24_fu_1056_p2;
wire   [10:0] trunc_ln708_293_fu_1062_p4;
wire   [8:0] tmp_23_fu_1076_p4;
wire   [8:0] mul_ln1118_25_fu_1093_p0;
wire  signed [8:0] mul_ln1118_25_fu_1093_p1;
wire   [17:0] mul_ln1118_25_fu_1093_p2;
wire   [10:0] trunc_ln708_294_fu_1099_p4;
wire   [8:0] tmp_24_fu_1113_p4;
wire   [8:0] mul_ln1118_26_fu_1130_p0;
wire  signed [8:0] mul_ln1118_26_fu_1130_p1;
wire   [17:0] mul_ln1118_26_fu_1130_p2;
wire   [10:0] trunc_ln708_295_fu_1136_p4;
wire   [8:0] tmp_25_fu_1150_p4;
wire   [8:0] mul_ln1118_27_fu_1167_p0;
wire  signed [8:0] mul_ln1118_27_fu_1167_p1;
wire   [17:0] mul_ln1118_27_fu_1167_p2;
wire   [10:0] trunc_ln708_296_fu_1173_p4;
wire  signed [11:0] sext_ln77_18_fu_1109_p1;
wire  signed [11:0] sext_ln77_17_fu_1072_p1;
wire   [11:0] add_ln703_24_fu_1187_p2;
wire  signed [11:0] sext_ln703_24_fu_1183_p1;
wire  signed [11:0] sext_ln77_19_fu_1146_p1;
wire   [11:0] add_ln703_25_fu_1197_p2;
wire  signed [12:0] sext_ln703_25_fu_1193_p1;
wire  signed [12:0] sext_ln703_26_fu_1203_p1;
wire   [12:0] add_ln703_26_fu_1207_p2;
wire  signed [15:0] sext_ln703_27_fu_1213_p1;
wire   [8:0] tmp_26_fu_1223_p4;
wire   [8:0] mul_ln1118_28_fu_1240_p0;
wire  signed [8:0] mul_ln1118_28_fu_1240_p1;
wire   [17:0] mul_ln1118_28_fu_1240_p2;
wire   [10:0] trunc_ln708_297_fu_1246_p4;
wire   [8:0] tmp_27_fu_1260_p4;
wire   [8:0] mul_ln1118_29_fu_1277_p0;
wire  signed [8:0] mul_ln1118_29_fu_1277_p1;
wire   [17:0] mul_ln1118_29_fu_1277_p2;
wire   [10:0] trunc_ln708_298_fu_1283_p4;
wire   [8:0] tmp_28_fu_1297_p4;
wire   [8:0] mul_ln1118_30_fu_1314_p0;
wire  signed [8:0] mul_ln1118_30_fu_1314_p1;
wire   [17:0] mul_ln1118_30_fu_1314_p2;
wire   [10:0] trunc_ln708_299_fu_1320_p4;
wire   [8:0] tmp_29_fu_1334_p4;
wire   [8:0] mul_ln1118_31_fu_1351_p0;
wire  signed [8:0] mul_ln1118_31_fu_1351_p1;
wire   [17:0] mul_ln1118_31_fu_1351_p2;
wire   [10:0] trunc_ln708_300_fu_1357_p4;
wire  signed [11:0] sext_ln77_21_fu_1293_p1;
wire  signed [11:0] sext_ln77_20_fu_1256_p1;
wire   [11:0] add_ln703_28_fu_1371_p2;
wire  signed [11:0] sext_ln703_28_fu_1367_p1;
wire  signed [11:0] sext_ln77_22_fu_1330_p1;
wire   [11:0] add_ln703_29_fu_1381_p2;
wire  signed [12:0] sext_ln703_29_fu_1377_p1;
wire  signed [12:0] sext_ln703_30_fu_1387_p1;
wire   [12:0] add_ln703_30_fu_1391_p2;
wire  signed [15:0] sext_ln703_31_fu_1397_p1;
wire   [8:0] tmp_30_fu_1407_p4;
wire   [8:0] mul_ln1118_32_fu_1424_p0;
wire  signed [8:0] mul_ln1118_32_fu_1424_p1;
wire   [17:0] mul_ln1118_32_fu_1424_p2;
wire   [10:0] trunc_ln708_301_fu_1430_p4;
wire   [8:0] tmp_31_fu_1444_p4;
wire   [8:0] mul_ln1118_33_fu_1461_p0;
wire  signed [8:0] mul_ln1118_33_fu_1461_p1;
wire   [17:0] mul_ln1118_33_fu_1461_p2;
wire   [10:0] trunc_ln708_302_fu_1467_p4;
wire   [8:0] tmp_32_fu_1481_p4;
wire   [8:0] mul_ln1118_34_fu_1498_p0;
wire  signed [8:0] mul_ln1118_34_fu_1498_p1;
wire   [17:0] mul_ln1118_34_fu_1498_p2;
wire   [10:0] trunc_ln708_303_fu_1504_p4;
wire   [8:0] tmp_33_fu_1518_p4;
wire   [8:0] mul_ln1118_35_fu_1535_p0;
wire  signed [8:0] mul_ln1118_35_fu_1535_p1;
wire   [17:0] mul_ln1118_35_fu_1535_p2;
wire   [10:0] trunc_ln708_304_fu_1541_p4;
wire  signed [11:0] sext_ln77_24_fu_1477_p1;
wire  signed [11:0] sext_ln77_23_fu_1440_p1;
wire   [11:0] add_ln703_32_fu_1555_p2;
wire  signed [11:0] sext_ln703_32_fu_1551_p1;
wire  signed [11:0] sext_ln77_25_fu_1514_p1;
wire   [11:0] add_ln703_33_fu_1565_p2;
wire  signed [12:0] sext_ln703_33_fu_1561_p1;
wire  signed [12:0] sext_ln703_34_fu_1571_p1;
wire   [12:0] add_ln703_34_fu_1575_p2;
wire  signed [15:0] sext_ln703_35_fu_1581_p1;
wire   [8:0] tmp_34_fu_1591_p4;
wire   [8:0] mul_ln1118_36_fu_1608_p0;
wire  signed [8:0] mul_ln1118_36_fu_1608_p1;
wire   [17:0] mul_ln1118_36_fu_1608_p2;
wire   [10:0] trunc_ln708_305_fu_1614_p4;
wire   [8:0] tmp_35_fu_1628_p4;
wire   [8:0] mul_ln1118_37_fu_1645_p0;
wire  signed [8:0] mul_ln1118_37_fu_1645_p1;
wire   [17:0] mul_ln1118_37_fu_1645_p2;
wire   [10:0] trunc_ln708_306_fu_1651_p4;
wire   [8:0] tmp_36_fu_1665_p4;
wire   [8:0] mul_ln1118_38_fu_1682_p0;
wire  signed [8:0] mul_ln1118_38_fu_1682_p1;
wire   [17:0] mul_ln1118_38_fu_1682_p2;
wire   [10:0] trunc_ln708_307_fu_1688_p4;
wire   [8:0] tmp_s_fu_1702_p4;
wire   [8:0] mul_ln1118_39_fu_1719_p0;
wire  signed [8:0] mul_ln1118_39_fu_1719_p1;
wire   [17:0] mul_ln1118_39_fu_1719_p2;
wire   [10:0] trunc_ln708_308_fu_1725_p4;
wire  signed [11:0] sext_ln77_27_fu_1661_p1;
wire  signed [11:0] sext_ln77_26_fu_1624_p1;
wire   [11:0] add_ln703_36_fu_1739_p2;
wire  signed [11:0] sext_ln703_36_fu_1735_p1;
wire  signed [11:0] sext_ln77_28_fu_1698_p1;
wire   [11:0] add_ln703_37_fu_1749_p2;
wire  signed [12:0] sext_ln703_37_fu_1745_p1;
wire  signed [12:0] sext_ln703_38_fu_1755_p1;
wire   [12:0] add_ln703_38_fu_1759_p2;
wire  signed [15:0] sext_ln703_39_fu_1765_p1;
reg   [15:0] ap_return_0_preg;
reg   [15:0] ap_return_1_preg;
reg   [15:0] ap_return_2_preg;
reg   [15:0] ap_return_3_preg;
reg   [15:0] ap_return_4_preg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [17:0] mul_ln1118_21_fu_909_p00;
wire   [17:0] mul_ln1118_22_fu_946_p00;
wire   [17:0] mul_ln1118_23_fu_983_p00;
wire   [17:0] mul_ln1118_24_fu_1056_p00;
wire   [17:0] mul_ln1118_25_fu_1093_p00;
wire   [17:0] mul_ln1118_26_fu_1130_p00;
wire   [17:0] mul_ln1118_27_fu_1167_p00;
wire   [17:0] mul_ln1118_28_fu_1240_p00;
wire   [17:0] mul_ln1118_29_fu_1277_p00;
wire   [17:0] mul_ln1118_30_fu_1314_p00;
wire   [17:0] mul_ln1118_31_fu_1351_p00;
wire   [17:0] mul_ln1118_32_fu_1424_p00;
wire   [17:0] mul_ln1118_33_fu_1461_p00;
wire   [17:0] mul_ln1118_34_fu_1498_p00;
wire   [17:0] mul_ln1118_35_fu_1535_p00;
wire   [17:0] mul_ln1118_36_fu_1608_p00;
wire   [17:0] mul_ln1118_37_fu_1645_p00;
wire   [17:0] mul_ln1118_38_fu_1682_p00;
wire   [17:0] mul_ln1118_39_fu_1719_p00;
wire   [17:0] mul_ln1118_fu_872_p00;
reg    ap_condition_167;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_return_0_preg = 16'd0;
#0 ap_return_1_preg = 16'd0;
#0 ap_return_2_preg = 16'd0;
#0 ap_return_3_preg = 16'd0;
#0 ap_return_4_preg = 16'd0;
end

dense_resource_rf_leq_nin_0_1_0_1_0_8_w18_V213 #(
    .DataWidth( 180 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
w18_V213_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w18_V213_address0),
    .ce0(w18_V213_ce0),
    .q0(w18_V213_q0)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U2763(
    .din0(data_0_V),
    .din1(data_1_V),
    .din2(data_2_V),
    .din3(data_3_V),
    .din4(data_4_V),
    .din5(data_4_V),
    .din6(data_4_V),
    .din7(data_4_V),
    .din8(ap_phi_mux_w_index13_phi_fu_309_p6),
    .dout(phi_ln_fu_404_p10)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U2764(
    .din0(data_5_V),
    .din1(data_6_V),
    .din2(data_7_V),
    .din3(data_8_V),
    .din4(data_9_V),
    .din5(data_9_V),
    .din6(data_9_V),
    .din7(data_9_V),
    .din8(ap_phi_mux_w_index13_phi_fu_309_p6),
    .dout(phi_ln77_19_fu_431_p10)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U2765(
    .din0(data_10_V),
    .din1(data_11_V),
    .din2(data_12_V),
    .din3(data_13_V),
    .din4(data_14_V),
    .din5(data_14_V),
    .din6(data_14_V),
    .din7(data_14_V),
    .din8(ap_phi_mux_w_index13_phi_fu_309_p6),
    .dout(phi_ln77_20_fu_453_p10)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U2766(
    .din0(data_15_V),
    .din1(data_16_V),
    .din2(data_17_V),
    .din3(data_18_V),
    .din4(data_19_V),
    .din5(data_19_V),
    .din6(data_19_V),
    .din7(data_19_V),
    .din8(ap_phi_mux_w_index13_phi_fu_309_p6),
    .dout(phi_ln77_21_fu_475_p10)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U2767(
    .din0(data_0_V),
    .din1(data_1_V),
    .din2(data_2_V),
    .din3(data_3_V),
    .din4(data_4_V),
    .din5(data_4_V),
    .din6(data_4_V),
    .din7(data_4_V),
    .din8(ap_phi_mux_w_index13_phi_fu_309_p6),
    .dout(phi_ln77_22_fu_497_p10)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U2768(
    .din0(data_5_V),
    .din1(data_6_V),
    .din2(data_7_V),
    .din3(data_8_V),
    .din4(data_9_V),
    .din5(data_9_V),
    .din6(data_9_V),
    .din7(data_9_V),
    .din8(ap_phi_mux_w_index13_phi_fu_309_p6),
    .dout(phi_ln77_23_fu_519_p10)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U2769(
    .din0(data_10_V),
    .din1(data_11_V),
    .din2(data_12_V),
    .din3(data_13_V),
    .din4(data_14_V),
    .din5(data_14_V),
    .din6(data_14_V),
    .din7(data_14_V),
    .din8(ap_phi_mux_w_index13_phi_fu_309_p6),
    .dout(phi_ln77_24_fu_541_p10)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U2770(
    .din0(data_15_V),
    .din1(data_16_V),
    .din2(data_17_V),
    .din3(data_18_V),
    .din4(data_19_V),
    .din5(data_19_V),
    .din6(data_19_V),
    .din7(data_19_V),
    .din8(ap_phi_mux_w_index13_phi_fu_309_p6),
    .dout(phi_ln77_25_fu_563_p10)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U2771(
    .din0(data_0_V),
    .din1(data_1_V),
    .din2(data_2_V),
    .din3(data_3_V),
    .din4(data_4_V),
    .din5(data_4_V),
    .din6(data_4_V),
    .din7(data_4_V),
    .din8(ap_phi_mux_w_index13_phi_fu_309_p6),
    .dout(phi_ln77_26_fu_585_p10)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U2772(
    .din0(data_5_V),
    .din1(data_6_V),
    .din2(data_7_V),
    .din3(data_8_V),
    .din4(data_9_V),
    .din5(data_9_V),
    .din6(data_9_V),
    .din7(data_9_V),
    .din8(ap_phi_mux_w_index13_phi_fu_309_p6),
    .dout(phi_ln77_27_fu_607_p10)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U2773(
    .din0(data_10_V),
    .din1(data_11_V),
    .din2(data_12_V),
    .din3(data_13_V),
    .din4(data_14_V),
    .din5(data_14_V),
    .din6(data_14_V),
    .din7(data_14_V),
    .din8(ap_phi_mux_w_index13_phi_fu_309_p6),
    .dout(phi_ln77_28_fu_629_p10)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U2774(
    .din0(data_15_V),
    .din1(data_16_V),
    .din2(data_17_V),
    .din3(data_18_V),
    .din4(data_19_V),
    .din5(data_19_V),
    .din6(data_19_V),
    .din7(data_19_V),
    .din8(ap_phi_mux_w_index13_phi_fu_309_p6),
    .dout(phi_ln77_29_fu_651_p10)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U2775(
    .din0(data_0_V),
    .din1(data_1_V),
    .din2(data_2_V),
    .din3(data_3_V),
    .din4(data_4_V),
    .din5(data_4_V),
    .din6(data_4_V),
    .din7(data_4_V),
    .din8(ap_phi_mux_w_index13_phi_fu_309_p6),
    .dout(phi_ln77_30_fu_673_p10)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U2776(
    .din0(data_5_V),
    .din1(data_6_V),
    .din2(data_7_V),
    .din3(data_8_V),
    .din4(data_9_V),
    .din5(data_9_V),
    .din6(data_9_V),
    .din7(data_9_V),
    .din8(ap_phi_mux_w_index13_phi_fu_309_p6),
    .dout(phi_ln77_31_fu_695_p10)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U2777(
    .din0(data_10_V),
    .din1(data_11_V),
    .din2(data_12_V),
    .din3(data_13_V),
    .din4(data_14_V),
    .din5(data_14_V),
    .din6(data_14_V),
    .din7(data_14_V),
    .din8(ap_phi_mux_w_index13_phi_fu_309_p6),
    .dout(phi_ln77_32_fu_717_p10)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U2778(
    .din0(data_15_V),
    .din1(data_16_V),
    .din2(data_17_V),
    .din3(data_18_V),
    .din4(data_19_V),
    .din5(data_19_V),
    .din6(data_19_V),
    .din7(data_19_V),
    .din8(ap_phi_mux_w_index13_phi_fu_309_p6),
    .dout(phi_ln77_33_fu_739_p10)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U2779(
    .din0(data_0_V),
    .din1(data_1_V),
    .din2(data_2_V),
    .din3(data_3_V),
    .din4(data_4_V),
    .din5(data_4_V),
    .din6(data_4_V),
    .din7(data_4_V),
    .din8(ap_phi_mux_w_index13_phi_fu_309_p6),
    .dout(phi_ln77_34_fu_761_p10)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U2780(
    .din0(data_5_V),
    .din1(data_6_V),
    .din2(data_7_V),
    .din3(data_8_V),
    .din4(data_9_V),
    .din5(data_9_V),
    .din6(data_9_V),
    .din7(data_9_V),
    .din8(ap_phi_mux_w_index13_phi_fu_309_p6),
    .dout(phi_ln77_35_fu_783_p10)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U2781(
    .din0(data_10_V),
    .din1(data_11_V),
    .din2(data_12_V),
    .din3(data_13_V),
    .din4(data_14_V),
    .din5(data_14_V),
    .din6(data_14_V),
    .din7(data_14_V),
    .din8(ap_phi_mux_w_index13_phi_fu_309_p6),
    .dout(phi_ln77_36_fu_805_p10)
);

myproject_mux_83_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 9 ),
    .din6_WIDTH( 9 ),
    .din7_WIDTH( 9 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
myproject_mux_83_9_1_1_U2782(
    .din0(data_15_V),
    .din1(data_16_V),
    .din2(data_17_V),
    .din3(data_18_V),
    .din4(data_19_V),
    .din5(data_19_V),
    .din6(data_19_V),
    .din7(data_19_V),
    .din8(ap_phi_mux_w_index13_phi_fu_309_p6),
    .dout(phi_ln77_s_fu_827_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_1919 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_1919 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            ap_return_0_preg <= acc_0_V_fu_1033_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_1919 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            ap_return_1_preg <= acc_1_V_fu_1217_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_1919 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            ap_return_2_preg <= acc_2_V_fu_1401_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_1919 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            ap_return_3_preg <= acc_3_V_fu_1585_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_1919 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            ap_return_4_preg <= acc_4_V_fu_1769_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln64_reg_1919 == 1'd0))) begin
        res_0_V_write_assign11_reg_334 <= acc_0_V_fu_1033_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_1919 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_0_V_write_assign11_reg_334 <= 16'd65476;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln64_reg_1919 == 1'd0))) begin
        res_1_V_write_assign9_reg_348 <= acc_1_V_fu_1217_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_1919 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_1_V_write_assign9_reg_348 <= 16'd40;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln64_reg_1919 == 1'd0))) begin
        res_2_V_write_assign7_reg_362 <= acc_2_V_fu_1401_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_1919 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_2_V_write_assign7_reg_362 <= 16'd28;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln64_reg_1919 == 1'd0))) begin
        res_3_V_write_assign5_reg_376 <= acc_3_V_fu_1585_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_1919 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_3_V_write_assign5_reg_376 <= 16'd60;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln64_reg_1919 == 1'd0))) begin
        res_4_V_write_assign3_reg_390 <= acc_4_V_fu_1769_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_1919 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_4_V_write_assign3_reg_390 <= 16'd65520;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln64_reg_1919 == 1'd0))) begin
        w_index13_reg_305 <= w_index_reg_1914;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_1919 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        w_index13_reg_305 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln64_reg_1919 <= icmp_ln64_fu_855_p2;
        phi_ln77_19_reg_1819 <= phi_ln77_19_fu_431_p10;
        phi_ln77_20_reg_1824 <= phi_ln77_20_fu_453_p10;
        phi_ln77_21_reg_1829 <= phi_ln77_21_fu_475_p10;
        phi_ln77_22_reg_1834 <= phi_ln77_22_fu_497_p10;
        phi_ln77_23_reg_1839 <= phi_ln77_23_fu_519_p10;
        phi_ln77_24_reg_1844 <= phi_ln77_24_fu_541_p10;
        phi_ln77_25_reg_1849 <= phi_ln77_25_fu_563_p10;
        phi_ln77_26_reg_1854 <= phi_ln77_26_fu_585_p10;
        phi_ln77_27_reg_1859 <= phi_ln77_27_fu_607_p10;
        phi_ln77_28_reg_1864 <= phi_ln77_28_fu_629_p10;
        phi_ln77_29_reg_1869 <= phi_ln77_29_fu_651_p10;
        phi_ln77_30_reg_1874 <= phi_ln77_30_fu_673_p10;
        phi_ln77_31_reg_1879 <= phi_ln77_31_fu_695_p10;
        phi_ln77_32_reg_1884 <= phi_ln77_32_fu_717_p10;
        phi_ln77_33_reg_1889 <= phi_ln77_33_fu_739_p10;
        phi_ln77_34_reg_1894 <= phi_ln77_34_fu_761_p10;
        phi_ln77_35_reg_1899 <= phi_ln77_35_fu_783_p10;
        phi_ln77_36_reg_1904 <= phi_ln77_36_fu_805_p10;
        phi_ln77_s_reg_1909 <= phi_ln77_s_fu_827_p10;
        phi_ln_reg_1809 <= phi_ln_fu_404_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_index_reg_1914 <= w_index_fu_849_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_1919 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_167)) begin
        if ((icmp_ln64_reg_1919 == 1'd1)) begin
            ap_phi_mux_w_index13_phi_fu_309_p6 = 3'd0;
        end else if ((icmp_ln64_reg_1919 == 1'd0)) begin
            ap_phi_mux_w_index13_phi_fu_309_p6 = w_index_reg_1914;
        end else begin
            ap_phi_mux_w_index13_phi_fu_309_p6 = w_index13_reg_305;
        end
    end else begin
        ap_phi_mux_w_index13_phi_fu_309_p6 = w_index13_reg_305;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_fu_855_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_1919 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_return_0 = acc_0_V_fu_1033_p2;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_1919 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_return_1 = acc_1_V_fu_1217_p2;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_1919 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_return_2 = acc_2_V_fu_1401_p2;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_1919 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_return_3 = acc_3_V_fu_1585_p2;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_1919 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_return_4 = acc_4_V_fu_1769_p2;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w18_V213_ce0 = 1'b1;
    end else begin
        w18_V213_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_0_V_fu_1033_p2 = ($signed(sext_ln703_23_fu_1029_p1) + $signed(res_0_V_write_assign11_reg_334));

assign acc_1_V_fu_1217_p2 = ($signed(sext_ln703_27_fu_1213_p1) + $signed(res_1_V_write_assign9_reg_348));

assign acc_2_V_fu_1401_p2 = ($signed(sext_ln703_31_fu_1397_p1) + $signed(res_2_V_write_assign7_reg_362));

assign acc_3_V_fu_1585_p2 = ($signed(sext_ln703_35_fu_1581_p1) + $signed(res_3_V_write_assign5_reg_376));

assign acc_4_V_fu_1769_p2 = ($signed(sext_ln703_39_fu_1765_p1) + $signed(res_4_V_write_assign3_reg_390));

assign add_ln703_21_fu_1013_p2 = ($signed(sext_ln703_fu_999_p1) + $signed(sext_ln77_16_fu_962_p1));

assign add_ln703_22_fu_1023_p2 = ($signed(sext_ln703_21_fu_1009_p1) + $signed(sext_ln703_22_fu_1019_p1));

assign add_ln703_24_fu_1187_p2 = ($signed(sext_ln77_18_fu_1109_p1) + $signed(sext_ln77_17_fu_1072_p1));

assign add_ln703_25_fu_1197_p2 = ($signed(sext_ln703_24_fu_1183_p1) + $signed(sext_ln77_19_fu_1146_p1));

assign add_ln703_26_fu_1207_p2 = ($signed(sext_ln703_25_fu_1193_p1) + $signed(sext_ln703_26_fu_1203_p1));

assign add_ln703_28_fu_1371_p2 = ($signed(sext_ln77_21_fu_1293_p1) + $signed(sext_ln77_20_fu_1256_p1));

assign add_ln703_29_fu_1381_p2 = ($signed(sext_ln703_28_fu_1367_p1) + $signed(sext_ln77_22_fu_1330_p1));

assign add_ln703_30_fu_1391_p2 = ($signed(sext_ln703_29_fu_1377_p1) + $signed(sext_ln703_30_fu_1387_p1));

assign add_ln703_32_fu_1555_p2 = ($signed(sext_ln77_24_fu_1477_p1) + $signed(sext_ln77_23_fu_1440_p1));

assign add_ln703_33_fu_1565_p2 = ($signed(sext_ln703_32_fu_1551_p1) + $signed(sext_ln77_25_fu_1514_p1));

assign add_ln703_34_fu_1575_p2 = ($signed(sext_ln703_33_fu_1561_p1) + $signed(sext_ln703_34_fu_1571_p1));

assign add_ln703_36_fu_1739_p2 = ($signed(sext_ln77_27_fu_1661_p1) + $signed(sext_ln77_26_fu_1624_p1));

assign add_ln703_37_fu_1749_p2 = ($signed(sext_ln703_36_fu_1735_p1) + $signed(sext_ln77_28_fu_1698_p1));

assign add_ln703_38_fu_1759_p2 = ($signed(sext_ln703_37_fu_1745_p1) + $signed(sext_ln703_38_fu_1755_p1));

assign add_ln703_fu_1003_p2 = ($signed(sext_ln77_15_fu_925_p1) + $signed(sext_ln77_fu_888_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_167 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign icmp_ln64_fu_855_p2 = ((ap_phi_mux_w_index13_phi_fu_309_p6 == 3'd4) ? 1'b1 : 1'b0);

assign mul_ln1118_21_fu_909_p0 = mul_ln1118_21_fu_909_p00;

assign mul_ln1118_21_fu_909_p00 = phi_ln77_19_reg_1819;

assign mul_ln1118_21_fu_909_p1 = tmp_19_fu_892_p4;

assign mul_ln1118_21_fu_909_p2 = ($signed({{1'b0}, {mul_ln1118_21_fu_909_p0}}) * $signed(mul_ln1118_21_fu_909_p1));

assign mul_ln1118_22_fu_946_p0 = mul_ln1118_22_fu_946_p00;

assign mul_ln1118_22_fu_946_p00 = phi_ln77_20_reg_1824;

assign mul_ln1118_22_fu_946_p1 = tmp_20_fu_929_p4;

assign mul_ln1118_22_fu_946_p2 = ($signed({{1'b0}, {mul_ln1118_22_fu_946_p0}}) * $signed(mul_ln1118_22_fu_946_p1));

assign mul_ln1118_23_fu_983_p0 = mul_ln1118_23_fu_983_p00;

assign mul_ln1118_23_fu_983_p00 = phi_ln77_21_reg_1829;

assign mul_ln1118_23_fu_983_p1 = tmp_21_fu_966_p4;

assign mul_ln1118_23_fu_983_p2 = ($signed({{1'b0}, {mul_ln1118_23_fu_983_p0}}) * $signed(mul_ln1118_23_fu_983_p1));

assign mul_ln1118_24_fu_1056_p0 = mul_ln1118_24_fu_1056_p00;

assign mul_ln1118_24_fu_1056_p00 = phi_ln77_22_reg_1834;

assign mul_ln1118_24_fu_1056_p1 = tmp_22_fu_1039_p4;

assign mul_ln1118_24_fu_1056_p2 = ($signed({{1'b0}, {mul_ln1118_24_fu_1056_p0}}) * $signed(mul_ln1118_24_fu_1056_p1));

assign mul_ln1118_25_fu_1093_p0 = mul_ln1118_25_fu_1093_p00;

assign mul_ln1118_25_fu_1093_p00 = phi_ln77_23_reg_1839;

assign mul_ln1118_25_fu_1093_p1 = tmp_23_fu_1076_p4;

assign mul_ln1118_25_fu_1093_p2 = ($signed({{1'b0}, {mul_ln1118_25_fu_1093_p0}}) * $signed(mul_ln1118_25_fu_1093_p1));

assign mul_ln1118_26_fu_1130_p0 = mul_ln1118_26_fu_1130_p00;

assign mul_ln1118_26_fu_1130_p00 = phi_ln77_24_reg_1844;

assign mul_ln1118_26_fu_1130_p1 = tmp_24_fu_1113_p4;

assign mul_ln1118_26_fu_1130_p2 = ($signed({{1'b0}, {mul_ln1118_26_fu_1130_p0}}) * $signed(mul_ln1118_26_fu_1130_p1));

assign mul_ln1118_27_fu_1167_p0 = mul_ln1118_27_fu_1167_p00;

assign mul_ln1118_27_fu_1167_p00 = phi_ln77_25_reg_1849;

assign mul_ln1118_27_fu_1167_p1 = tmp_25_fu_1150_p4;

assign mul_ln1118_27_fu_1167_p2 = ($signed({{1'b0}, {mul_ln1118_27_fu_1167_p0}}) * $signed(mul_ln1118_27_fu_1167_p1));

assign mul_ln1118_28_fu_1240_p0 = mul_ln1118_28_fu_1240_p00;

assign mul_ln1118_28_fu_1240_p00 = phi_ln77_26_reg_1854;

assign mul_ln1118_28_fu_1240_p1 = tmp_26_fu_1223_p4;

assign mul_ln1118_28_fu_1240_p2 = ($signed({{1'b0}, {mul_ln1118_28_fu_1240_p0}}) * $signed(mul_ln1118_28_fu_1240_p1));

assign mul_ln1118_29_fu_1277_p0 = mul_ln1118_29_fu_1277_p00;

assign mul_ln1118_29_fu_1277_p00 = phi_ln77_27_reg_1859;

assign mul_ln1118_29_fu_1277_p1 = tmp_27_fu_1260_p4;

assign mul_ln1118_29_fu_1277_p2 = ($signed({{1'b0}, {mul_ln1118_29_fu_1277_p0}}) * $signed(mul_ln1118_29_fu_1277_p1));

assign mul_ln1118_30_fu_1314_p0 = mul_ln1118_30_fu_1314_p00;

assign mul_ln1118_30_fu_1314_p00 = phi_ln77_28_reg_1864;

assign mul_ln1118_30_fu_1314_p1 = tmp_28_fu_1297_p4;

assign mul_ln1118_30_fu_1314_p2 = ($signed({{1'b0}, {mul_ln1118_30_fu_1314_p0}}) * $signed(mul_ln1118_30_fu_1314_p1));

assign mul_ln1118_31_fu_1351_p0 = mul_ln1118_31_fu_1351_p00;

assign mul_ln1118_31_fu_1351_p00 = phi_ln77_29_reg_1869;

assign mul_ln1118_31_fu_1351_p1 = tmp_29_fu_1334_p4;

assign mul_ln1118_31_fu_1351_p2 = ($signed({{1'b0}, {mul_ln1118_31_fu_1351_p0}}) * $signed(mul_ln1118_31_fu_1351_p1));

assign mul_ln1118_32_fu_1424_p0 = mul_ln1118_32_fu_1424_p00;

assign mul_ln1118_32_fu_1424_p00 = phi_ln77_30_reg_1874;

assign mul_ln1118_32_fu_1424_p1 = tmp_30_fu_1407_p4;

assign mul_ln1118_32_fu_1424_p2 = ($signed({{1'b0}, {mul_ln1118_32_fu_1424_p0}}) * $signed(mul_ln1118_32_fu_1424_p1));

assign mul_ln1118_33_fu_1461_p0 = mul_ln1118_33_fu_1461_p00;

assign mul_ln1118_33_fu_1461_p00 = phi_ln77_31_reg_1879;

assign mul_ln1118_33_fu_1461_p1 = tmp_31_fu_1444_p4;

assign mul_ln1118_33_fu_1461_p2 = ($signed({{1'b0}, {mul_ln1118_33_fu_1461_p0}}) * $signed(mul_ln1118_33_fu_1461_p1));

assign mul_ln1118_34_fu_1498_p0 = mul_ln1118_34_fu_1498_p00;

assign mul_ln1118_34_fu_1498_p00 = phi_ln77_32_reg_1884;

assign mul_ln1118_34_fu_1498_p1 = tmp_32_fu_1481_p4;

assign mul_ln1118_34_fu_1498_p2 = ($signed({{1'b0}, {mul_ln1118_34_fu_1498_p0}}) * $signed(mul_ln1118_34_fu_1498_p1));

assign mul_ln1118_35_fu_1535_p0 = mul_ln1118_35_fu_1535_p00;

assign mul_ln1118_35_fu_1535_p00 = phi_ln77_33_reg_1889;

assign mul_ln1118_35_fu_1535_p1 = tmp_33_fu_1518_p4;

assign mul_ln1118_35_fu_1535_p2 = ($signed({{1'b0}, {mul_ln1118_35_fu_1535_p0}}) * $signed(mul_ln1118_35_fu_1535_p1));

assign mul_ln1118_36_fu_1608_p0 = mul_ln1118_36_fu_1608_p00;

assign mul_ln1118_36_fu_1608_p00 = phi_ln77_34_reg_1894;

assign mul_ln1118_36_fu_1608_p1 = tmp_34_fu_1591_p4;

assign mul_ln1118_36_fu_1608_p2 = ($signed({{1'b0}, {mul_ln1118_36_fu_1608_p0}}) * $signed(mul_ln1118_36_fu_1608_p1));

assign mul_ln1118_37_fu_1645_p0 = mul_ln1118_37_fu_1645_p00;

assign mul_ln1118_37_fu_1645_p00 = phi_ln77_35_reg_1899;

assign mul_ln1118_37_fu_1645_p1 = tmp_35_fu_1628_p4;

assign mul_ln1118_37_fu_1645_p2 = ($signed({{1'b0}, {mul_ln1118_37_fu_1645_p0}}) * $signed(mul_ln1118_37_fu_1645_p1));

assign mul_ln1118_38_fu_1682_p0 = mul_ln1118_38_fu_1682_p00;

assign mul_ln1118_38_fu_1682_p00 = phi_ln77_36_reg_1904;

assign mul_ln1118_38_fu_1682_p1 = tmp_36_fu_1665_p4;

assign mul_ln1118_38_fu_1682_p2 = ($signed({{1'b0}, {mul_ln1118_38_fu_1682_p0}}) * $signed(mul_ln1118_38_fu_1682_p1));

assign mul_ln1118_39_fu_1719_p0 = mul_ln1118_39_fu_1719_p00;

assign mul_ln1118_39_fu_1719_p00 = phi_ln77_s_reg_1909;

assign mul_ln1118_39_fu_1719_p1 = tmp_s_fu_1702_p4;

assign mul_ln1118_39_fu_1719_p2 = ($signed({{1'b0}, {mul_ln1118_39_fu_1719_p0}}) * $signed(mul_ln1118_39_fu_1719_p1));

assign mul_ln1118_fu_872_p0 = mul_ln1118_fu_872_p00;

assign mul_ln1118_fu_872_p00 = phi_ln_reg_1809;

assign mul_ln1118_fu_872_p1 = trunc_ln77_fu_861_p1;

assign mul_ln1118_fu_872_p2 = ($signed({{1'b0}, {mul_ln1118_fu_872_p0}}) * $signed(mul_ln1118_fu_872_p1));

assign sext_ln703_21_fu_1009_p1 = $signed(add_ln703_fu_1003_p2);

assign sext_ln703_22_fu_1019_p1 = $signed(add_ln703_21_fu_1013_p2);

assign sext_ln703_23_fu_1029_p1 = $signed(add_ln703_22_fu_1023_p2);

assign sext_ln703_24_fu_1183_p1 = $signed(trunc_ln708_296_fu_1173_p4);

assign sext_ln703_25_fu_1193_p1 = $signed(add_ln703_24_fu_1187_p2);

assign sext_ln703_26_fu_1203_p1 = $signed(add_ln703_25_fu_1197_p2);

assign sext_ln703_27_fu_1213_p1 = $signed(add_ln703_26_fu_1207_p2);

assign sext_ln703_28_fu_1367_p1 = $signed(trunc_ln708_300_fu_1357_p4);

assign sext_ln703_29_fu_1377_p1 = $signed(add_ln703_28_fu_1371_p2);

assign sext_ln703_30_fu_1387_p1 = $signed(add_ln703_29_fu_1381_p2);

assign sext_ln703_31_fu_1397_p1 = $signed(add_ln703_30_fu_1391_p2);

assign sext_ln703_32_fu_1551_p1 = $signed(trunc_ln708_304_fu_1541_p4);

assign sext_ln703_33_fu_1561_p1 = $signed(add_ln703_32_fu_1555_p2);

assign sext_ln703_34_fu_1571_p1 = $signed(add_ln703_33_fu_1565_p2);

assign sext_ln703_35_fu_1581_p1 = $signed(add_ln703_34_fu_1575_p2);

assign sext_ln703_36_fu_1735_p1 = $signed(trunc_ln708_308_fu_1725_p4);

assign sext_ln703_37_fu_1745_p1 = $signed(add_ln703_36_fu_1739_p2);

assign sext_ln703_38_fu_1755_p1 = $signed(add_ln703_37_fu_1749_p2);

assign sext_ln703_39_fu_1765_p1 = $signed(add_ln703_38_fu_1759_p2);

assign sext_ln703_fu_999_p1 = $signed(trunc_ln708_292_fu_989_p4);

assign sext_ln77_15_fu_925_p1 = $signed(trunc_ln708_s_fu_915_p4);

assign sext_ln77_16_fu_962_p1 = $signed(trunc_ln708_291_fu_952_p4);

assign sext_ln77_17_fu_1072_p1 = $signed(trunc_ln708_293_fu_1062_p4);

assign sext_ln77_18_fu_1109_p1 = $signed(trunc_ln708_294_fu_1099_p4);

assign sext_ln77_19_fu_1146_p1 = $signed(trunc_ln708_295_fu_1136_p4);

assign sext_ln77_20_fu_1256_p1 = $signed(trunc_ln708_297_fu_1246_p4);

assign sext_ln77_21_fu_1293_p1 = $signed(trunc_ln708_298_fu_1283_p4);

assign sext_ln77_22_fu_1330_p1 = $signed(trunc_ln708_299_fu_1320_p4);

assign sext_ln77_23_fu_1440_p1 = $signed(trunc_ln708_301_fu_1430_p4);

assign sext_ln77_24_fu_1477_p1 = $signed(trunc_ln708_302_fu_1467_p4);

assign sext_ln77_25_fu_1514_p1 = $signed(trunc_ln708_303_fu_1504_p4);

assign sext_ln77_26_fu_1624_p1 = $signed(trunc_ln708_305_fu_1614_p4);

assign sext_ln77_27_fu_1661_p1 = $signed(trunc_ln708_306_fu_1651_p4);

assign sext_ln77_28_fu_1698_p1 = $signed(trunc_ln708_307_fu_1688_p4);

assign sext_ln77_fu_888_p1 = $signed(trunc_ln_fu_878_p4);

assign tmp_19_fu_892_p4 = {{w18_V213_q0[17:9]}};

assign tmp_20_fu_929_p4 = {{w18_V213_q0[26:18]}};

assign tmp_21_fu_966_p4 = {{w18_V213_q0[35:27]}};

assign tmp_22_fu_1039_p4 = {{w18_V213_q0[44:36]}};

assign tmp_23_fu_1076_p4 = {{w18_V213_q0[53:45]}};

assign tmp_24_fu_1113_p4 = {{w18_V213_q0[62:54]}};

assign tmp_25_fu_1150_p4 = {{w18_V213_q0[71:63]}};

assign tmp_26_fu_1223_p4 = {{w18_V213_q0[80:72]}};

assign tmp_27_fu_1260_p4 = {{w18_V213_q0[89:81]}};

assign tmp_28_fu_1297_p4 = {{w18_V213_q0[98:90]}};

assign tmp_29_fu_1334_p4 = {{w18_V213_q0[107:99]}};

assign tmp_30_fu_1407_p4 = {{w18_V213_q0[116:108]}};

assign tmp_31_fu_1444_p4 = {{w18_V213_q0[125:117]}};

assign tmp_32_fu_1481_p4 = {{w18_V213_q0[134:126]}};

assign tmp_33_fu_1518_p4 = {{w18_V213_q0[143:135]}};

assign tmp_34_fu_1591_p4 = {{w18_V213_q0[152:144]}};

assign tmp_35_fu_1628_p4 = {{w18_V213_q0[161:153]}};

assign tmp_36_fu_1665_p4 = {{w18_V213_q0[170:162]}};

assign tmp_s_fu_1702_p4 = {{w18_V213_q0[179:171]}};

assign trunc_ln708_291_fu_952_p4 = {{mul_ln1118_22_fu_946_p2[17:7]}};

assign trunc_ln708_292_fu_989_p4 = {{mul_ln1118_23_fu_983_p2[17:7]}};

assign trunc_ln708_293_fu_1062_p4 = {{mul_ln1118_24_fu_1056_p2[17:7]}};

assign trunc_ln708_294_fu_1099_p4 = {{mul_ln1118_25_fu_1093_p2[17:7]}};

assign trunc_ln708_295_fu_1136_p4 = {{mul_ln1118_26_fu_1130_p2[17:7]}};

assign trunc_ln708_296_fu_1173_p4 = {{mul_ln1118_27_fu_1167_p2[17:7]}};

assign trunc_ln708_297_fu_1246_p4 = {{mul_ln1118_28_fu_1240_p2[17:7]}};

assign trunc_ln708_298_fu_1283_p4 = {{mul_ln1118_29_fu_1277_p2[17:7]}};

assign trunc_ln708_299_fu_1320_p4 = {{mul_ln1118_30_fu_1314_p2[17:7]}};

assign trunc_ln708_300_fu_1357_p4 = {{mul_ln1118_31_fu_1351_p2[17:7]}};

assign trunc_ln708_301_fu_1430_p4 = {{mul_ln1118_32_fu_1424_p2[17:7]}};

assign trunc_ln708_302_fu_1467_p4 = {{mul_ln1118_33_fu_1461_p2[17:7]}};

assign trunc_ln708_303_fu_1504_p4 = {{mul_ln1118_34_fu_1498_p2[17:7]}};

assign trunc_ln708_304_fu_1541_p4 = {{mul_ln1118_35_fu_1535_p2[17:7]}};

assign trunc_ln708_305_fu_1614_p4 = {{mul_ln1118_36_fu_1608_p2[17:7]}};

assign trunc_ln708_306_fu_1651_p4 = {{mul_ln1118_37_fu_1645_p2[17:7]}};

assign trunc_ln708_307_fu_1688_p4 = {{mul_ln1118_38_fu_1682_p2[17:7]}};

assign trunc_ln708_308_fu_1725_p4 = {{mul_ln1118_39_fu_1719_p2[17:7]}};

assign trunc_ln708_s_fu_915_p4 = {{mul_ln1118_21_fu_909_p2[17:7]}};

assign trunc_ln77_fu_861_p1 = w18_V213_q0[8:0];

assign trunc_ln_fu_878_p4 = {{mul_ln1118_fu_872_p2[17:7]}};

assign w18_V213_address0 = zext_ln77_fu_426_p1;

assign w_index_fu_849_p2 = (3'd1 + ap_phi_mux_w_index13_phi_fu_309_p6);

assign zext_ln77_fu_426_p1 = ap_phi_mux_w_index13_phi_fu_309_p6;

endmodule //dense_resource_rf_leq_nin_0_1_0_1_0_8
