// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __dense_resource_ap_fixed_ap_fixed_16_8_5_3_0_config9_s_w9_V_H__
#define __dense_resource_ap_fixed_ap_fixed_16_8_5_3_0_config9_s_w9_V_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct dense_resource_ap_fixed_ap_fixed_16_8_5_3_0_config9_s_w9_V_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 633;
  static const unsigned AddressRange = 5;
  static const unsigned AddressWidth = 3;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(dense_resource_ap_fixed_ap_fixed_16_8_5_3_0_config9_s_w9_V_ram) {
        ram[0] = "0b
        ram[1] = "0b
        ram[2] = "0b
        ram[3] = "0b
        ram[4] = "0b


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(dense_resource_ap_fixed_ap_fixed_16_8_5_3_0_config9_s_w9_V) {


static const unsigned DataWidth = 633;
static const unsigned AddressRange = 5;
static const unsigned AddressWidth = 3;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


dense_resource_ap_fixed_ap_fixed_16_8_5_3_0_config9_s_w9_V_ram* meminst;


SC_CTOR(dense_resource_ap_fixed_ap_fixed_16_8_5_3_0_config9_s_w9_V) {
meminst = new dense_resource_ap_fixed_ap_fixed_16_8_5_3_0_config9_s_w9_V_ram("dense_resource_ap_fixed_ap_fixed_16_8_5_3_0_config9_s_w9_V_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~dense_resource_ap_fixed_ap_fixed_16_8_5_3_0_config9_s_w9_V() {
    delete meminst;
}


};//endmodule
#endif
