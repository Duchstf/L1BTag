// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_resource_ap_fixed_ap_fixed_16_8_5_3_0_config11_s_HH_
#define _dense_resource_ap_fixed_ap_fixed_16_8_5_3_0_config11_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_mux_83_15_1_1.h"
#include "myproject_mul_mul_16s_15ns_24_1_1.h"
#include "myproject_mul_mul_15ns_9s_24_1_1.h"
#include "dense_resource_ap_fixed_ap_fixed_16_8_5_3_0_config11_s_w1bkb.h"

namespace ap_rtl {

struct dense_resource_ap_fixed_ap_fixed_16_8_5_3_0_config11_s : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<15> > data_0_V_read;
    sc_in< sc_lv<15> > data_1_V_read;
    sc_in< sc_lv<15> > data_2_V_read;
    sc_in< sc_lv<15> > data_3_V_read;
    sc_in< sc_lv<15> > data_4_V_read;
    sc_in< sc_lv<15> > data_5_V_read;
    sc_in< sc_lv<15> > data_6_V_read;
    sc_in< sc_lv<15> > data_7_V_read;
    sc_in< sc_lv<15> > data_8_V_read;
    sc_in< sc_lv<15> > data_9_V_read;
    sc_out< sc_lv<16> > ap_return;


    // Module declarations
    dense_resource_ap_fixed_ap_fixed_16_8_5_3_0_config11_s(sc_module_name name);
    SC_HAS_PROCESS(dense_resource_ap_fixed_ap_fixed_16_8_5_3_0_config11_s);

    ~dense_resource_ap_fixed_ap_fixed_16_8_5_3_0_config11_s();

    sc_trace_file* mVcdFile;

    dense_resource_ap_fixed_ap_fixed_16_8_5_3_0_config11_s_w1bkb* w11_V_U;
    myproject_mux_83_15_1_1<1,1,15,15,15,15,15,15,15,15,3,15>* myproject_mux_83_15_1_1_U1861;
    myproject_mux_83_15_1_1<1,1,15,15,15,15,15,15,15,15,3,15>* myproject_mux_83_15_1_1_U1862;
    myproject_mul_mul_16s_15ns_24_1_1<1,1,16,15,24>* myproject_mul_mul_16s_15ns_24_1_1_U1863;
    myproject_mul_mul_15ns_9s_24_1_1<1,1,15,9,24>* myproject_mul_mul_15ns_9s_24_1_1_U1864;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > icmp_ln64_fu_463_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<3> > w11_V_address0;
    sc_signal< sc_logic > w11_V_ce0;
    sc_signal< sc_lv<25> > w11_V_q0;
    sc_signal< sc_lv<1> > do_init_reg_147;
    sc_signal< sc_lv<3> > w_index3_reg_163;
    sc_signal< sc_lv<15> > data_0_V_read4_rewind_reg_178;
    sc_signal< sc_lv<15> > data_1_V_read5_rewind_reg_192;
    sc_signal< sc_lv<15> > data_2_V_read6_rewind_reg_206;
    sc_signal< sc_lv<15> > data_3_V_read7_rewind_reg_220;
    sc_signal< sc_lv<15> > data_4_V_read8_rewind_reg_234;
    sc_signal< sc_lv<15> > data_5_V_read9_rewind_reg_248;
    sc_signal< sc_lv<15> > data_6_V_read10_rewind_reg_262;
    sc_signal< sc_lv<15> > data_7_V_read11_rewind_reg_276;
    sc_signal< sc_lv<15> > data_8_V_read12_rewind_reg_290;
    sc_signal< sc_lv<15> > data_9_V_read13_rewind_reg_304;
    sc_signal< sc_lv<16> > res_V_write_assign1_reg_318;
    sc_signal< sc_lv<1> > ap_phi_mux_do_init_phi_fu_151_p6;
    sc_signal< sc_lv<3> > w_index_fu_457_p2;
    sc_signal< sc_lv<3> > w_index_reg_646;
    sc_signal< sc_lv<1> > icmp_ln64_reg_651;
    sc_signal< sc_lv<16> > acc_0_V_fu_567_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<3> > ap_phi_mux_w_index3_phi_fu_167_p6;
    sc_signal< sc_lv<15> > ap_phi_mux_data_0_V_read4_phi_phi_fu_336_p4;
    sc_signal< sc_lv<15> > ap_phi_mux_data_1_V_read5_phi_phi_fu_348_p4;
    sc_signal< sc_lv<15> > ap_phi_mux_data_2_V_read6_phi_phi_fu_360_p4;
    sc_signal< sc_lv<15> > ap_phi_mux_data_3_V_read7_phi_phi_fu_372_p4;
    sc_signal< sc_lv<15> > ap_phi_mux_data_4_V_read8_phi_phi_fu_384_p4;
    sc_signal< sc_lv<15> > ap_phi_mux_data_5_V_read9_phi_phi_fu_396_p4;
    sc_signal< sc_lv<15> > ap_phi_mux_data_6_V_read10_phi_phi_fu_408_p4;
    sc_signal< sc_lv<15> > ap_phi_mux_data_7_V_read11_phi_phi_fu_420_p4;
    sc_signal< sc_lv<15> > ap_phi_mux_data_8_V_read12_phi_phi_fu_432_p4;
    sc_signal< sc_lv<15> > ap_phi_mux_data_9_V_read13_phi_phi_fu_444_p4;
    sc_signal< sc_lv<15> > ap_phi_reg_pp0_iter0_data_0_V_read4_phi_reg_332;
    sc_signal< sc_lv<15> > ap_phi_reg_pp0_iter1_data_0_V_read4_phi_reg_332;
    sc_signal< sc_lv<15> > ap_phi_reg_pp0_iter0_data_1_V_read5_phi_reg_344;
    sc_signal< sc_lv<15> > ap_phi_reg_pp0_iter1_data_1_V_read5_phi_reg_344;
    sc_signal< sc_lv<15> > ap_phi_reg_pp0_iter0_data_2_V_read6_phi_reg_356;
    sc_signal< sc_lv<15> > ap_phi_reg_pp0_iter1_data_2_V_read6_phi_reg_356;
    sc_signal< sc_lv<15> > ap_phi_reg_pp0_iter0_data_3_V_read7_phi_reg_368;
    sc_signal< sc_lv<15> > ap_phi_reg_pp0_iter1_data_3_V_read7_phi_reg_368;
    sc_signal< sc_lv<15> > ap_phi_reg_pp0_iter0_data_4_V_read8_phi_reg_380;
    sc_signal< sc_lv<15> > ap_phi_reg_pp0_iter1_data_4_V_read8_phi_reg_380;
    sc_signal< sc_lv<15> > ap_phi_reg_pp0_iter0_data_5_V_read9_phi_reg_392;
    sc_signal< sc_lv<15> > ap_phi_reg_pp0_iter1_data_5_V_read9_phi_reg_392;
    sc_signal< sc_lv<15> > ap_phi_reg_pp0_iter0_data_6_V_read10_phi_reg_404;
    sc_signal< sc_lv<15> > ap_phi_reg_pp0_iter1_data_6_V_read10_phi_reg_404;
    sc_signal< sc_lv<15> > ap_phi_reg_pp0_iter0_data_7_V_read11_phi_reg_416;
    sc_signal< sc_lv<15> > ap_phi_reg_pp0_iter1_data_7_V_read11_phi_reg_416;
    sc_signal< sc_lv<15> > ap_phi_reg_pp0_iter0_data_8_V_read12_phi_reg_428;
    sc_signal< sc_lv<15> > ap_phi_reg_pp0_iter1_data_8_V_read12_phi_reg_428;
    sc_signal< sc_lv<15> > ap_phi_reg_pp0_iter0_data_9_V_read13_phi_reg_440;
    sc_signal< sc_lv<15> > ap_phi_reg_pp0_iter1_data_9_V_read13_phi_reg_440;
    sc_signal< sc_lv<64> > zext_ln77_fu_452_p1;
    sc_signal< sc_lv<15> > phi_ln_fu_469_p10;
    sc_signal< sc_lv<16> > trunc_ln77_fu_491_p1;
    sc_signal< sc_lv<24> > mul_ln1118_fu_577_p2;
    sc_signal< sc_lv<15> > phi_ln77_s_fu_512_p10;
    sc_signal< sc_lv<9> > tmp_3_fu_534_p4;
    sc_signal< sc_lv<24> > mul_ln1118_858_fu_584_p2;
    sc_signal< sc_lv<16> > trunc_ln708_s_fu_552_p4;
    sc_signal< sc_lv<16> > trunc_ln_fu_503_p4;
    sc_signal< sc_lv<16> > add_ln703_fu_561_p2;
    sc_signal< sc_lv<15> > mul_ln1118_fu_577_p1;
    sc_signal< sc_lv<15> > mul_ln1118_858_fu_584_p0;
    sc_signal< sc_lv<16> > ap_return_preg;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to0;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<24> > mul_ln1118_858_fu_584_p00;
    sc_signal< sc_lv<24> > mul_ln1118_fu_577_p10;
    sc_signal< bool > ap_condition_157;
    sc_signal< bool > ap_condition_42;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<16> ap_const_lv16_14;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<16> ap_const_lv16_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_acc_0_V_fu_567_p2();
    void thread_add_ln703_fu_561_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_condition_157();
    void thread_ap_condition_42();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to0();
    void thread_ap_phi_mux_data_0_V_read4_phi_phi_fu_336_p4();
    void thread_ap_phi_mux_data_1_V_read5_phi_phi_fu_348_p4();
    void thread_ap_phi_mux_data_2_V_read6_phi_phi_fu_360_p4();
    void thread_ap_phi_mux_data_3_V_read7_phi_phi_fu_372_p4();
    void thread_ap_phi_mux_data_4_V_read8_phi_phi_fu_384_p4();
    void thread_ap_phi_mux_data_5_V_read9_phi_phi_fu_396_p4();
    void thread_ap_phi_mux_data_6_V_read10_phi_phi_fu_408_p4();
    void thread_ap_phi_mux_data_7_V_read11_phi_phi_fu_420_p4();
    void thread_ap_phi_mux_data_8_V_read12_phi_phi_fu_432_p4();
    void thread_ap_phi_mux_data_9_V_read13_phi_phi_fu_444_p4();
    void thread_ap_phi_mux_do_init_phi_fu_151_p6();
    void thread_ap_phi_mux_w_index3_phi_fu_167_p6();
    void thread_ap_phi_reg_pp0_iter0_data_0_V_read4_phi_reg_332();
    void thread_ap_phi_reg_pp0_iter0_data_1_V_read5_phi_reg_344();
    void thread_ap_phi_reg_pp0_iter0_data_2_V_read6_phi_reg_356();
    void thread_ap_phi_reg_pp0_iter0_data_3_V_read7_phi_reg_368();
    void thread_ap_phi_reg_pp0_iter0_data_4_V_read8_phi_reg_380();
    void thread_ap_phi_reg_pp0_iter0_data_5_V_read9_phi_reg_392();
    void thread_ap_phi_reg_pp0_iter0_data_6_V_read10_phi_reg_404();
    void thread_ap_phi_reg_pp0_iter0_data_7_V_read11_phi_reg_416();
    void thread_ap_phi_reg_pp0_iter0_data_8_V_read12_phi_reg_428();
    void thread_ap_phi_reg_pp0_iter0_data_9_V_read13_phi_reg_440();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_return();
    void thread_icmp_ln64_fu_463_p2();
    void thread_mul_ln1118_858_fu_584_p0();
    void thread_mul_ln1118_858_fu_584_p00();
    void thread_mul_ln1118_fu_577_p1();
    void thread_mul_ln1118_fu_577_p10();
    void thread_tmp_3_fu_534_p4();
    void thread_trunc_ln708_s_fu_552_p4();
    void thread_trunc_ln77_fu_491_p1();
    void thread_trunc_ln_fu_503_p4();
    void thread_w11_V_address0();
    void thread_w11_V_ce0();
    void thread_w_index_fu_457_p2();
    void thread_zext_ln77_fu_452_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
