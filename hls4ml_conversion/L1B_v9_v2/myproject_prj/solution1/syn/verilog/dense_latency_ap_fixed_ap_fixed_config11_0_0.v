// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_latency_ap_fixed_ap_fixed_config11_0_0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        data_4_V_read,
        data_5_V_read,
        data_6_V_read,
        data_7_V_read,
        data_8_V_read,
        data_9_V_read,
        ap_return,
        ap_ce
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] data_0_V_read;
input  [15:0] data_1_V_read;
input  [15:0] data_2_V_read;
input  [15:0] data_3_V_read;
input  [15:0] data_4_V_read;
input  [15:0] data_5_V_read;
input  [15:0] data_6_V_read;
input  [15:0] data_7_V_read;
input  [15:0] data_8_V_read;
input  [15:0] data_9_V_read;
output  [15:0] ap_return;
input   ap_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] reg_227;
wire    ap_CS_fsm_state3;
reg   [14:0] trunc_ln708_s_reg_556;
reg   [15:0] trunc_ln708_4_reg_561;
wire    ap_CS_fsm_state2;
reg   [15:0] trunc_ln708_6_reg_566;
reg   [13:0] trunc_ln708_26_reg_571;
wire   [15:0] add_ln703_fu_415_p2;
reg   [15:0] add_ln703_reg_576;
wire   [15:0] add_ln703_119_fu_426_p2;
reg   [15:0] add_ln703_119_reg_581;
reg   [15:0] ap_port_reg_data_0_V_read;
reg   [15:0] ap_port_reg_data_3_V_read;
reg   [15:0] ap_port_reg_data_4_V_read;
reg   [15:0] ap_port_reg_data_5_V_read;
reg   [15:0] ap_port_reg_data_6_V_read;
reg   [15:0] ap_port_reg_data_7_V_read;
reg   [15:0] ap_port_reg_data_8_V_read;
reg   [15:0] ap_port_reg_data_9_V_read;
wire    ap_CS_fsm_state4;
reg  signed [15:0] grp_fu_166_p0;
wire  signed [23:0] sext_ln1118_66_fu_231_p1;
wire  signed [23:0] sext_ln1118_70_fu_251_p1;
wire  signed [23:0] sext_ln1118_74_fu_370_p1;
reg  signed [9:0] grp_fu_166_p1;
reg  signed [15:0] grp_fu_167_p0;
wire  signed [22:0] sext_ln1118_67_fu_236_p1;
wire  signed [23:0] sext_ln1118_73_fu_256_p1;
reg  signed [9:0] grp_fu_167_p1;
wire   [23:0] grp_fu_166_p2;
wire   [22:0] trunc_ln708_s_fu_241_p1;
wire   [23:0] grp_fu_167_p2;
wire   [22:0] shl_ln_fu_271_p3;
wire  signed [23:0] sext_ln1118_fu_279_p1;
wire   [20:0] shl_ln1118_s_fu_289_p3;
wire   [23:0] sub_ln1118_fu_283_p2;
wire  signed [23:0] sext_ln1118_65_fu_297_p1;
wire   [23:0] sub_ln1118_22_fu_301_p2;
wire   [21:0] shl_ln1118_37_fu_320_p3;
wire  signed [22:0] sext_ln1118_68_fu_328_p1;
wire   [16:0] shl_ln1118_38_fu_338_p3;
wire   [22:0] sub_ln1118_23_fu_332_p2;
wire  signed [22:0] sext_ln1118_69_fu_346_p1;
wire   [22:0] sub_ln1118_24_fu_350_p2;
wire   [14:0] trunc_ln708_24_fu_356_p4;
wire   [20:0] shl_ln1118_42_fu_375_p3;
wire   [17:0] shl_ln1118_43_fu_387_p3;
wire  signed [21:0] sext_ln1118_78_fu_395_p1;
wire  signed [21:0] sext_ln1118_77_fu_383_p1;
wire   [21:0] sub_ln1118_28_fu_399_p2;
wire  signed [15:0] sext_ln708_1_fu_366_p1;
wire  signed [15:0] sext_ln708_fu_317_p1;
wire   [15:0] trunc_ln_fu_307_p4;
wire   [15:0] add_ln703_118_fu_421_p2;
wire  signed [15:0] sext_ln1118_71_fu_432_p0;
wire  signed [15:0] shl_ln1118_39_fu_436_p1;
wire   [22:0] shl_ln1118_39_fu_436_p3;
wire  signed [23:0] sext_ln1118_72_fu_444_p1;
wire   [23:0] sub_ln1118_25_fu_448_p2;
wire  signed [23:0] sext_ln1118_71_fu_432_p1;
wire   [23:0] sub_ln1118_26_fu_454_p2;
wire   [21:0] shl_ln1118_40_fu_470_p3;
wire   [18:0] shl_ln1118_41_fu_482_p3;
wire  signed [22:0] sext_ln1118_76_fu_490_p1;
wire  signed [22:0] sext_ln1118_75_fu_478_p1;
wire   [22:0] sub_ln1118_27_fu_494_p2;
wire   [14:0] trunc_ln708_25_fu_500_p4;
wire  signed [15:0] sext_ln708_3_fu_514_p1;
wire   [15:0] trunc_ln708_5_fu_460_p4;
wire   [15:0] add_ln703_115_fu_517_p2;
wire   [15:0] add_ln703_116_fu_523_p2;
wire  signed [15:0] sext_ln708_2_fu_510_p1;
wire   [15:0] add_ln703_120_fu_534_p2;
wire   [15:0] add_ln703_121_fu_540_p2;
wire   [15:0] add_ln703_117_fu_529_p2;
wire   [15:0] add_ln703_122_fu_545_p2;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln703_119_reg_581 <= add_ln703_119_fu_426_p2;
        add_ln703_reg_576 <= add_ln703_fu_415_p2;
        trunc_ln708_26_reg_571 <= {{sub_ln1118_28_fu_399_p2[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_port_reg_data_0_V_read <= data_0_V_read;
        ap_port_reg_data_3_V_read <= data_3_V_read;
        ap_port_reg_data_4_V_read <= data_4_V_read;
        ap_port_reg_data_5_V_read <= data_5_V_read;
        ap_port_reg_data_6_V_read <= data_6_V_read;
        ap_port_reg_data_7_V_read <= data_7_V_read;
        ap_port_reg_data_8_V_read <= data_8_V_read;
        ap_port_reg_data_9_V_read <= data_9_V_read;
        trunc_ln708_s_reg_556 <= {{trunc_ln708_s_fu_241_p1[22:8]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state3)) | ((ap_start == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state1)))) begin
        reg_227 <= {{grp_fu_166_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state2))) begin
        trunc_ln708_4_reg_561 <= {{grp_fu_166_p2[23:8]}};
        trunc_ln708_6_reg_566 <= {{grp_fu_167_p2[23:8]}};
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state4)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_166_p0 = sext_ln1118_74_fu_370_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_166_p0 = sext_ln1118_70_fu_251_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_166_p0 = sext_ln1118_66_fu_231_p1;
    end else begin
        grp_fu_166_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_166_p1 = 24'd235;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_166_p1 = 24'd16777022;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_166_p1 = 24'd71;
    end else begin
        grp_fu_166_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_167_p0 = sext_ln1118_73_fu_256_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_167_p0 = sext_ln1118_67_fu_236_p1;
    end else begin
        grp_fu_167_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_167_p1 = 24'd167;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_167_p1 = 23'd8388556;
    end else begin
        grp_fu_167_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln703_115_fu_517_p2 = ($signed(sext_ln708_3_fu_514_p1) + $signed(reg_227));

assign add_ln703_116_fu_523_p2 = (trunc_ln708_5_fu_460_p4 + add_ln703_115_fu_517_p2);

assign add_ln703_117_fu_529_p2 = (add_ln703_reg_576 + add_ln703_116_fu_523_p2);

assign add_ln703_118_fu_421_p2 = ($signed(trunc_ln708_4_reg_561) + $signed(sext_ln708_fu_317_p1));

assign add_ln703_119_fu_426_p2 = (trunc_ln_fu_307_p4 + add_ln703_118_fu_421_p2);

assign add_ln703_120_fu_534_p2 = ($signed(sext_ln708_2_fu_510_p1) + $signed(16'd20));

assign add_ln703_121_fu_540_p2 = (trunc_ln708_6_reg_566 + add_ln703_120_fu_534_p2);

assign add_ln703_122_fu_545_p2 = (add_ln703_119_reg_581 + add_ln703_121_fu_540_p2);

assign add_ln703_fu_415_p2 = ($signed(reg_227) + $signed(sext_ln708_1_fu_366_p1));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_return = (add_ln703_117_fu_529_p2 + add_ln703_122_fu_545_p2);

assign grp_fu_166_p2 = ($signed(grp_fu_166_p0) * $signed(grp_fu_166_p1));

assign grp_fu_167_p2 = ($signed(grp_fu_167_p0) * $signed(grp_fu_167_p1));

assign sext_ln1118_65_fu_297_p1 = $signed(shl_ln1118_s_fu_289_p3);

assign sext_ln1118_66_fu_231_p1 = $signed(data_1_V_read);

assign sext_ln1118_67_fu_236_p1 = $signed(data_2_V_read);

assign sext_ln1118_68_fu_328_p1 = $signed(shl_ln1118_37_fu_320_p3);

assign sext_ln1118_69_fu_346_p1 = $signed(shl_ln1118_38_fu_338_p3);

assign sext_ln1118_70_fu_251_p1 = $signed(ap_port_reg_data_4_V_read);

assign sext_ln1118_71_fu_432_p0 = ap_port_reg_data_5_V_read;

assign sext_ln1118_71_fu_432_p1 = sext_ln1118_71_fu_432_p0;

assign sext_ln1118_72_fu_444_p1 = $signed(shl_ln1118_39_fu_436_p3);

assign sext_ln1118_73_fu_256_p1 = $signed(ap_port_reg_data_6_V_read);

assign sext_ln1118_74_fu_370_p1 = $signed(ap_port_reg_data_7_V_read);

assign sext_ln1118_75_fu_478_p1 = $signed(shl_ln1118_40_fu_470_p3);

assign sext_ln1118_76_fu_490_p1 = $signed(shl_ln1118_41_fu_482_p3);

assign sext_ln1118_77_fu_383_p1 = $signed(shl_ln1118_42_fu_375_p3);

assign sext_ln1118_78_fu_395_p1 = $signed(shl_ln1118_43_fu_387_p3);

assign sext_ln1118_fu_279_p1 = $signed(shl_ln_fu_271_p3);

assign sext_ln708_1_fu_366_p1 = $signed(trunc_ln708_24_fu_356_p4);

assign sext_ln708_2_fu_510_p1 = $signed(trunc_ln708_25_fu_500_p4);

assign sext_ln708_3_fu_514_p1 = $signed(trunc_ln708_26_reg_571);

assign sext_ln708_fu_317_p1 = $signed(trunc_ln708_s_reg_556);

assign shl_ln1118_37_fu_320_p3 = {{ap_port_reg_data_3_V_read}, {6'd0}};

assign shl_ln1118_38_fu_338_p3 = {{ap_port_reg_data_3_V_read}, {1'd0}};

assign shl_ln1118_39_fu_436_p1 = ap_port_reg_data_5_V_read;

assign shl_ln1118_39_fu_436_p3 = {{shl_ln1118_39_fu_436_p1}, {7'd0}};

assign shl_ln1118_40_fu_470_p3 = {{ap_port_reg_data_8_V_read}, {6'd0}};

assign shl_ln1118_41_fu_482_p3 = {{ap_port_reg_data_8_V_read}, {3'd0}};

assign shl_ln1118_42_fu_375_p3 = {{ap_port_reg_data_9_V_read}, {5'd0}};

assign shl_ln1118_43_fu_387_p3 = {{ap_port_reg_data_9_V_read}, {2'd0}};

assign shl_ln1118_s_fu_289_p3 = {{ap_port_reg_data_0_V_read}, {5'd0}};

assign shl_ln_fu_271_p3 = {{ap_port_reg_data_0_V_read}, {7'd0}};

assign sub_ln1118_22_fu_301_p2 = ($signed(sub_ln1118_fu_283_p2) - $signed(sext_ln1118_65_fu_297_p1));

assign sub_ln1118_23_fu_332_p2 = ($signed(23'd0) - $signed(sext_ln1118_68_fu_328_p1));

assign sub_ln1118_24_fu_350_p2 = ($signed(sub_ln1118_23_fu_332_p2) - $signed(sext_ln1118_69_fu_346_p1));

assign sub_ln1118_25_fu_448_p2 = ($signed(24'd0) - $signed(sext_ln1118_72_fu_444_p1));

assign sub_ln1118_26_fu_454_p2 = ($signed(sub_ln1118_25_fu_448_p2) - $signed(sext_ln1118_71_fu_432_p1));

assign sub_ln1118_27_fu_494_p2 = ($signed(sext_ln1118_76_fu_490_p1) - $signed(sext_ln1118_75_fu_478_p1));

assign sub_ln1118_28_fu_399_p2 = ($signed(sext_ln1118_78_fu_395_p1) - $signed(sext_ln1118_77_fu_383_p1));

assign sub_ln1118_fu_283_p2 = ($signed(24'd0) - $signed(sext_ln1118_fu_279_p1));

assign trunc_ln708_24_fu_356_p4 = {{sub_ln1118_24_fu_350_p2[22:8]}};

assign trunc_ln708_25_fu_500_p4 = {{sub_ln1118_27_fu_494_p2[22:8]}};

assign trunc_ln708_5_fu_460_p4 = {{sub_ln1118_26_fu_454_p2[23:8]}};

assign trunc_ln708_s_fu_241_p1 = grp_fu_167_p2;

assign trunc_ln_fu_307_p4 = {{sub_ln1118_22_fu_301_p2[23:8]}};

endmodule //dense_latency_ap_fixed_ap_fixed_config11_0_0
