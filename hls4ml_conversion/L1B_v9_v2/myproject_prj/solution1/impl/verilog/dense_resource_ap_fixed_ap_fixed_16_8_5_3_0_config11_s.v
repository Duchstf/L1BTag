// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_resource_ap_fixed_ap_fixed_16_8_5_3_0_config11_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        data_4_V_read,
        data_5_V_read,
        data_6_V_read,
        data_7_V_read,
        data_8_V_read,
        data_9_V_read,
        ap_return
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [14:0] data_0_V_read;
input  [14:0] data_1_V_read;
input  [14:0] data_2_V_read;
input  [14:0] data_3_V_read;
input  [14:0] data_4_V_read;
input  [14:0] data_5_V_read;
input  [14:0] data_6_V_read;
input  [14:0] data_7_V_read;
input  [14:0] data_8_V_read;
input  [14:0] data_9_V_read;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] ap_return;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln64_fu_463_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [2:0] w11_V_address0;
reg    w11_V_ce0;
wire   [24:0] w11_V_q0;
reg   [0:0] do_init_reg_147;
reg   [2:0] w_index3_reg_163;
reg   [14:0] data_0_V_read4_rewind_reg_178;
reg   [14:0] data_1_V_read5_rewind_reg_192;
reg   [14:0] data_2_V_read6_rewind_reg_206;
reg   [14:0] data_3_V_read7_rewind_reg_220;
reg   [14:0] data_4_V_read8_rewind_reg_234;
reg   [14:0] data_5_V_read9_rewind_reg_248;
reg   [14:0] data_6_V_read10_rewind_reg_262;
reg   [14:0] data_7_V_read11_rewind_reg_276;
reg   [14:0] data_8_V_read12_rewind_reg_290;
reg   [14:0] data_9_V_read13_rewind_reg_304;
reg   [15:0] res_V_write_assign1_reg_318;
reg   [0:0] ap_phi_mux_do_init_phi_fu_151_p6;
wire   [2:0] w_index_fu_457_p2;
reg   [2:0] w_index_reg_646;
reg   [0:0] icmp_ln64_reg_651;
wire   [15:0] acc_0_V_fu_567_p2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_w_index3_phi_fu_167_p6;
reg   [14:0] ap_phi_mux_data_0_V_read4_phi_phi_fu_336_p4;
reg   [14:0] ap_phi_mux_data_1_V_read5_phi_phi_fu_348_p4;
reg   [14:0] ap_phi_mux_data_2_V_read6_phi_phi_fu_360_p4;
reg   [14:0] ap_phi_mux_data_3_V_read7_phi_phi_fu_372_p4;
reg   [14:0] ap_phi_mux_data_4_V_read8_phi_phi_fu_384_p4;
reg   [14:0] ap_phi_mux_data_5_V_read9_phi_phi_fu_396_p4;
reg   [14:0] ap_phi_mux_data_6_V_read10_phi_phi_fu_408_p4;
reg   [14:0] ap_phi_mux_data_7_V_read11_phi_phi_fu_420_p4;
reg   [14:0] ap_phi_mux_data_8_V_read12_phi_phi_fu_432_p4;
reg   [14:0] ap_phi_mux_data_9_V_read13_phi_phi_fu_444_p4;
wire   [14:0] ap_phi_reg_pp0_iter0_data_0_V_read4_phi_reg_332;
reg   [14:0] ap_phi_reg_pp0_iter1_data_0_V_read4_phi_reg_332;
wire   [14:0] ap_phi_reg_pp0_iter0_data_1_V_read5_phi_reg_344;
reg   [14:0] ap_phi_reg_pp0_iter1_data_1_V_read5_phi_reg_344;
wire   [14:0] ap_phi_reg_pp0_iter0_data_2_V_read6_phi_reg_356;
reg   [14:0] ap_phi_reg_pp0_iter1_data_2_V_read6_phi_reg_356;
wire   [14:0] ap_phi_reg_pp0_iter0_data_3_V_read7_phi_reg_368;
reg   [14:0] ap_phi_reg_pp0_iter1_data_3_V_read7_phi_reg_368;
wire   [14:0] ap_phi_reg_pp0_iter0_data_4_V_read8_phi_reg_380;
reg   [14:0] ap_phi_reg_pp0_iter1_data_4_V_read8_phi_reg_380;
wire   [14:0] ap_phi_reg_pp0_iter0_data_5_V_read9_phi_reg_392;
reg   [14:0] ap_phi_reg_pp0_iter1_data_5_V_read9_phi_reg_392;
wire   [14:0] ap_phi_reg_pp0_iter0_data_6_V_read10_phi_reg_404;
reg   [14:0] ap_phi_reg_pp0_iter1_data_6_V_read10_phi_reg_404;
wire   [14:0] ap_phi_reg_pp0_iter0_data_7_V_read11_phi_reg_416;
reg   [14:0] ap_phi_reg_pp0_iter1_data_7_V_read11_phi_reg_416;
wire   [14:0] ap_phi_reg_pp0_iter0_data_8_V_read12_phi_reg_428;
reg   [14:0] ap_phi_reg_pp0_iter1_data_8_V_read12_phi_reg_428;
wire   [14:0] ap_phi_reg_pp0_iter0_data_9_V_read13_phi_reg_440;
reg   [14:0] ap_phi_reg_pp0_iter1_data_9_V_read13_phi_reg_440;
wire   [63:0] zext_ln77_fu_452_p1;
wire   [14:0] phi_ln_fu_469_p10;
wire  signed [15:0] trunc_ln77_fu_491_p1;
wire  signed [23:0] mul_ln1118_fu_577_p2;
wire   [14:0] phi_ln77_s_fu_512_p10;
wire  signed [8:0] tmp_3_fu_534_p4;
wire  signed [23:0] mul_ln1118_858_fu_584_p2;
wire   [15:0] trunc_ln708_s_fu_552_p4;
wire   [15:0] trunc_ln_fu_503_p4;
wire   [15:0] add_ln703_fu_561_p2;
wire   [14:0] mul_ln1118_fu_577_p1;
wire   [14:0] mul_ln1118_858_fu_584_p0;
reg   [15:0] ap_return_preg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [23:0] mul_ln1118_858_fu_584_p00;
wire   [23:0] mul_ln1118_fu_577_p10;
reg    ap_condition_157;
reg    ap_condition_42;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_return_preg = 16'd0;
end

dense_resource_ap_fixed_ap_fixed_16_8_5_3_0_config11_s_w1bkb #(
    .DataWidth( 25 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
w11_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w11_V_address0),
    .ce0(w11_V_ce0),
    .q0(w11_V_q0)
);

myproject_mux_83_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 15 ),
    .din3_WIDTH( 15 ),
    .din4_WIDTH( 15 ),
    .din5_WIDTH( 15 ),
    .din6_WIDTH( 15 ),
    .din7_WIDTH( 15 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 15 ))
myproject_mux_83_15_1_1_U1861(
    .din0(ap_phi_mux_data_0_V_read4_phi_phi_fu_336_p4),
    .din1(ap_phi_mux_data_1_V_read5_phi_phi_fu_348_p4),
    .din2(ap_phi_mux_data_2_V_read6_phi_phi_fu_360_p4),
    .din3(ap_phi_mux_data_3_V_read7_phi_phi_fu_372_p4),
    .din4(ap_phi_mux_data_4_V_read8_phi_phi_fu_384_p4),
    .din5(ap_phi_mux_data_4_V_read8_phi_phi_fu_384_p4),
    .din6(ap_phi_mux_data_4_V_read8_phi_phi_fu_384_p4),
    .din7(ap_phi_mux_data_4_V_read8_phi_phi_fu_384_p4),
    .din8(w_index3_reg_163),
    .dout(phi_ln_fu_469_p10)
);

myproject_mux_83_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 15 ),
    .din3_WIDTH( 15 ),
    .din4_WIDTH( 15 ),
    .din5_WIDTH( 15 ),
    .din6_WIDTH( 15 ),
    .din7_WIDTH( 15 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 15 ))
myproject_mux_83_15_1_1_U1862(
    .din0(ap_phi_mux_data_5_V_read9_phi_phi_fu_396_p4),
    .din1(ap_phi_mux_data_6_V_read10_phi_phi_fu_408_p4),
    .din2(ap_phi_mux_data_7_V_read11_phi_phi_fu_420_p4),
    .din3(ap_phi_mux_data_8_V_read12_phi_phi_fu_432_p4),
    .din4(ap_phi_mux_data_9_V_read13_phi_phi_fu_444_p4),
    .din5(ap_phi_mux_data_9_V_read13_phi_phi_fu_444_p4),
    .din6(ap_phi_mux_data_9_V_read13_phi_phi_fu_444_p4),
    .din7(ap_phi_mux_data_9_V_read13_phi_phi_fu_444_p4),
    .din8(w_index3_reg_163),
    .dout(phi_ln77_s_fu_512_p10)
);

myproject_mul_mul_16s_15ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 24 ))
myproject_mul_mul_16s_15ns_24_1_1_U1863(
    .din0(trunc_ln77_fu_491_p1),
    .din1(mul_ln1118_fu_577_p1),
    .dout(mul_ln1118_fu_577_p2)
);

myproject_mul_mul_15ns_9s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 24 ))
myproject_mul_mul_15ns_9s_24_1_1_U1864(
    .din0(mul_ln1118_858_fu_584_p0),
    .din1(tmp_3_fu_534_p4),
    .dout(mul_ln1118_858_fu_584_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_651 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_651 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            ap_return_preg <= acc_0_V_fu_567_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_151_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_0_V_read4_phi_reg_332 <= data_0_V_read;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_0_V_read4_phi_reg_332 <= ap_phi_reg_pp0_iter0_data_0_V_read4_phi_reg_332;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_151_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_1_V_read5_phi_reg_344 <= data_1_V_read;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_1_V_read5_phi_reg_344 <= ap_phi_reg_pp0_iter0_data_1_V_read5_phi_reg_344;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_151_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_2_V_read6_phi_reg_356 <= data_2_V_read;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_2_V_read6_phi_reg_356 <= ap_phi_reg_pp0_iter0_data_2_V_read6_phi_reg_356;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_151_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_3_V_read7_phi_reg_368 <= data_3_V_read;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_3_V_read7_phi_reg_368 <= ap_phi_reg_pp0_iter0_data_3_V_read7_phi_reg_368;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_151_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_4_V_read8_phi_reg_380 <= data_4_V_read;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_4_V_read8_phi_reg_380 <= ap_phi_reg_pp0_iter0_data_4_V_read8_phi_reg_380;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_151_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_5_V_read9_phi_reg_392 <= data_5_V_read;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_5_V_read9_phi_reg_392 <= ap_phi_reg_pp0_iter0_data_5_V_read9_phi_reg_392;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_151_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_6_V_read10_phi_reg_404 <= data_6_V_read;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_6_V_read10_phi_reg_404 <= ap_phi_reg_pp0_iter0_data_6_V_read10_phi_reg_404;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_151_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_7_V_read11_phi_reg_416 <= data_7_V_read;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_7_V_read11_phi_reg_416 <= ap_phi_reg_pp0_iter0_data_7_V_read11_phi_reg_416;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_151_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_8_V_read12_phi_reg_428 <= data_8_V_read;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_8_V_read12_phi_reg_428 <= ap_phi_reg_pp0_iter0_data_8_V_read12_phi_reg_428;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_151_p6 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_data_9_V_read13_phi_reg_440 <= data_9_V_read;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_9_V_read13_phi_reg_440 <= ap_phi_reg_pp0_iter0_data_9_V_read13_phi_reg_440;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln64_reg_651 == 1'd0))) begin
        do_init_reg_147 <= 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_651 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        do_init_reg_147 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln64_reg_651 == 1'd0))) begin
        res_V_write_assign1_reg_318 <= acc_0_V_fu_567_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_651 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_V_write_assign1_reg_318 <= 16'd20;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln64_reg_651 == 1'd0))) begin
        w_index3_reg_163 <= w_index_reg_646;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_651 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        w_index3_reg_163 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln64_reg_651 == 1'd0))) begin
        data_0_V_read4_rewind_reg_178 <= ap_phi_mux_data_0_V_read4_phi_phi_fu_336_p4;
        data_1_V_read5_rewind_reg_192 <= ap_phi_mux_data_1_V_read5_phi_phi_fu_348_p4;
        data_2_V_read6_rewind_reg_206 <= ap_phi_mux_data_2_V_read6_phi_phi_fu_360_p4;
        data_3_V_read7_rewind_reg_220 <= ap_phi_mux_data_3_V_read7_phi_phi_fu_372_p4;
        data_4_V_read8_rewind_reg_234 <= ap_phi_mux_data_4_V_read8_phi_phi_fu_384_p4;
        data_5_V_read9_rewind_reg_248 <= ap_phi_mux_data_5_V_read9_phi_phi_fu_396_p4;
        data_6_V_read10_rewind_reg_262 <= ap_phi_mux_data_6_V_read10_phi_phi_fu_408_p4;
        data_7_V_read11_rewind_reg_276 <= ap_phi_mux_data_7_V_read11_phi_phi_fu_420_p4;
        data_8_V_read12_rewind_reg_290 <= ap_phi_mux_data_8_V_read12_phi_phi_fu_432_p4;
        data_9_V_read13_rewind_reg_304 <= ap_phi_mux_data_9_V_read13_phi_phi_fu_444_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln64_reg_651 <= icmp_ln64_fu_463_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_index_reg_646 <= w_index_fu_457_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_651 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((do_init_reg_147 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_data_0_V_read4_phi_phi_fu_336_p4 = data_0_V_read4_rewind_reg_178;
    end else begin
        ap_phi_mux_data_0_V_read4_phi_phi_fu_336_p4 = ap_phi_reg_pp0_iter1_data_0_V_read4_phi_reg_332;
    end
end

always @ (*) begin
    if (((do_init_reg_147 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_data_1_V_read5_phi_phi_fu_348_p4 = data_1_V_read5_rewind_reg_192;
    end else begin
        ap_phi_mux_data_1_V_read5_phi_phi_fu_348_p4 = ap_phi_reg_pp0_iter1_data_1_V_read5_phi_reg_344;
    end
end

always @ (*) begin
    if (((do_init_reg_147 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_data_2_V_read6_phi_phi_fu_360_p4 = data_2_V_read6_rewind_reg_206;
    end else begin
        ap_phi_mux_data_2_V_read6_phi_phi_fu_360_p4 = ap_phi_reg_pp0_iter1_data_2_V_read6_phi_reg_356;
    end
end

always @ (*) begin
    if (((do_init_reg_147 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_data_3_V_read7_phi_phi_fu_372_p4 = data_3_V_read7_rewind_reg_220;
    end else begin
        ap_phi_mux_data_3_V_read7_phi_phi_fu_372_p4 = ap_phi_reg_pp0_iter1_data_3_V_read7_phi_reg_368;
    end
end

always @ (*) begin
    if (((do_init_reg_147 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_data_4_V_read8_phi_phi_fu_384_p4 = data_4_V_read8_rewind_reg_234;
    end else begin
        ap_phi_mux_data_4_V_read8_phi_phi_fu_384_p4 = ap_phi_reg_pp0_iter1_data_4_V_read8_phi_reg_380;
    end
end

always @ (*) begin
    if (((do_init_reg_147 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_data_5_V_read9_phi_phi_fu_396_p4 = data_5_V_read9_rewind_reg_248;
    end else begin
        ap_phi_mux_data_5_V_read9_phi_phi_fu_396_p4 = ap_phi_reg_pp0_iter1_data_5_V_read9_phi_reg_392;
    end
end

always @ (*) begin
    if (((do_init_reg_147 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_data_6_V_read10_phi_phi_fu_408_p4 = data_6_V_read10_rewind_reg_262;
    end else begin
        ap_phi_mux_data_6_V_read10_phi_phi_fu_408_p4 = ap_phi_reg_pp0_iter1_data_6_V_read10_phi_reg_404;
    end
end

always @ (*) begin
    if (((do_init_reg_147 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_data_7_V_read11_phi_phi_fu_420_p4 = data_7_V_read11_rewind_reg_276;
    end else begin
        ap_phi_mux_data_7_V_read11_phi_phi_fu_420_p4 = ap_phi_reg_pp0_iter1_data_7_V_read11_phi_reg_416;
    end
end

always @ (*) begin
    if (((do_init_reg_147 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_data_8_V_read12_phi_phi_fu_432_p4 = data_8_V_read12_rewind_reg_290;
    end else begin
        ap_phi_mux_data_8_V_read12_phi_phi_fu_432_p4 = ap_phi_reg_pp0_iter1_data_8_V_read12_phi_reg_428;
    end
end

always @ (*) begin
    if (((do_init_reg_147 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_data_9_V_read13_phi_phi_fu_444_p4 = data_9_V_read13_rewind_reg_304;
    end else begin
        ap_phi_mux_data_9_V_read13_phi_phi_fu_444_p4 = ap_phi_reg_pp0_iter1_data_9_V_read13_phi_reg_440;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_157)) begin
        if ((icmp_ln64_reg_651 == 1'd1)) begin
            ap_phi_mux_do_init_phi_fu_151_p6 = 1'd1;
        end else if ((icmp_ln64_reg_651 == 1'd0)) begin
            ap_phi_mux_do_init_phi_fu_151_p6 = 1'd0;
        end else begin
            ap_phi_mux_do_init_phi_fu_151_p6 = do_init_reg_147;
        end
    end else begin
        ap_phi_mux_do_init_phi_fu_151_p6 = do_init_reg_147;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_157)) begin
        if ((icmp_ln64_reg_651 == 1'd1)) begin
            ap_phi_mux_w_index3_phi_fu_167_p6 = 3'd0;
        end else if ((icmp_ln64_reg_651 == 1'd0)) begin
            ap_phi_mux_w_index3_phi_fu_167_p6 = w_index_reg_646;
        end else begin
            ap_phi_mux_w_index3_phi_fu_167_p6 = w_index3_reg_163;
        end
    end else begin
        ap_phi_mux_w_index3_phi_fu_167_p6 = w_index3_reg_163;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_fu_463_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_651 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_return = acc_0_V_fu_567_p2;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w11_V_ce0 = 1'b1;
    end else begin
        w11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_0_V_fu_567_p2 = (res_V_write_assign1_reg_318 + add_ln703_fu_561_p2);

assign add_ln703_fu_561_p2 = (trunc_ln708_s_fu_552_p4 + trunc_ln_fu_503_p4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_157 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_42 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_data_0_V_read4_phi_reg_332 = 'bx;

assign ap_phi_reg_pp0_iter0_data_1_V_read5_phi_reg_344 = 'bx;

assign ap_phi_reg_pp0_iter0_data_2_V_read6_phi_reg_356 = 'bx;

assign ap_phi_reg_pp0_iter0_data_3_V_read7_phi_reg_368 = 'bx;

assign ap_phi_reg_pp0_iter0_data_4_V_read8_phi_reg_380 = 'bx;

assign ap_phi_reg_pp0_iter0_data_5_V_read9_phi_reg_392 = 'bx;

assign ap_phi_reg_pp0_iter0_data_6_V_read10_phi_reg_404 = 'bx;

assign ap_phi_reg_pp0_iter0_data_7_V_read11_phi_reg_416 = 'bx;

assign ap_phi_reg_pp0_iter0_data_8_V_read12_phi_reg_428 = 'bx;

assign ap_phi_reg_pp0_iter0_data_9_V_read13_phi_reg_440 = 'bx;

assign icmp_ln64_fu_463_p2 = ((ap_phi_mux_w_index3_phi_fu_167_p6 == 3'd4) ? 1'b1 : 1'b0);

assign mul_ln1118_858_fu_584_p0 = mul_ln1118_858_fu_584_p00;

assign mul_ln1118_858_fu_584_p00 = phi_ln77_s_fu_512_p10;

assign mul_ln1118_fu_577_p1 = mul_ln1118_fu_577_p10;

assign mul_ln1118_fu_577_p10 = phi_ln_fu_469_p10;

assign tmp_3_fu_534_p4 = {{w11_V_q0[24:16]}};

assign trunc_ln708_s_fu_552_p4 = {{mul_ln1118_858_fu_584_p2[23:8]}};

assign trunc_ln77_fu_491_p1 = w11_V_q0[15:0];

assign trunc_ln_fu_503_p4 = {{mul_ln1118_fu_577_p2[23:8]}};

assign w11_V_address0 = zext_ln77_fu_452_p1;

assign w_index_fu_457_p2 = (3'd1 + ap_phi_mux_w_index3_phi_fu_167_p6);

assign zext_ln77_fu_452_p1 = ap_phi_mux_w_index3_phi_fu_167_p6;

endmodule //dense_resource_ap_fixed_ap_fixed_16_8_5_3_0_config11_s
