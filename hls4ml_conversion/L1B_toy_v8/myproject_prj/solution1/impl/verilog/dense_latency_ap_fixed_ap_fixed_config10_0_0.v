// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_latency_ap_fixed_ap_fixed_config10_0_0 (
        ap_ready,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        data_4_V_read,
        data_5_V_read,
        data_6_V_read,
        data_7_V_read,
        data_8_V_read,
        data_9_V_read,
        ap_return
);


output   ap_ready;
input  [15:0] data_0_V_read;
input  [15:0] data_1_V_read;
input  [15:0] data_2_V_read;
input  [15:0] data_3_V_read;
input  [15:0] data_4_V_read;
input  [15:0] data_5_V_read;
input  [15:0] data_6_V_read;
input  [15:0] data_7_V_read;
input  [15:0] data_8_V_read;
input  [15:0] data_9_V_read;
output  [15:0] ap_return;

wire  signed [15:0] mul_ln1118_8_fu_146_p0;
wire  signed [15:0] mul_ln1118_3_fu_147_p0;
wire  signed [15:0] mul_ln1118_4_fu_148_p0;
wire  signed [15:0] mul_ln1118_2_fu_149_p0;
wire  signed [15:0] mul_ln1118_fu_151_p0;
wire  signed [15:0] mul_ln1118_6_fu_152_p0;
wire  signed [15:0] mul_ln1118_1_fu_153_p0;
wire  signed [15:0] mul_ln1118_7_fu_154_p0;
wire  signed [15:0] mul_ln1118_5_fu_155_p0;
wire   [23:0] mul_ln1118_fu_151_p2;
wire   [23:0] mul_ln1118_1_fu_153_p2;
wire   [23:0] mul_ln1118_2_fu_149_p2;
wire   [23:0] mul_ln1118_3_fu_147_p2;
wire   [23:0] mul_ln1118_4_fu_148_p2;
wire   [23:0] mul_ln1118_5_fu_155_p2;
wire   [23:0] mul_ln1118_6_fu_152_p2;
wire   [18:0] shl_ln_fu_685_p3;
wire   [16:0] shl_ln1118_s_fu_697_p3;
wire  signed [19:0] sext_ln1118_7_fu_693_p1;
wire  signed [19:0] sext_ln1118_8_fu_705_p1;
wire   [19:0] add_ln1118_fu_709_p2;
wire   [11:0] trunc_ln708_s_fu_715_p4;
wire   [23:0] mul_ln1118_7_fu_154_p2;
wire   [23:0] mul_ln1118_8_fu_146_p2;
wire   [15:0] trunc_ln708_1_fu_600_p4;
wire   [15:0] trunc_ln_fu_585_p4;
wire   [15:0] trunc_ln708_4_fu_645_p4;
wire   [15:0] trunc_ln708_3_fu_630_p4;
wire   [15:0] trunc_ln708_2_fu_615_p4;
wire   [15:0] add_ln703_1_fu_765_p2;
wire   [15:0] add_ln703_fu_759_p2;
wire   [15:0] add_ln703_2_fu_771_p2;
wire  signed [15:0] sext_ln708_fu_725_p1;
wire   [15:0] trunc_ln708_6_fu_675_p4;
wire   [15:0] trunc_ln708_5_fu_660_p4;
wire   [15:0] add_ln703_4_fu_783_p2;
wire   [15:0] trunc_ln708_9_fu_749_p4;
wire   [15:0] trunc_ln708_8_fu_734_p4;
wire   [15:0] add_ln703_6_fu_795_p2;
wire   [15:0] add_ln703_5_fu_789_p2;
wire   [15:0] add_ln703_7_fu_801_p2;
wire   [15:0] add_ln703_3_fu_777_p2;
wire   [15:0] add_ln703_8_fu_807_p2;

assign add_ln1118_fu_709_p2 = ($signed(sext_ln1118_7_fu_693_p1) + $signed(sext_ln1118_8_fu_705_p1));

assign add_ln703_1_fu_765_p2 = (trunc_ln708_4_fu_645_p4 + trunc_ln708_3_fu_630_p4);

assign add_ln703_2_fu_771_p2 = (trunc_ln708_2_fu_615_p4 + add_ln703_1_fu_765_p2);

assign add_ln703_3_fu_777_p2 = (add_ln703_fu_759_p2 + add_ln703_2_fu_771_p2);

assign add_ln703_4_fu_783_p2 = ($signed(sext_ln708_fu_725_p1) + $signed(trunc_ln708_6_fu_675_p4));

assign add_ln703_5_fu_789_p2 = (trunc_ln708_5_fu_660_p4 + add_ln703_4_fu_783_p2);

assign add_ln703_6_fu_795_p2 = (trunc_ln708_9_fu_749_p4 + 16'd6);

assign add_ln703_7_fu_801_p2 = (trunc_ln708_8_fu_734_p4 + add_ln703_6_fu_795_p2);

assign add_ln703_8_fu_807_p2 = (add_ln703_5_fu_789_p2 + add_ln703_7_fu_801_p2);

assign add_ln703_fu_759_p2 = (trunc_ln708_1_fu_600_p4 + trunc_ln_fu_585_p4);

assign ap_ready = 1'b1;

assign ap_return = (add_ln703_3_fu_777_p2 + add_ln703_8_fu_807_p2);

assign mul_ln1118_1_fu_153_p0 = data_1_V_read;

assign mul_ln1118_1_fu_153_p2 = ($signed(mul_ln1118_1_fu_153_p0) * $signed('hD4));

assign mul_ln1118_2_fu_149_p0 = data_2_V_read;

assign mul_ln1118_2_fu_149_p2 = ($signed(mul_ln1118_2_fu_149_p0) * $signed(-'h4A));

assign mul_ln1118_3_fu_147_p0 = data_3_V_read;

assign mul_ln1118_3_fu_147_p2 = ($signed(mul_ln1118_3_fu_147_p0) * $signed('h5F));

assign mul_ln1118_4_fu_148_p0 = data_4_V_read;

assign mul_ln1118_4_fu_148_p2 = ($signed(mul_ln1118_4_fu_148_p0) * $signed(-'h6E));

assign mul_ln1118_5_fu_155_p0 = data_5_V_read;

assign mul_ln1118_5_fu_155_p2 = ($signed(mul_ln1118_5_fu_155_p0) * $signed(-'h45));

assign mul_ln1118_6_fu_152_p0 = data_6_V_read;

assign mul_ln1118_6_fu_152_p2 = ($signed(mul_ln1118_6_fu_152_p0) * $signed('h47));

assign mul_ln1118_7_fu_154_p0 = data_8_V_read;

assign mul_ln1118_7_fu_154_p2 = ($signed(mul_ln1118_7_fu_154_p0) * $signed('h9D));

assign mul_ln1118_8_fu_146_p0 = data_9_V_read;

assign mul_ln1118_8_fu_146_p2 = ($signed(mul_ln1118_8_fu_146_p0) * $signed('h57));

assign mul_ln1118_fu_151_p0 = data_0_V_read;

assign mul_ln1118_fu_151_p2 = ($signed(mul_ln1118_fu_151_p0) * $signed(-'hB0));

assign sext_ln1118_7_fu_693_p1 = $signed(shl_ln_fu_685_p3);

assign sext_ln1118_8_fu_705_p1 = $signed(shl_ln1118_s_fu_697_p3);

assign sext_ln708_fu_725_p1 = $signed(trunc_ln708_s_fu_715_p4);

assign shl_ln1118_s_fu_697_p3 = {{data_7_V_read}, {1'd0}};

assign shl_ln_fu_685_p3 = {{data_7_V_read}, {3'd0}};

assign trunc_ln708_1_fu_600_p4 = {{mul_ln1118_1_fu_153_p2[23:8]}};

assign trunc_ln708_2_fu_615_p4 = {{mul_ln1118_2_fu_149_p2[23:8]}};

assign trunc_ln708_3_fu_630_p4 = {{mul_ln1118_3_fu_147_p2[23:8]}};

assign trunc_ln708_4_fu_645_p4 = {{mul_ln1118_4_fu_148_p2[23:8]}};

assign trunc_ln708_5_fu_660_p4 = {{mul_ln1118_5_fu_155_p2[23:8]}};

assign trunc_ln708_6_fu_675_p4 = {{mul_ln1118_6_fu_152_p2[23:8]}};

assign trunc_ln708_8_fu_734_p4 = {{mul_ln1118_7_fu_154_p2[23:8]}};

assign trunc_ln708_9_fu_749_p4 = {{mul_ln1118_8_fu_146_p2[23:8]}};

assign trunc_ln708_s_fu_715_p4 = {{add_ln1118_fu_709_p2[19:8]}};

assign trunc_ln_fu_585_p4 = {{mul_ln1118_fu_151_p2[23:8]}};

endmodule //dense_latency_ap_fixed_ap_fixed_config10_0_0
