// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_latency_ap_fixed_ap_fixed_config10_0_0_HH_
#define _dense_latency_ap_fixed_ap_fixed_config10_0_0_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct dense_latency_ap_fixed_ap_fixed_config10_0_0 : public sc_module {
    // Port declarations 12
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > data_0_V_read;
    sc_in< sc_lv<16> > data_1_V_read;
    sc_in< sc_lv<16> > data_2_V_read;
    sc_in< sc_lv<16> > data_3_V_read;
    sc_in< sc_lv<16> > data_4_V_read;
    sc_in< sc_lv<16> > data_5_V_read;
    sc_in< sc_lv<16> > data_6_V_read;
    sc_in< sc_lv<16> > data_7_V_read;
    sc_in< sc_lv<16> > data_8_V_read;
    sc_in< sc_lv<16> > data_9_V_read;
    sc_out< sc_lv<16> > ap_return;


    // Module declarations
    dense_latency_ap_fixed_ap_fixed_config10_0_0(sc_module_name name);
    SC_HAS_PROCESS(dense_latency_ap_fixed_ap_fixed_config10_0_0);

    ~dense_latency_ap_fixed_ap_fixed_config10_0_0();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<16> > mul_ln1118_8_fu_146_p0;
    sc_signal< sc_lv<16> > mul_ln1118_3_fu_147_p0;
    sc_signal< sc_lv<16> > mul_ln1118_4_fu_148_p0;
    sc_signal< sc_lv<16> > mul_ln1118_2_fu_149_p0;
    sc_signal< sc_lv<16> > mul_ln1118_fu_151_p0;
    sc_signal< sc_lv<16> > mul_ln1118_6_fu_152_p0;
    sc_signal< sc_lv<16> > mul_ln1118_1_fu_153_p0;
    sc_signal< sc_lv<16> > mul_ln1118_7_fu_154_p0;
    sc_signal< sc_lv<16> > mul_ln1118_5_fu_155_p0;
    sc_signal< sc_lv<24> > mul_ln1118_fu_151_p2;
    sc_signal< sc_lv<24> > mul_ln1118_1_fu_153_p2;
    sc_signal< sc_lv<24> > mul_ln1118_2_fu_149_p2;
    sc_signal< sc_lv<24> > mul_ln1118_3_fu_147_p2;
    sc_signal< sc_lv<24> > mul_ln1118_4_fu_148_p2;
    sc_signal< sc_lv<24> > mul_ln1118_5_fu_155_p2;
    sc_signal< sc_lv<24> > mul_ln1118_6_fu_152_p2;
    sc_signal< sc_lv<19> > shl_ln_fu_685_p3;
    sc_signal< sc_lv<17> > shl_ln1118_s_fu_697_p3;
    sc_signal< sc_lv<20> > sext_ln1118_7_fu_693_p1;
    sc_signal< sc_lv<20> > sext_ln1118_8_fu_705_p1;
    sc_signal< sc_lv<20> > add_ln1118_fu_709_p2;
    sc_signal< sc_lv<12> > trunc_ln708_s_fu_715_p4;
    sc_signal< sc_lv<24> > mul_ln1118_7_fu_154_p2;
    sc_signal< sc_lv<24> > mul_ln1118_8_fu_146_p2;
    sc_signal< sc_lv<16> > trunc_ln708_1_fu_600_p4;
    sc_signal< sc_lv<16> > trunc_ln_fu_585_p4;
    sc_signal< sc_lv<16> > trunc_ln708_4_fu_645_p4;
    sc_signal< sc_lv<16> > trunc_ln708_3_fu_630_p4;
    sc_signal< sc_lv<16> > trunc_ln708_2_fu_615_p4;
    sc_signal< sc_lv<16> > add_ln703_1_fu_765_p2;
    sc_signal< sc_lv<16> > add_ln703_fu_759_p2;
    sc_signal< sc_lv<16> > add_ln703_2_fu_771_p2;
    sc_signal< sc_lv<16> > sext_ln708_fu_725_p1;
    sc_signal< sc_lv<16> > trunc_ln708_6_fu_675_p4;
    sc_signal< sc_lv<16> > trunc_ln708_5_fu_660_p4;
    sc_signal< sc_lv<16> > add_ln703_4_fu_783_p2;
    sc_signal< sc_lv<16> > trunc_ln708_9_fu_749_p4;
    sc_signal< sc_lv<16> > trunc_ln708_8_fu_734_p4;
    sc_signal< sc_lv<16> > add_ln703_6_fu_795_p2;
    sc_signal< sc_lv<16> > add_ln703_5_fu_789_p2;
    sc_signal< sc_lv<16> > add_ln703_7_fu_801_p2;
    sc_signal< sc_lv<16> > add_ln703_3_fu_777_p2;
    sc_signal< sc_lv<16> > add_ln703_8_fu_807_p2;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<24> ap_const_lv24_57;
    static const sc_lv<24> ap_const_lv24_5F;
    static const sc_lv<24> ap_const_lv24_FFFF92;
    static const sc_lv<24> ap_const_lv24_FFFFB6;
    static const sc_lv<24> ap_const_lv24_FFFF50;
    static const sc_lv<24> ap_const_lv24_47;
    static const sc_lv<24> ap_const_lv24_D4;
    static const sc_lv<24> ap_const_lv24_9D;
    static const sc_lv<24> ap_const_lv24_FFFFBB;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<16> ap_const_lv16_6;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_add_ln1118_fu_709_p2();
    void thread_add_ln703_1_fu_765_p2();
    void thread_add_ln703_2_fu_771_p2();
    void thread_add_ln703_3_fu_777_p2();
    void thread_add_ln703_4_fu_783_p2();
    void thread_add_ln703_5_fu_789_p2();
    void thread_add_ln703_6_fu_795_p2();
    void thread_add_ln703_7_fu_801_p2();
    void thread_add_ln703_8_fu_807_p2();
    void thread_add_ln703_fu_759_p2();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_mul_ln1118_1_fu_153_p0();
    void thread_mul_ln1118_1_fu_153_p2();
    void thread_mul_ln1118_2_fu_149_p0();
    void thread_mul_ln1118_2_fu_149_p2();
    void thread_mul_ln1118_3_fu_147_p0();
    void thread_mul_ln1118_3_fu_147_p2();
    void thread_mul_ln1118_4_fu_148_p0();
    void thread_mul_ln1118_4_fu_148_p2();
    void thread_mul_ln1118_5_fu_155_p0();
    void thread_mul_ln1118_5_fu_155_p2();
    void thread_mul_ln1118_6_fu_152_p0();
    void thread_mul_ln1118_6_fu_152_p2();
    void thread_mul_ln1118_7_fu_154_p0();
    void thread_mul_ln1118_7_fu_154_p2();
    void thread_mul_ln1118_8_fu_146_p0();
    void thread_mul_ln1118_8_fu_146_p2();
    void thread_mul_ln1118_fu_151_p0();
    void thread_mul_ln1118_fu_151_p2();
    void thread_sext_ln1118_7_fu_693_p1();
    void thread_sext_ln1118_8_fu_705_p1();
    void thread_sext_ln708_fu_725_p1();
    void thread_shl_ln1118_s_fu_697_p3();
    void thread_shl_ln_fu_685_p3();
    void thread_trunc_ln708_1_fu_600_p4();
    void thread_trunc_ln708_2_fu_615_p4();
    void thread_trunc_ln708_3_fu_630_p4();
    void thread_trunc_ln708_4_fu_645_p4();
    void thread_trunc_ln708_5_fu_660_p4();
    void thread_trunc_ln708_6_fu_675_p4();
    void thread_trunc_ln708_8_fu_734_p4();
    void thread_trunc_ln708_9_fu_749_p4();
    void thread_trunc_ln708_s_fu_715_p4();
    void thread_trunc_ln_fu_585_p4();
};

}

using namespace ap_rtl;

#endif
